<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Launch the Application" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0Q0O0M0K0I0	&#x6;&#x5;+&#xe;&#x3;&#x2;&#x1a;&#x5;&#x0;&#x4;&#x14;�㕢)����&#x1f;�&#xc;&#xb;N�	���&#x4;&#x14;�k�ꨪ��y��&#xf;��ŕv��&#x2;&#x10;&#x6;�&#x3;s�&#x6;C�&#x1e;�`�}&#x3;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ocsp.digicert.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/ocsp-request</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/top-sites/1/3f0e7053-be19-468f-9ef5-8dc0fabee9d8-2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�:&#x10;�&#x17;&#x1;wU3%��D&#x3;&#x17;&#x17;�&#x13;��&quot;E��~l&#x4;&gt;&#x1d;:2��T��_R�&#x1b;A&#x17;&#x5;&#x4;I�&#x19;�&#x1c;��3��V�M��l�ɯȊ�hR�&quot;�q�S;&#x11;M�&#x18;�	�&#x5;���&#x18;NP�&#x5;f�&#x4;F�Hh�&gt;&#x6;�&#x18;ݠt&#x12;��ٷ��&#x18;�l( �Nh�&#x1a;m�Nm&#xc;q�&#x17;(����8Ы&#x3;1&#x1c; 4&#x6;���s�&#x10;5D�[_�5�y���&#x19;2$�!0�/��@q�&#xb;,&#x19;�	f �X&#x1;&#xd;
��A���(�0G�&#x1f;w�m@�Վv����ߣ�k=*.�m&#x1b;W�ͭ�&#x14;�3��P�-�ϓ�&gt;B�&#x10;sN&#xd;
&#x4;`�I�҂&#x2;*y&#x6;8�%�&#x11;C8�&#x3;&#x14;+L&#xb;&#x8;&#x7;N�b&apos;�y�KN�&#x1c;SX&#x14;1&#x18;&#x17;)�&#x5;&#x5;&#x1;E&#xe;&#x19;`&#x18;RI1�&#x18;�&#x7f;�ه�&#x6;&#x19;��X�)&#x12;�	�&#x5;x��&#xb;r&#x18;N)��&#x3;6N&#x10;H�&apos;&#x7;���&#x4;AƠ�9ƅ�4���?�2�/,U��U�Suȗ%&apos;�$�a�4oz{tT��Qa�	�0�F��ȉ&#xb;&#x10;&#x11;�!��=�&#x6;���|&#x19;�&gt;&#xb;iۊ�&#x12;�E�#��x�?�&#xc;R�&#x5;�P��4&#xe;N�n�&#x13;�u&amp;��&#x17;�j�z{�&#x15;&#x11;-���rpeۚ&lt;V&#xf;�&#x4;�&#x4;4h�o�&#xc;�o��[Ie��L����j�I�����b��:S&#xf;\5me=${bDhTX&#x1;�+�u����_}&#x3;Ov.-N�p_�6p�������� �����le�񇲽[�W�\^�&#xd;j��\�&#x5;�҅l�2�&#x16;����Gy^&#x1c;Jݯ�Y��b�R�����wj����r��&#x15;�ʹ^�i�Ϥ|~U&#x1c;.��������G�&lt;��x�N�z~���Y&#x7f;��ʥ�Ƚ͠o�e�睚ůq;��C��rG&#x6;������&#x5f9;f���&#x7f;n���&gt;�&lt;�N�N�&#x16;���x���|sa������볕Ǩ�&amp;�=���&gt;}���y3��������&#x1d;9��7�z�כ��&#xf;&#xb;�I&#xe;�:&#x18;�`��CsGob	�-wʆY�Ȏ&#x1c;&gt;���E����i���|��&#xc;&#x1b;4&apos;zGh�s�&#x11;�{�&#x0;���a�PX�]���&#x1f;6���N&#xd;
%�`N&#x1;&#x13;4��$À`&#x19;^��0�&#x8;S&#x19;&#x4;�?&#x13;�ͶY&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/top-sites/1/3f0e7053-be19-468f-9ef5-8dc0fabee9d8</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:25 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/newtab/1/81fd3d49-7d88-4151-a913-f56672d24b7e-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�Ŗ�n�8&#x14;@�E�&#xd;&#xd;.��?���`&#x1e;�B�H�!*�*I%u&#x3;��\J���&#x6;��&#x2;�!�w9w�&#x1e;���Mcl��c&#x16;��l��M&#x16;��f��uF1e&#x8;sD�-�kR&#x7f;�Ś��&amp;�V������&#xb;z��Z&#x4;gA��(�&amp;�&#x10;��&#xd;�&amp;&#xb;�&#x7;����!���&#x1e;���|D^����w}�ƘN[/��&#x3;Sڊ���$=Y�^$��&#x1b;&#x12;�5�v&#xc;G�&#x4;�����&#x14;�K����&#xd;
ɒ&#x11;���E\�&#x2;1��ĝ�8���&#x1e;R����B&#x11;��:��E$�l��� �&#x1c;��lq]STֹBy�&#x5;�+,���Z�&#xb;�ZP���@���)w&#x1;m�Ƌ&#x8;���C�&#x1e;�&#xf;�&#x15;&quot;�|# ��Ҽ�H1.Q^�&#x1a;՜��&amp;��&#x8;Ÿ&quot;䧀�&#x0;TJ�0�؛�]�&#x8;&#x12;�#br���u�+%j�pUt�C(Z۩&#x2;)E;^&#x11;I8m&#x1;%��ހֱ���k��ڴ�铽���*u���Q&quot;&amp;&#xd;
�+�08!�&#x18;��ߧ�&#x1f;&#x4;;�Cl�h&#xf;�s�&#x5c8;����X�&#x1e;�쥱��&gt;[&#x13;���ĕ��5e��&#x1a;�RBK&#x14;%���[R��Z�&#xb;��D&#xc;C#�&#x7;�e0��ʄ�&#x17;��^��&#x1a;���&#x10;&#x14;�s&#x7;3��;�,��&#x13;5�IA*Fr:ɞ���&quot;��3Q�8�&#x14;���l�&lt;�ܦD&#x1a;9Ml�&#x1c;��t98�U�&#x15;T�&#x6;�jBt�����&#xd;
n�&#x1f;��A΄&amp;��&#x5;9&#x3;��&#x3;��Kb&#x15;t�z�&#x18;�&#x10;�&apos;���l����&lt;O&#xd;;�2&lt;f��&#x8;�[&#x1d;{du^$�˲�h�H-��pI&#x11;&apos;y�t�&#x19;�j&#x95;�))�Fa�����&#xe;&#x1e;}J���5&#x2;)�Mۛ0��&#x12;h�&apos;bH�&#x1c;&#x11;�~�r&#x14;&gt;��s[=��n$t����q&#xb;�&#x6;Y�����t���;K�kI��X�R�&#x13;c&#x1f;��9��s&#x1b;ؤ-R/�&#x7;o���&#x13;�e�_��V����?C*`���d;dk&#xc;�&#x7f;��-$�bz��A[�Η����@.g��%&apos;�ւ �;�v�B&#x1c;W%b4�B&#x17;L���S(n�2Y&#x15;-,���&#xb;О&#x0;��	ѡj&apos;&amp;X�~~_]�kp�3&#xf;Y&#x5;�i&#x6;&#xe;���[&#x1a;�_Q�=�1����&#x14;&#x7f;t&amp;/b=�/�E��UZ&#x1e;�=h�e*��&#x15;��B�&#xd;
�&#x6;&gt;&#x18;�Ş؊&#x1f;��g9}s�/&quot;bo��&#xc;��&#xe;�k��]#�&#x17;JL�1��&gt;g�	�&#x5;c��f&#x1f;Q��m,�j��&#xf;���)&#x7f;�Z�5&apos;��qA�Iz�W�s�&#x1a;ל�U��/&#x11;ٻp�/�����?g&#xf;u�d&#xf;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/81fd3d49-7d88-4151-a913-f56672d24b7e</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:26 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/84f14d69-a23e-46a3-944a-f84a0fd9e066-4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��TMO�0&#x10;�/�&#x16;S;���8����&#x12;K�&#xb;R��]����&#xe;�&#x16;��;�&#x82;�&quot;E�3�f�����hr~�9oG��G��B+F�PL&quot;�.���&#x15;*HQb�qA�i�*�&#xf;�^�&#x4;�!���1w�	��)�	�	B&#x1b;&#x1c;�1�n�M8�}?�)&apos;e&#x10;^m�[&#xd;
F�\�4HA��&#x19;���5`,�Z&#xb;F1ik�+�$�V�X���*�&#xb;	�i?e~�&#xd;r��a&#xf;&#xf;��&amp;LXh�Lo&#x6;���$&#x15;5�&#x4;�7�&#x8;�H�X�&#x1b;Vi b&#x4;f-QXq&quot;��V�m&quot;*�b7Lc&#x0;1����$&#x13;��&#xd;~F��t���k��WRY��jJ�+&#x1;�qQ	\R�&#x14;���-����э&gt;����%Xb�x��o&#x11;4��y�h�$H��5�*�K�pU+�&#x19;/&#x1b;̨5�&#x16;���&#x2;�E��A�ѻ�m�������_]����C�BL]�}�Ezv,�&#x5;;zu)z�S�&#x12;L�^�����|X�&#x0;&#x14;�t���&#x10;Fkږ�* 9���&#xf;�����gwkB�27=����ũ&#x17;��I�&#x0;��1���{�C��&#x14;9&#x1e;��%��&#x1c;2�;�tM&#x5;��aځS��A��V���&#x6;��*N-�/��o�j01�M&gt;�q&#x1f;�&#x19;��m&gt;o+t������oݗ������&#x1a;���^���=��6�&#x5;���#����&#x12;�Y\����(�&#x1e;�&#xb;5^�&#xd;
���L���e�-&#x8;t�v[�&quot;�f�&apos;&#x1;&quot;ޠS&#x13;&#xf;&#x1;ӹ�����3�9&#x7f;��&#x1;�&#xf;&#x10;&#x3;n&#x7;&lt;���%X�J&#xd;
�O&#xd;&#x1e;�mY�F&#x13;�0aYA�l�?�&#x1b;�&#xb;b&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/84f14d69-a23e-46a3-944a-f84a0fd9e066</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:27 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/baseline/1/bc1caf48-c030-4741-b3ae-530de2654255-5" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n� &#x10;�&#x17;��X��&#xd;��}���&#x16;�&#x4;��^�i�U�}&#x7;��h&#x15;U��(f��9&gt;3�G5��&#x1f;|pS�����S�h�\�,c&#x1e;�?�jWQL&#x1b;�&#x5;�����&lt;�v��깲�&lt;ȡx�n9��4&#x5;Ȑ:��-���F@��6�8#iP��=�&#x1c;�(N�8-�&#x4;U�A&#x1f;&#x0;����|��(K̆�X��2���&#x14;朢�3���&#x12;�&#x1e;k�&#x5;VN	�j�&#x0;��s�&#x1b;�Q-�J���\-�&gt;JcQ��&lt;��!?&#x14;��r!������&#x12;&#x1d;&#x16;�HN&#x10;�[&#x7;&#x12;�Bʙ&#x16;&#x19;C��&amp;��U�N&apos;��&#x14;A&#x3;�&quot;�}��&#x6;�F�n��أ&#x5;S�a�t�&#x10;�$p&#xb;�$j&#x8;�&#x1a;;�&#xb;���&#x7;&#xd;
ې�&#x14;&#x12;:zp*�_��E��+�A�t?��&#xf;M#��p&#x1a;�Fh�Z�&#x11;&#x17;M�8q�&#x11;�qO&#x8;&#x8;\m&#x1b;=���|��!��A-~,�ڦ�u�L9σ�i&#x1e;�y8�X^�Б&#xe;�M�G}���Ģ�wC��|���~�`���&gt;ޣo�/|e30&apos;-�&#x1b;��WP&#x1f;d&#x8;v��W&#x7f;�|&#x5;&#xc;F��FD�&#x11;�I!/&#x18;�����&#xb;��ǔ���K�|&#x1c;Q~]��Mߦb&#x8;�Q�X�����T�1N&#x1b;�a��N�ڴ&#x1d;���G�2&amp;�2���&#x2;o��^�&#x1b;��%�R��&#x17;Hl�m�˽-=��=�{A�B6)��&#x14;��j�{����-��&#xe;�t�z�!�%�&#x6;�(&#x12;�1d�h��&#x13;a$.:F�&#x0;o�;&#x11;{p0�&apos;9z�Ne]�4�E&#x1d;}�v�V����&#x14;m&#x8;&#x1b;�&#x14;k&#x1f;V�&#x0;W^1�R�&#x2;�Ͳ�zA��&#x1f;@7&#x10;&#x7;2&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/bc1caf48-c030-4741-b3ae-530de2654255</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:28 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/baseline/1/95142c65-e6ee-4995-a8a0-78f523bcba55-6" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�0&#xc;����&#x4;%&#x10; �&#xf;���&gt;�\�4*&#x13;�$������0�L�&#x1a;�i%� ����&#x13;��Շ��ô��$�M��9��u�c�&apos; &#x3;�Y�P�h]?�zh�&#xf;�&#xe;&#xd;#&#x7;&#x2;���&#x11;��&gt;&#x11;tZ&#x2;zh��3&#x14;��&#xd;
&#x11;Q!��&#x13;^3�䗐��&#x1f;���I=&gt;�u����?::�yG�2�˖&#xb;�D&#x1d;�#F�K�x���Q&#x17;[&gt;��Q�&apos;��+��-�%�O�v^7=��R�(KEk%����&#x13;L�f�眼�&#x1f;ȶ&quot;+&#x7;4�K���1�%���\�&#x7f;��Oʉ)����D����ɵԹzR=�\�&#x6;��&#xb;(Tlz��K�&#x19;;&#xb;w�@�f&#x6;z����U�؉9j��S����Bӆ3k��z�䷜&#x12;ĕjG3&#x12;:A���&lt;&apos;=u�IY�N&#xd;
�M&#x3;Me�,����(�Zg��ޞ�#��+�1���l~.�ڦbUQ�&#xf;nyI&#x17;�&#x18;���H&#x6;��ho�&#xd;
BȺ�&#x1d;&#x3;�t&#x16;&#x19;�&#x1d;2&#x0;��&#x10;z2N��a�&#x5;�L~]���3�&quot;�&quot;�KJ��W&#x1e;��0�[�7\��&#x18;��`�&#x16;K_^e7v�&#x3;d&#x1f;u&#x8;0����?ΝO��_3�&#xe;�k�&gt;���&#x18;�0:�owT��v�/�&#x7f;ع�&#x19;e�N��ذ??�7�ޖFz���m+my#3&#x1c;�=W�6W_�V&#xb;�M}�Q.5j�u5U\&#x8;&#xd;
�j�^r��&#x1e;w�&#x6;�n��&#x16;r&#x19;�&#x1b;9b���&#x18;�X��g�F\H���`&#xb;f&#x1f;�r�ec��0�Ÿ#�Ӫl�4�͜|ΰ���&quot;�T��&gt;�&#x13;M��D&#x6;q &#x1;^�6�&#x8;Q��J&#x13;&#xe;%��Ea7�&amp;�!V&#x10;��&#x8;E��e��J�O&#x5;Ъ�=�-�K��ҡn�&#x2;��f�&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/95142c65-e6ee-4995-a8a0-78f523bcba55</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:28 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/baseline/1/814683d4-186a-4d56-bc96-2c59cb1e3747-7" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;����n�0&#x14;�߅���67�7�}�Y&quot;_&#xe;�Ub&#x18;ۤ�T}�9�&amp;�FQW�&#x10;�s�����bq�08?�E�^D�]��?&#x15;1����NP�&#x5;��&quot;T&#x12;Ο&#x19;�y��6}E��&#x2;�}&#x14;��J�b&#x2;�8{�P&amp;�3䬷&#x5;&#x2;f�&#x14;sOxKࣛ}$&apos;w&#x8;*�+qx��9$����`	c-	�4�k�I:(o�X��&gt;�}+��ʾtY2�w&apos;��[R����O�~ƫ&#xe;�h���!uc&#x4;&#x11;�j�`#��S�1V||&lt;&#x15;�T&#x16;H\�4��1=&#x4;I��)&#x17;�G���H��J0B�f$�&#x16;���6�Z&gt;ʎ&#x19;&amp;����?�Q&quot;��(K&#x12;Lp�&#x14;.�Y&#x13;5��&#xd;
�I+j�����!FR=jI&#x1b;c�&#x6;b��:��,*�C&#x12;�JO@���&#x11;��Z��Zbڊ�Z�8RՊT�&#x1a;CG�I)�&#x11;g��&#x1c;V���JC�/�^ݔ�4UI˼27�`U����(�8&#x19;�Li��?�&apos;&#x6;�.�4��_���.&#x8;�Z�jYn&#x1d;��&#xd;
ְ�b5�tZ&#x17;�I]�3���sK�&quot;I��&#x19;7B��y;����&gt;j��%�Qy&#xf;&#x13;&#x1a;?5��`�.�Ik�do�&#x1d;�&#x1a;�{��i��IC(z&amp;i�|�ak�+�R Ukp�M�#&#x7;�dM]�Q[�([��YHg�&#x1d;k�է\.O&#x1a;�@(�&#x1f;�&#x1;�,�}��`^0��&#xd;��N��&#x4;&#x7;e.�m,�=&#x7;�M;v�%L(�&#x1b;��D��&amp;0ʪ�&#x4;�V��1)��v��8�&#x18;��&#x10;�P:&#x7f;V��&#x3;&#x1e;`yTW�F�&amp;硴�~��d�s�جe&gt;&#xd;�&#x10;W}r)�F}M�&#x19;x�&#x5;P!a�2&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/814683d4-186a-4d56-bc96-2c59cb1e3747</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:29 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/efb67db7-cd48-4139-9700-16250ad55247-8" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��TMo� &#x10;�/\���O�&#x1e;z��I�K$��a&#x17;Ջ]�I�Q�{��ݍ&#x1a;+�*!&#xb;&#xf;of�&#xc;oxF�u��:3��&#x19;&#x5;��:^lP���&gt;�&#x3;�&#xe;&#x15;�(1�(�&#x8;���&#x3;����&#xd;&#x2;�W0��Jv�&lt;M�&#x13;�Ő3�S&#x4;&#x17;��&#x2;&gt;&#x61d;&#x17;1m�M�0�&gt;�G�Kx�)m�&#x1f;�a�cv�^8�OY��b�/a�&#x17;K@��9�&#x17;�&#x10;�([�Fa]r��Z1�x�`F&#xd;&#x18;Z&#x10;�R���qʬ�=�9\R��l�&lt;%V&#x1a;p��8��&gt;�&#x12;�&#x1e;D�Iߡb&#x8;�Z0�I[&#x1b;\I&amp;�4��Z&#x17;��TQ^�w�&#x4;�&#x13;&#x16;&#x1a;G&#x18;�&#x0;�&#x1f;��&apos;�!7&#x7f;&#x13;&#x14;����&#x2;7�҉ &#x8;�Z���D&#x1a;�I��\�����|�&quot;&#x2;�2&#x1;&apos;�&#x0;���&#xf;N�WR&#x19;��jJ�+���E%pI�R��s�8-�&#x6;��.ڽt�&#xf;�G/g;�xuyCn�&#xe;��!�~v�&#x16;�X���V&#x1f;���c89�n&gt;H𨣜T�&#x6;	��6�����O��*9�i�d�1	�5mKZ&#x15;�C�&#x17;������K�1&#xd;&#x3;�~Jw�i&#x1b;�A&#x1c;�&#x7;�y&gt;��i�ȗ&#xb;���TЉ�&#x18;�[�I�&#x1a;�#�[և�R�rW�Z�/�����&#x1;B&#x10;�&lt;��&#x18;&quot;&#x1c;n�֣{��M-o&lt;�Q�&#x1;����n�&#x10;�G�C�n�������~ݮ�G謐�i&#x8;փƋw�&#x15;�$�U�&#xb;��#� �=R�ߣ�&#x1c;&apos;&#x3;�6_��(r�y�&#x7f;+q�~}��N��\Bi��c#i��:�(�-k�h&#x2;&#xd;&#x13;�&#x15;�β�&#xd;9Z.�P&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/efb67db7-cd48-4139-9700-16250ad55247</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:29 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/baseline/1/f7075550-9246-4892-b7a8-25d0cf122ea5-9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n� &#x10;�&#x17;��X�o�?��J�hq&#x19;&#x12;T&#x7;{&#x1;��V��&#x1d;�6�VQUɲlf���1o���~�����J����JY�&lt;f&#x7f;�jWq�&#x1b;B%����]�&#x1e;h�kh�XA��z���מ&#x8;*�&#x1;;���&#x4;&#x5;��@DTȩh��&gt;*&#xb;$-s����I��i^s)ꨂ9 :#O.�� GU���&#x14;���zMWX�U�K�/�uG��J0B�ΑV&#xb;M��&#x1d;��;90�$���;~5ą(K2Lp�&#x1c;�w��9d\�j�?A�zM��&#x17;�EAPD&#xc;�&#x10;#�vZ��X�����&#x11;$���&#x1c;&#x12;9z&#x1c;O�G��:.s����U�&#x12;���&#x1a;��&#x18;o&#x6;��&#x10;�HC��&#x8;&quot;d�&#x13;�&#x1c;8�)&#x1d;&#x18;�&#xc;�t�4&#x13;qX*�]&apos;&#x10;���ܺ�&#x19;���6�Zb���V�.I�*�0j&#xc;uv�R|3�������6��&gt;�z�S�隚�%��ǔǸ�Ѫ|˰ \\ӻ�&gt;�L&#xe;�P�&#x11;{�t�]&#xf;�&#x1d;&#x1b;ղ\&#x15;&#xd;
&#xf;&#x15;�cC�Z��9�&apos;�e?&#xb;�E�&#x0;�Oˤ�_��GwM�Gs�&#x19;L^c�~&#x15;�ط&#x1b;&#x17;�����/��&#x1c;T&#x8;0���^��˥��i&#xc;�QC�vLҶ�ͩ�m&#x5;oLO�4���v=f&#x15;�um����S��ٖAz����ҨcG3�!&#x17;ڷj����&#x18;�X�pR��#�!el�E��&amp;&#x1f;���%�h&#x7;y/�&#xd;����@JcZ���&#xc;v��&#x7;� �6�tuď�XCث=�,&#x557;s&#x6;�%�.&#x12;��7�	�ʜ�k,�s����{&#x84;�C���Hֶ&#x4;�l�A0i&#x15;-1�&#x7;��z&#x1a;2&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/f7075550-9246-4892-b7a8-25d0cf122ea5</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:30 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/2e00b033-aa77-4f70-94f3-d9a25094d5b7-10" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n� &#x10;�&#x17;^��`|&#x1;�V��&#xf;m�$m�fq�E�b&#x17;p�m�&#x7f;/ع���&#x10;ɲ�̙�3�&#x19;&#x1e;�hݮ��&#xc;�}&#x0;A�&#x6;-+7 D�c&#x17;�A�&#x16;&#x14;� &#x10;1X&#x14;W�h	���� �&#x1;ک5&#xc;iQ�&#x1f;�O&#x18;&#x17;C�0�;ϕ�a&#x1c;bow�&#x8;����&#x14;�Sx��&gt;e�^�c�&#x4;����1Wr� ��&#x12;�Y�sFoU�&#x1b;Ĕ�&#x14;C�T&#x6;��&#xd;
(���R�a&#xd;��&#x15;&#x2;&lt;&gt;Ή�&#xb;vp&#x1;&#x1e;lb&#x15;�&#x11;��&#x1d;��Gxg�p� ��*E9���o	�C&#x4;&#x17;���H�&#x8;���$���&#x1a;Rl��&#x5;B&#xd;�)|��LP��g2^��&#x7;��D;.z&#xd;_�&#x1f;&#x10;M�RH�&#x14;�5���I4�K&#xe;	FR&quot;�&#x1a;���)h?B�`L�&#xe;:��&#x7;��&#x16;��&#x2;ִT�4��A&#x12;J��&#x11;&#xc;UR���3��۔�ev_&#x18;uA�tb�}�S�&#x13;t����:5܅�ѹ� �&#x7;-f��6�{��Q�8�\��]]��&#x5;�x�V�&#x1a;&#x4;Q�+|�P;&#x7f;��&#x7f;&#x2;&#x1a;�C�����&gt;PX�n&#xb;&#x1f;�N�0����j�&apos;/g�ubH�&#x7f;H&#xb;&#x2;�&#x17;�Op����&gt;ٟ&#x6;`���^����seDq�&#x1b;��&#x2;$��*V�E����&#xe;:&#x4;�˫&#x1f;�!���bН�)�g��B&#xd;
s�Ux?H��y���K�y�&#x10;���q����;�^�����~nO����;�t���5���/B&#xb;�_�_�^^nϿ���0y���k~����H�^�iʬW�N��-�-}1��!i*��驩�r��T�VHה&#x1b;Z�*&#xf;�_t&lt;sjf&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/2e00b033-aa77-4f70-94f3-d9a25094d5b7</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:30 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/5918aca4-b09d-4f58-b67f-682578a83750-11" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��TKo�0&#xc;�/�.�$?%�v�a�&#x1;i�]&#xd;
&#x18;z&amp;�&#x1c;ٓ�Y��&gt;�IӢ�.�&#x0;àɏ�Ǘ��dݮ�Ό�{FA�D&#x1d;k6(D�c&#x1f;�A�&#xe;&#x15;�(&#x1;3(�;Rv�����h��Sk����+�i�&gt;a\&#xc;9�&#xc;&#xf;`&#xf;��#x=h&#x1e;4�q&#x18;�9f����}&#xd;
�&#x1d;&#x17;��W�&#x12;)z�Q�8��&#x1e;�&#x1c;��N�s�/*�%��4X�lJ&#x2;&#x15;�&#x2;&#x18;�8�&#x4;K��j&#x19;��tJ�j?&#x1;W&#x10;&#x13;�����JI�.&amp;�?&#x10;�&#x11;��&#x2;&#x1a;Z)���@[,A2,�`��J,DR`�&#x1d;]���y&#x1e;�&#x8;ֽ4����^&#x1;!�&#x7f;&amp;H����HP%�PՒ&#x2;ee&#x3;�&#x18;mH�qK�Bp�&#x12;+�!Lc&#x1c;�n&#x1f;W�D�y���Ry��`�&#x14;�&#x4;p[�ԓ4&#x1c;aT&#xd;J&#x15;��D&#x12;V��^������h�ݽN�&#xf;�G/f;�&lt;uy�o�&#x1e;&gt;Z���p6�n&gt;&#x8;�QG&#x18;��&#xd;2և�������u�P��&quot;�&#x1d;/v�Z&#xc;8�&apos;w&#x18;w��ay&apos;�&#x18;�&#x7;��&#x18;3�{��Q�8���D���&#x16;l��~��a��+&#x1b;��&#x1f;�� M*����;����&#x1c;�E�Rq��)�I[��@�Q�+V.�&#x17;��vY:�&#x10;�.&#x1f;&#x7f;8��&#xf;7�!O�C�n�������~ݢ͟8���ް{�o�c��\&amp;9;���Z��/��Q�A/&#x7f;&#x1;�v�+�g�VI���I���&#x19;��Х)�l� i��Ģ-kh&#x14;�&#xd;�&#x16;��&#x1;c�˿w�ϧ� �=��ߣ5�g�&gt;&apos;v&#x1f;y^��&#x16;Ӄ�P&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/5918aca4-b09d-4f58-b67f-682578a83750</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:31 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/6c06dad8-722e-4229-8d5f-1d8e74c16eb9-12" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�0&#x10;�&#x17;^k��Vҷ&#x1c;����@���&#x0;&#x2;��MT�T���&#x6;����� q&#x17;&#x14;&#x10;��3�&#x19;��=���v֙&#x11;��Q�&#x1f;h��&#x15;&#xd;
Q��E;&#x0;Z��&#x14;%&amp;&#x1c;&#x17;�&#x15;�פxG�uI�&#xd;
��&#x7f;�����&#x18;&#x17;Cf��&#x8;.��&#x5;&lt;ح&#x17;1�b��a&#x1a;}�{�Sx�)m�&#x1f;�~�cN�^8�K,jt1�/�ы�&#x17;���� �𔔵����Q�}Z�-p��.��U�&#x18;f�l0�&#x6;&#xc;-&#x8;i)E&#xf;&#xf;+��ͣ&#x18;&#xf;=�&#x0;&apos;��&#x13;�&#x7;�&#x1c;�R�+n�+�&#xc;�X5%ŕ`&#x12;sQ	\R�&#x14;1�圥�ӕdM�:�&#x1;�i�����IIу���?�c&#x8;�Z0�I[&#x1b;\�$Q&#x1a;]c�&#xb;�[�(/�&quot;%����8��&#xc;&#x10;�ݿ��+Ba&#x1a;I&#x18;+p�*�&#x8;A`�&#x12;�&#x15;&apos;�HNj��&#x1f;z��To&#x13;ړw�&#x14;uA&#x7f;��l��S�g�,�pY贈&#x19;��`���W�����rO�{���&#xf;&#x7;��̓&#x4;�֔��^!1M��	�O0G���1�&#x1b;};d.��&#xd;�l�Lv&#x10; ���&#x8;*�&gt;K�eM�T�&#x0;��6O&#x11;a��mI�⸩m�zq�&#x12;�6��2�&#x1b;�C���&#x1e;+;�!�&#x5;;N`jT�U��ͳ��9@&#x8;b�G?܅&#x8;�Y2�Ok	��&#x11;�K(M��d$M��Өȶ�q�	4L&#x18;V�:c�&#x4;�&apos;!�&amp;{q��7�������t�ٜ&#x7f;�ؠ��h�u�~��M+�d��&#x12;=,�����\�mG&#xb;�NC�&#x1e;4^t�,&gt;&amp;w�^z�]�D�k�߉&#x18;��=�D:�kt��&#x0;�&#xe;��&quot;&#x1b;�&#x17;��O�b&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/6c06dad8-722e-4229-8d5f-1d8e74c16eb9</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:31 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/f6858344-9b3b-4c8a-971a-b4ef7da5eecf-13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��TMo� &#x10;�/�fI&#x1;&#x7f;��z衧J�T�D��&#x18;vQm�&#x2;N����&#xb;��&amp;J���dY&#x18;��{3��S1Y��3c�}*&#x2;�*�&#x4;�M&#x11;��v�b[PLK�9����[L�p�-q�)��&#x15;&#xc;�[ܾb&#x1e;&apos;�	�b�&#x14;�&#x18;�&#x5;;��&#x6;��&quot;�%��&#x19;��G�`&#x7f;&#xb;�&#x11;!&#xd;�cߏs�A�&#xb;�&#xe;�E�.��%m�bI�20���&#x13;�в&#x5;n&#x14;�%W��&#x15;C��&#xd;bĀ!&#x14;㖐&#x14;&#x1e;�SV�� �p�z~N�����(B&#xf;&#x3;D&#x7f;�W!�)7�&#x5;&#xd;
�H�&#x18;E&#xd;�4�$&#x8;�Z���X&#x1a;�q��\��Sj�&#x6;&#x14;�1�v&#x7f;��B�&#x7;&#x11;s�&#xf;zb0�Z0�p[�D�$�F�HkjxK&#x14;�T~�&#x13;&#x15;�_.ȧ��&#x0;�Z�	�&#x3;zE�G{&#x14;��2X#Ք&#x4;U&quot;i�&#x12;�$X)lt�9K�&#x16;U�MQ&#x17;�^.�&#xb;�g&apos;g��|uy���&#xf;��N��U&#x10;�b�SC�-���Z�	h�&#xf;��{&#x1;���&#x10;e&#x17;S?X�Ǉpb��&lt;H�ir8��M1��&#x1e;|�xf:��i�&#xd;S/�o&#xf;I�ԕ�ܫ�����3�#k��:ǩ�p&#xe;��}n~�9�珓�3��,&#x17;3R��$&#x15;-R�rW�Z�/�����&#x0;!�}��p&#xc;&#x11;���Op���i&#x8;փFp�L��o�r���ov�����}ۭ�֣{S�;}+&#x11;��D&#xf;�����\�&lt;[�*:�̧���ˈ�K(M�.�H��^�ɗmY�Fch�0��:&apos;�ɗ�	���&lt;�&#xb;��+��wŚ��&#x6;���&apos;�m�&#x7;�G�&#x16;Q&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/f6858344-9b3b-4c8a-971a-b4ef7da5eecf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:32 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/9260009d-152b-48f8-8bf5-be5a5816c319-14" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�0&#x10;�&#x17;^k����o9&#x4;E&#xf;m�8E/&#x1;&#x4;&gt;m�2��T�4ȿw);N�&#xd;
饀`&#xb;����ˡ&#x1e;����s�&#xe;h�����֔�+&#x14;�&#x8;�Kno�&#x1a;&#x15;�(1�(n�bM�&#xf;�^�&#x4;����ߘ��&#x4;��&#x14;s�i�&#x6;�&#xd;��z��%&#x1c;��&#x1f;���2&#x8;�v���&#x11;)��&#x4;)��5&gt;Cs��&#x6;�%\k�(&amp;mmq%����&#x1a;k]X�REy!�&lt;=�Y�w{9�s�������&#x6;&#x1f;�ށ�&#x4;����&#x1f;�����&#x16;AcJ�E�j�	�&#x5;.�Z�&#x15;N��5�*�K�pU+�&#x19;/&#x1b;̨5�&#x16;����&#x2;U�{&#x16;&#x13;LoD4�J�&#x17;�7�&#x5;���&#x14;���DcՔ&#x14;W&#x2;��E%pI�R��s��Ң	#&#x16;&#x1a;&apos;&#x10;�7)&lt;���&#x8;�H�X�&#x1b;Vi8U#0k�&#x8a;&#x13;i%&apos;��&#x12;����&#x1d;T��{V�E�����3_]^���Ã�z8�c���^�&#x0;f礪WȺ&#x10;S&#x17;&amp;�i�^��p��F&gt;&#x16;��&#x4;&#x13;�&#x1e;�!d=?&#x1f;�_&#x0;�q촋c/&#x1e;�;&#x13;��r&#x5;m@I��A�\2*M!Sݳ�k�S��	�M&#xf;�ӉC|��i��d��Y+a��mI�b.���&#x8;&#x16;������MN����Ql�ݏ&#xf;1��&#x5;8&apos;@&#xc;�t&#x19;��4�-aH+)ܮ&#x1a;�)۲ƍ&amp;�a²�ԙ;&#x2;��.R��|���rs�]o��ߺ/W��姫&#xd;Z���&#x7;%z3�&#x19;&#x7f;_D̟���&amp;�Mt�h&lt;w�Kx�5L�7{&#x2;�	ܹ(�&#x18;0�U��b�~n�e��,�&#x16;&#x1d;v&quot;E��&#x1;�&#x2;&#xe;�&#x16;e��&#x1;�.�&#x14;c&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/9260009d-152b-48f8-8bf5-be5a5816c319</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:32 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/85276a22-3298-485c-9cee-dc2d55aa43b3-15" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�0&#x10;�&#x17;^c��VR�&#x1e;z詀���&#x0;&#x2;W��D�$��&#xd;��&#x1d;�&#x382;�M�&#x0;�-���ͼ&#x19;=���]＝P�����:�6(&amp;&#x11;R��hP�&#xd;
R��p\&#x14;״�HqA�$h�������M�&#x18;�b��̻ ��q���v���4&#xc;Ӓ�S&#x6;��&#x1e;�R0&quot;�&#x15; &#x5;���0�Jލr��i�E~��_5�-�Z&#xb;F1ik�+�$�V�X���*�&#xb;�&#x1e;&#x1f;7H�[��y&#xd;
��&#xc;FDs���B&#xe;&#x6;�D���Wm�+�,�X5%ŕ��\T&#x2;��(E�n9g�~���)�0c�q&#x2;B�I�p���|&#x2;�;D�m$a��&#xd;�4&#xc;�&#x8;�Z���DZ�I��|�&#x8;&#x0;&#x1b;&#x1f;��#&#x1e;&#x1d;H��&#x11;;�4�;�[&#x4;�)m&gt;H�&#x16;ek�UX�\�V&#xc;3^6�Qk,-&#x8;i)}����&#x0;�yw�G�G����&#x1b;r���$�y&#xf;�&lt;�j/�7&#x3;�O�����y&#x10;��ք�r�G&#x1b;�+�?�ڢ&#x1f;���.�&#x7f;_G�@?��w@&#x18;�i[Ҫ�Π�.&#x19;���;�gM�T`_&#x13;z-R�R�&#x12;L`e�5!���X�!��X�X���(M@&#x1d;太7Ⱥ&#x10;S&#x1f;&#x16;��t�C�&#xb;v�@&#x18;T��S��[�ο��Q����CLf�&#x4;]&#x3;ؠ�&gt;G .MiK`e%�+�A&#x1a;ٖ5n41&#xd;&#x13;�&#x15;���	&#x4;&gt;&#xb;x4�#��$��m���&#x2;�eYQ�&#xd;R6ܠ�&#x1b;��ߝE^�X��X�6�&#x5;��&#x15;�U&#x11;ZCW/����M�0)1������&#x7f;2���W�~{�&#x7f;�n�m�Z�&#x1;��4�P&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/85276a22-3298-485c-9cee-dc2d55aa43b3</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:32 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/direct-18" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://s3.us-east-1.amazonaws.com/pocket-curatedcorpusapi-prod-images/564c16e4-524a-4a58-8f00-40fb78d06b66.jpeg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">resize</stringProp>
                  <stringProp name="Argument.value">w450</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img-getpocket.cdn.mozilla.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/direct</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/direct-19" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://s3.us-east-1.amazonaws.com/pocket-curatedcorpusapi-prod-images/58200359-5a7c-4e40-8f2e-3698fb3731c5.jpeg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">resize</stringProp>
                  <stringProp name="Argument.value">w450</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img-getpocket.cdn.mozilla.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/direct</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-25" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/activity-stream/impression-stats/1/33aec36f-597f-4139-94b0-b9c3139b0100-26" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�����0&#x10;��E�h�h$��[�B�uKO�&#x4;9Qv&#xd;�mdewېw�x���B!�0����_��H�c��%�e&#x12;��8N����C.2�.�)�&lt;t�p-3mr�/b/R&#x1f;�.�-[�wbJy��$&#xb;&#xb;/��?�J�C_8&gt;&#xb;�{I��&#xe;�$/�s���ʶ�&#xd;��&#x7f;c&gt;I&#x0;��Bבէ$�q(]��R&gt;&#x15;��b�&apos;&#x15;w�t�1v�c&#x16;��؉ה�^8�&apos;&gt;�&#x7;������&#x12;�&gt;u̖&#x8;�x:&#xd;�aSi�Qy�@&#x8;Fs&#x95;&#xd;9�9��Y�i&apos;��&lt;&#x1f;&#x18;&#x1b;�lߧ�&#x12;&#x1b;N��k&gt;��_�&#x1e;�=}&#x7f;�Xi�Ī_7ў�^&#x3;(&#x1d;T&#x0;��&#x18;���&#x14;�&apos;$e�r�Ѱp�roɣ�\�4��u�`&#x1d;xg�Z��&#x1c;-&#x1c;+GM6X$&#x3;�u�,ܬ�&#xd;y��X͝(g&#x17;n7��#&#x8;&#x8;6�7j�rÆ)�-(�@��G�&#x13;&#x3;G�&#x10;u&#x8;���k�&lt;~`�A�4WXx��G��=&#x1a;�G����ю�%�^���&#x1;�&#x1a;&#x1c;&lt;&#x6;n�&#x7f;�ӕ�&#x6;z&#x5;@�.[�a㛁&#x18;0�n&#x0;&#x1b;���&#xb;���J6ހ��&gt;ׄ�Ad�&#x19;�u�ǚ�Z��T@�&#xe;�,o|MX=t&#xd;
�і��+Pk&#xb;���x&#xb;�L-7A�&#xc;a�$oA;^%�y�zIZ�&#x7f;Ϗ���Ǧ�&#x4;�ޜ��Q&#x1c;f���&amp;��S�&#x1b;8K��Ɇ�JwR��x�Zٻ��&#x3;��&#x17;��&#x4;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/activity-stream/impression-stats/1/33aec36f-597f-4139-94b0-b9c3139b0100</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:40 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/activity-stream/impression-stats/1/421613f1-5ded-4bb2-afd1-cf04f3a63322-27" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
��Kk�0&#x14;����V�ö4ޅ&#x4;B�)]�bd�zF������&#xe;��&#xd;
�&#x4;J�;q�����J�u���&#x10;J&amp;Õ�����&#x1a;S�	&lt;�&#xc;4E��TwJ&amp;�&apos;2&#x10;&#x8;f�@?��ސ&#xc;i��҂�&#x19;J��%:�PP�&#x0;�&#x16;&#x8;�Ő��&#x1d;�)��.�/��?&amp;Y�y��F�&#x15;i&#xb;4��xw&lt;�/����z)ّ�q6&#x1e;�n�?����@����&#x13;�&#x61d;D��8�L&#x8;�ѻ)�&#x19;kc&#x18;?)��d�w\I�&#xd;
,�` �`�d[�&#x1a;��c&#x1d;h&amp;�l&#x8;�&#x15;3aY��4W��������#j�y@��8K&#x6;������&#x13;&#x7;�&#xd;
��&quot;�lon&gt;�&#xc;�&#x3;gZ���o&gt;��u��d&#x1d;&#x16;(�&#xf;��&#x7f;5ds��mtx^&#x1a;7g&#xb;&amp;�;��㜠�J&#x6;ő��I���cmO��	�&#x1b;�e�&#xb;m&#x11;���&#x1d;�-�^�E&#xb;��d�&#xb;8W��n&#x2;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/activity-stream/impression-stats/1/421613f1-5ded-4bb2-afd1-cf04f3a63322</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:40 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/activity-stream/sessions/1/b1197513-e364-4a06-9b15-450ef04b69f7-28" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�Rˎ#!&#xc;�&#x17;�a����7F{F�v&apos;�&#x8; pg&amp;&#x1b;���d2Jv5����*�e�&#x2;&gt;#$&lt;��,櫰�,�&#x14;C&quot;���� Sp.lT��d�=�Y�7{&#x7;�&#x16;��Ȑ�4�$&amp;����G�&#xd;��^&#x8;�I�3&#x6;��	&#xf;�&#x10;&#x1f;%�o&#x3;&#x1f;�ۤE*��Oh��^@�&#x18;���H?&#x12;(��2��1�&#x5;k&#x1c;�g����N�!&#x15;/\�&#x17;ߪ��k�&#xc;�=&#x1a;��q�Q�Y����UWuS��SC�ښ&#x1;&#x1b;&#x7;�c���mǡ&#x4;�&#xb;V���k=�&#x3;����d�lM��q�&#x1c;�~�ۮV���X&amp;�C�i�&lt;����^&lt;���+71�Uյ&#xc;����]0����&#x3;��K,&#x1a;�/�&#x4;&#xb;+`.�&#xd;
��3�&#xd;v�B�H�5r�:�y��-S8�l&#x13;�&#x8e;�s����W�&#x18;/, 掃C{���Y�&#xf;&#x1a;O�1���#&#x11;9���]�`&#x12;SY5�����&#x15;S&amp;&#x1d;&#xd;z�A��ꧮ���0��&lt;c�=:���3�Z&apos;{~&#x5;6USV��&apos;&#x1e;�K��b&#xd;
+:�w�*�x&#xd;�k5u&#x13;��:,���խ�ס�&#x1a;�*۪���V�:5�0�i1���&#x1;��&#x1e;�`&#x3;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/activity-stream/sessions/1/b1197513-e364-4a06-9b15-450ef04b69f7</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:16:40 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Signin to the Application" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action;jsessionid=193AA8DCB72F8D2AAF46B198E51F5BA1-45" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="signonForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signonForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action;jsessionid=193AA8DCB72F8D2AAF46B198E51F5BA1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Catalog.action</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action-46" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">allen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">allen1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="signon" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signon</stringProp>
                  <stringProp name="Argument.value">Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">sQVe7DrVOwNwvx3OHbYvW8b-Ux2HWhoaC1x-UTN5tvkJ6Z9wbDRo05Bq5WdF1RDjSgsjeAI2npPk_VjQP1djZ-mVta07SZCdI34pCYRQ4Cw=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.value">jqSQKELzk62OUWwoymsM3Uhpqq5PPPByDZQN10VcylP8Fm9kokRLVPPasrETeMNJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Account.action;jsessionid=193AA8DCB72F8D2AAF46B198E51F5BA1?signonForm=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-47" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Account.action;jsessionid=193AA8DCB72F8D2AAF46B198E51F5BA1?signonForm=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/6b77ecea-69a6-45bd-90f0-9ac937a1671f-48" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��TKk�0&#x10;�/�&amp;�J~˷&#x1c;B�-dSz	&#x18;=wEmٕ�l�!����نfK�&#x14;�&#x19;��o��&amp;c���zD�&#x13;��;j)�D&gt;0&#x17;�`&#x6;�Z��,&#x7;L!��H���&#x2;�m��%RV���qR.����&#xd;
n&#x2;&amp;!�^&#xd;*�&#x3;����9$#ẘ]�&amp;F&#x1b;�~	&#xf;�%[8L��5&#x3;��)(aHr��AF;�&#x15;�M�A�&#x14;&#x12;&#xd;
�&#x18;45&#x16; (�S\&#xd;
����XYoF�a0[�B&#x14;��g�F&#x17;`o~0&apos;���?&#x3;$Y^+�&#x5;Ȝ&#xd;
(J�@C�&#xd;
&#x1a;��&amp;&#x19;�5!&#xb;�y���&#x2;?��7�]8&#xb;$8�BJ�&#x1a;�o%5�R��&#x0;�K&#x1d;g�p�Z� e�iM&#x4;�&#x19;���&#x1b;HP�&#x7f;x���{c^�Ţ,㽂_��0&#x1e;A&#xb;.4� ��@�&quot;V�&#xd;
&#x6;9�B`-kJ��iA՛&#x18;u��Q���:&gt;�&gt;�+�+|�xȦ�Ld�&#xd;)I��&quot;;&#x1a;ŎY��h&gt;�x�K㧞&#x1d;�&#x7;�&#x12;]�&#xd;
I&#x15;������&#x4;%��Rs�M�UEԏ���&#xd;
`��G_�������*��:;&#xf;\9�&#x12;���&#x12;�J�B�Jh�&#x1;��;���X�1�6·����y��&#x6;��x�qPi*F��&#x17;%�MҠ�g�t����&#x1a;��CbQ��7�������x��\��٠˷��(X���×�&#x1e;L�Ѿ&#x1a;Û���X~EG��V*o�����&#x10;��g�]���&#x3;ݣ��&#x5;&#xf;V�abq���\�U�:�8a߱Tc��י&#x1a;��.�b/�?�*�y܌�$&#x1e;U&#x19;O��y	�Īj�n2\&amp;��&#x4;��&#x4;�b&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/6b77ecea-69a6-45bd-90f0-9ac937a1671f</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:20 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/e3623614-a76d-4673-936a-369c5fb231ed-49" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;����n�0&#xc;��ŷ�:�G)�[&#xb;�b&#x18;�v��&#xc;&#x1d;&#x13;���Ir۬軏�ӬX�l�a��/�#E�9&#x1b;�۶֙![?gA��֬Ze!r&#x1f;�h{���&#x1c;�&#x5;�&#xc;��-)ָ���u��U�����i�&#x1e;4.�&#x14;A�&#x7;d�q�&#x11;y�i&#x1e;4�C�&#xd;SL��s&apos;w�N;.:���&#xf;���I�]:�\n&#x14;h%+�4X!Y&#x17;&#x4;��&#xd;
�x�QA��ب�1&#xd;
��~L���b&#xd;
��//�l&#x1a;��+��8��nwq&#x11;)z�c&#xd;
z&#x6;�`�&#x14;�&#x4;�2�&#x14;�&quot;���R�a&#xd;����,&#xd;
8�.��&#x5;�[���Dֽ�����^!B�ED9�&#x8;�3�$/&#x1a;͌D�`&#x12;������F�&#x18;mH�qC�Y�����B&#x11;.�����&#x17;d���o@nj�)�QMK&#x5;&#x15;�&#x1c;�&#x6;K$&#x19;&#x16;F0\I%&#x0;$���©Sڠ�[1�.���&#xb;|���`h&#x15;����&#x6;#&#xc;�Dn1^&#x1f;�&#xf;�7&#x8;��!�~r�&#x2e75;)�驩��;&#x1b;���O�&apos;Z�u���x���aJ*�&#x14;�̏�rǝ�&#x1d;l&#x1f;��hW6�&#x1d;߷&#xf;ڧ�O��&#x6;�&#x2;����&lt;g3�0ew֩�1��㼚c�n��ٚ0\VP�T&#x15;+&#xf;�&#x17;`�i��&#x10;�6&#xd;&#x7f;؇��&#xb;����Dz��但&#xb;H�~��n�6חW_&#x7f;��7�wK�n��Ӈ�F�n�&#x14;�!��:������Y�&#x1c;�W�f��/I�0y�g�&#xc;�Є�)�&#x6;=g�&gt;�$���� �&#x11;�`���z&amp;ta&#xd;
�##&#x8;�z&#x5;S$��B�º���&#x1c;W�S&#x7f;&#x3;�@P�c&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/e3623614-a76d-4673-936a-369c5fb231ed</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:21 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/pageload/1/889901da-f6b6-4922-9a4f-d8e12d776b4b-50" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��Xَ�H&#x14;�&#x17;��+�ŵ�&#x16;i�!�L&quot;E-��h����&#x13;�=v��D��e&#x1a;��&#x5;�@K&#x8;�]�:��{��A�&#x17;�y^de0�&#x19;4�`F��F���|m�Y@1e&#x8;kD�=�3L&gt;`&gt;c8�&#xb;L�&#xe;��{JgX���&amp;j�&#x2;V�em�e�J݃O�����6�T�dM��eѠu��#&#xb;?Q&#xe;�uU�&#x16;=��Gu�&#x8;&#x11;�.W�rc�Cq&#x1d;&#x15;�&#x12;6N����v[[G�}�&#x1c;�&quot;_Ǜf��&#x3;�~�s?�p�P&amp;��&#x12;�2���&apos;&#xd;
)�&#x4;R$3&#x19;�&#x18;KB����`S&#x1;�Ԡ�*�*_,�&#x17;�&#x5;��m~&#x1;�&#xc;�4�&#x14;AX�&#xc;���Q��&#x1c;�)ʹ$	�4n�$���.�Y�q�&#x17;�)�xe���&#xb;0%:��&#xc;�(&#x11;��0&#x2;L:&#xd;
#�&#x8;N&#x12;��Rk�bjL]�(E&#x16;&#x0;�������w`��&#x18;+E�Pa&#xd;
F0&#x11;R&#x12;&apos;(�8�b�y���&#x1f;��Kk�U&#xe;���y�hޤ?��&amp;_�s8��?��|̋�|l�7��f&#x1d;�&#x1a;�_��&#x5;ۋid�aDK�0���cЀ�|h�a�,�&#x1b;;�7�n�V&#xc;&#xd;
�7&#x19;Du�̭I�v+����&#x10;�� ��-������N&#xd;
��-Ȩ�����X&#x11;N$#!}��,��0+��&#x1a;&#x11;��Ӽ�V�swG&quot;�9&#xb;�P�a����H�D&#x10;��&#xd;
f&#x18;,&#x8;&#x1c;&#x16;e�&#xc;�A�&#x19;�UD�īha�2J�&#x1e;&#x4;MW�[��&#x3;&#x12;n�5��$���m&#x1d;����??}���6s�d����&#x19;3���R��~Kk+G�]��i�&#x0;���f�&#x10;�(&lt;�!��j:�4��Eo�c&#x6;�&#x1b;xd^��&quot;/�E��&#xd;
}c��vȝЖ�~���@.؂�Q�jȫk�/���q��})�z�&#x1e;�&#x1a;�b*��&lt;=����]�;s��|^s&#xc;Lǈ&#x18;��&gt;}5t&gt;��&#x12;&gt;�~����Hf&#x14;&#x1f;&#xb;d?�&gt;I�g8&#x0;&#xe;��l*�&#x3;{�P&#x1c;���8�9&#xe;&#xb;}Ex�&#xc;&#x19;j���&#x1c;�-a���r�v�v��$�C&gt;&#x3;�@�9e�c&gt;&gt;�&#x1d;��#w�|&#x6;��&#xf;��L��C��&#x1b;�|�&#x14;�&#xe;�5T�&#x16;&lt;�@a*|����۹���&#x7;��*&#xf;Hᗫ&#x7;8|$�Lw�L�Eխ|�8P�|$��EN&#xb;�&#x4;&#xe;�5	����T�=�����&#xb;�&#x11;,���&#xc;&#x15;���u[J�G&#x7f;&#x6;�Tzн�&#xd;�&#x19;�H�C��(����I�%�&#xc; �8�ϓu&#xd;
�s���&#x12;{�����av��&lt;p)�^BBI&#x1e;�,���\��~&#x16;C�����R�&#x1b;��(&#xb;r�ƨ{d&#xe;&#x3;�r,�m�ư#?O��&#x0;]�*�d�Nx*�Ka&#xd;
�&#x16;)n�&#xc;1&#x8;b)&amp;j�o�&#x3;�	/&#x1f;��f&#xe;&#x2;K���qk�0� !Q��G���Is�I-�	&#x15;Ba���&#x1c;��(Yo��˘&#xe;�S*��&#x19;����߿|����V&#x10;�X_�G���&#x3;&#x15;Fc��7��&#x7;U𦯍�7ᯤ}8��&#x12;��3�(N�A�&#x17;FXz�&#xb;&#xd;
&amp;�6�����n�&#x14;�`�&#x1f;�&#x4;&#x1b;+��&#xd;�� ��&#x13;�v&apos;&#xd;�&#x8;HF7f��&#x13;&#x12;&#x1e;�{�r�oW&#x7;��&#x2;�&#x12;B�|w�&#xb;&#x14;&amp;&#x7;&#xd;(?j�����H�)�&#x1d;&lt;&#xd;
�9&#x18;�Z���W&#x8;a��;/�)&#x8;�R����U�Sj0&#x13;��/�|�Cxoy�+h��&#xd;���ҙH�J&quot;��&#x19;bD�1&#x16;\�n&#x14;2Ω����&#x17;ӣ&#xd;&#x7;�&#x1b;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/pageload/1/889901da-f6b6-4922-9a4f-d8e12d776b4b</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:21 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click on any category" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/92dbae8b-d5a0-41be-9b28-d3bd0f2f063f-51" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�0&#x10;�&#x17;^c����o=��S&#x1;&apos;E/&#x1;&#x4;&gt;m�&#x12;��T&#x12;7ȿw)�N��-&#x10;�0�}�&#xe;��zB����y;��&#x13;��&#x7;�RB6(&amp;&#x11;R��`�&#x16;&#x15;�(1�(ni�%�&#x15;��%A&#x1b;d��&#x7f;��d&#x2;��&#x14;�&#x8;&#x15;�&#x1b;�1$&#x1c;LoD48�}?�)ge&#x10;^&#x1d;&#x0;�x!{�_�&#x17;�&#x14;D�J�)��n�s��g:��G}&#x590;W���&#x12;�USR\	&amp;1&#x17;��%%J&#x11;�[�&#x19;z~�˚0a�q&#x2;B�I�JI�&gt;A�5�7&#x3;�m$a��&#xd;�4��&#x11;��Daŉ���Zi	���3�y�&#x7;�&#xd;�Әz�?�U&quot;)&#x18;���whb	�Z0�I[[�&#x8;�H�k�uayK&#x15;�\�&#x0;��э&gt;��&#x1;�&#x4;G���{p?EИ��ZѢl&#xd;�&#xd;
�+\Պa��&#x6;3j��&#x5;!-���*ST�&#x3;��y/��E�����󜺼&amp;�ه&quot;��KF�9d�G�tM&#x5;�&#x7;���&#x10;O&#xd;��&#x7;i&#x2;,&#x1;&apos;U�Aօ��0�N��bs�&#xb;v1��񜧼%��������Z�3�i���8�њ�%�&#xd;
H���7!&#xb;�QN�G�&#x18;����ܯ]�zq|]K&#x1b;�ayΫ����&#x10;?o&#x17;&#x2;��*N-�&#x17;����4�&#x18;�&gt;o&#x7f;&lt;�d���Kp�{��D&#x17;���~��͟�K&#x6;j?���M�i���[��G%z��4�z�V!�&#x1e;��+�&#x11;&#x7;n��F��O&#x1;ӹ,�� �J�˖\P�&#x1d;R6ܡ�;Ϲq&#x5;&#x17;l&#x1e; &#x6;|N�\�Җ�VR؛&#x1a;�*۲ƍ&amp;�a²��ٖ�&#x0;�3:_Q&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/92dbae8b-d5a0-41be-9b28-d3bd0f2f063f</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:21 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/511747f2-b4a0-400e-a2a5-066cfa42758f-52" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��TMo�0&#xc;�/���$&#x7f;+�&#x1e;�a�m@�a�&#x2;�&gt;&#x13;a��IrӬ�&#x7f;&#x1f;�i�&#x1a;�P�0d�||&quot;����m:�̐�&#x1e;��&#x7f;e+J�E&#x16;&quot;���v��U���&#x0;� �oi�&quot;�&#x7;R�&#xd;
�]dک&#x7f;c&#x1e;F�&#x11;�bH%�q��&#x10;�!�v�����&#x1f;����s&apos;��-z�c��&#x13;Dϓ7&#x1e;�T�ٝ��9,�H����o&#x8;S��&#x14;HS&#x19;(E+@&#x18;U�R�a&#xd;���&quot;{z�&#x1e;�&#x1f;�+���;&#x1d;�a��&#x1c;\D�;�pS&#xb;Ҷ9�m�����6D�dD&#x18;�H%Ց&#x8;&amp;�.��&#x5;�Y�&apos;�&#x11;,&gt;�q�&#x11;��7�&#xd;
(����_Dh^4�&#x19;	�`&#x12;�J�в���&#x1a;mhNHC)�/��&#x8;�p�LƣX&lt;�E&amp;�q�kxA�C4�J!&#xd;Q �B���&#x18;/9&#x14;�HI�j&#x18;k��̪�&#x18;u&#x1e;��5vA���d���*.�e��!t��&apos;��&quot;G&#x1b;&#x1f;�30&#xd;0iiE����ɩl&#x18;{~x&#x1d;IkLX$��[&#x1b;���O�=�uW�s!��a�&#x1a;��Fn�s�G�I&gt;�&#x1b;�C���:���&#x6;����ݙ�=�)k&#x8;&#x10;&#x1c;kzK�j~&gt;�o&#x4;���tn�	�q�&#x19;)+&#x14;*�b�~&#x1;On�N;&#x1d;&#x2;ߤ�&#xf;�&#x10;��+5�W��&#x11;�M���8���&#xe;�k&#x5;�~��&#x5;|?H��yP��z	1�&quot;�j}�ݬ��ߺ/���է�u�}D&#x1c;�E�sX�&#x16;aFdw�~�c&#x0;��0rT�.[�v4�Φ�w&#x1f;y�1M�k�&#x6;N�G&#x1b;js�3�&#xb;S��&#x18;A�7S�&gt;����VD�-7mN�4�&#x7f;&#x0;�8�&#x6;c&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/511747f2-b4a0-400e-a2a5-066cfa42758f</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:22 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/top-sites/1/2e37322c-02c0-452a-825c-743e39922107-53" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�N�:&#x14;��H�i0ع4q��#M�4&lt;0&#x2;1��K�kqI�`;�t4�~�&#x14;&#xd;
3��i�*M�^�k훿G���Ji�D��&#x15;��&#x18;�D�&#x11;�*��&quot;&#x1a;G1�&#x13;&#x0;1��&#x1d;J�q�	f�&#x4;F&apos;���7L|��1��0�V&#x18;���&#x6;&#x2;f��ڶ�q��Z&#x10;+�i��\�RC4���&amp;�&#x16;�&#xd;=Dr�&#x4;���H&#x8;Yr�e8�LB&#xe;�(A %&#x5;&#x5;��&#x4;$&#x8;2&#x6;%�1.�q��&#x6;�Zmig��?~&#xc;�����&#x16;l��&#x10;�_�ү:{�&apos;�&#x3;�F&#x1f;Je�v��^��T&apos;�&#xd;
Gq�&#xb;,&#x19;�	f �X&#x1;&#xd;
��@���(�0Gh&#x10;h�i&#x1;����m�3�&#x7f;Y&#x8;�#&#xd;
�&quot;&#x6;�&quot;� ���&quot;�&#xc;0&#xc;��&#x18;f��AH���p&#x1;l۸Z��݇B�&#x11;ą�&#x7f;h���sR &#x0;�LzJ�4*y&#x6;8�%�&#x11;C8�&#x7f;hZ&#x10;�j�&#x1d;G�X���v�&#xe;&lt;Yr&#xd;
O�&#x1c;Je��L�+N���&#x16; .��:&#x1c;z�#�C&#x0;�@t&#x7;�x�}&#x1a;�&#x1e;�+͛�&#x1e;X*�m�0�&#x18;a�f&apos;&#x11;iۊ�&#x13;�E�üLyt�seۚ&lt;WO&#x84;�&#xb;4h�&#x15;&amp;/�W�A&#x1c;,P��&#x4;��w6~{���v�|&#x1f;�!1�^9�\g��]1�Fi�&#xb;&#x15;��ذ~ֿ��P������S�jQ����I���&#x1f;}�{&#x1a;�lH/&quot;[���������$o&#x1d;�ao�����X�t�&#xd;�&#x14;�#4({�v�=�,�m���&#x1a;&#xd;
3g��F��&#xc;ă+�w���3O{�uiq��;�&#x17;�S�?���og{��\l�&#x17;K��?���&quot;�y�r5�i+WrE�hB粥��V\�n���e�/u�,��7��R]��3�?���-��fZ,֓z.&apos;�&quot;�M���_�&#xb;��&apos;9g_&#xe;&#x16;�OW�*����2Ye��q=�&#xb;�&#x16;��&#xc;�\^�x֩i��۲n&#x17;&quot;&lt;�[2x�M��m��5{,M�msI&#xf;���;�9�&#x1b;���C^K�|we������鋥רg&amp;ｂ��&gt;?��&lt;�fӴ��^|ݸCM|�&amp;����,�/x�X�&#x1e;&#x1f;f$�&#x12;g0��	����0 X�G*)L(�T�&#x5;�&#x1f;��&quot;�Y&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/top-sites/1/2e37322c-02c0-452a-825c-743e39922107</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:22 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/top-sites/1/cb2acc6a-4e30-47d1-b96e-c383cd6f41db-54" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�:&#x10;�&#x17;&#x1;w�0!��D&#x3;&#x17;&#x17;�&#x13;��&quot;E��~l&#x4;&gt;&#x1d;:2�����_RN��&#x8;�* H��pΙ�C}�Z�וҲ���#+��1�g�uĸʩ���Q&#xc;�&#x4;@&#xc;��&#x1;%c�&#x7f;��8��Y$4��&amp;��I�V�o��5�ـ �Nh�&#x1a;m�V�&#xd;q~	�&#x7f;�mc&#x1c;�Ձ&#x18;&#xe;&#x10;&#x1a;&#x1;��uӹ��&#x1a;�٣Ga�v&gt;&gt;�u���{i&#x3;�V[��Ӧ�-�&#x3;n�}&#x1e;�I.�d�&apos;��4c&#x5;(p2&#x2;&#x5;�B�&#x18;�&#x1c;��Ǐ��k=+.�m&#x1b;W������3����=�� %Ĝ�&#x2;&#x1;�g&#x12;����J�&#x1;�c�s�&#x10;�����&#x0;��&#x15;�&#x5;�&#x3;&apos;j�&#x15;μ�eM�&#x1c;QX&#x14;1&#x18;&#x15;)�&#x4;&#x5;&#x1;E&#xe;&#x19;`&#x18;RI1�&#x18;�&#x3;&#x11;fw?&#xf;�x.Ċ&#xf;�&#x8;Mh-�[�&#x1f;�a8�LB&#xe;�(A %^&#x1c;LR&#x2;&#x12;&#x4;&#x19;���&#x18;&#x17;&#x7f;&#x10;g`U+���ݓJ��O&#x15;�T&#x1d;p��&#x1c;�&#x7;&#x1f;�J��D��-&#x15;�{&#x1d;�4;�&#x1a;��h~��m+�l[��j&apos;L�k�&#x10;&#x1a;�^I&#x14;�߇��Þ���2�&#x2;e(OP&#x1a;�&amp;�#�Z�&gt;��a�&#x1b;���`�3a�}1�F��Ke��L�+N���*@\�.�q��&lt;�9&#x4;�[&#xd;=@8&#x1e;�O�;�B&#x5;U&#x14;&#x1b;���+�&#x1e;�j��zl{�T-*&#x15;x�i��A�Sn�;�&#x1e;��&#xe;�p�F�a����{Q��A&#x5c8;l�᷼m:Æ�&#x14;�#40뺀��Lp��̑O&#xd;
%�`N&#x1;&#x13;4�&#x6;�0 X�W*)L(�T&#xe;mL�k&#x17;#��&#x2;�!&#x15;=:���Ņg~�uiq�����8��&#x7f;�����&#xe;�K��L���3ߕ��&quot;�{�r5�i+WrE�hB粥��^���uq(u�,��7��R]��3�?���/��fZ,֓z.&apos;�&quot;�O��8��+��&apos;�d_�&#x11;yHW�*����:Ye��y=�&#xb;�&#x16;��&#xc;�\ޖx֩i�V�e�&gt;tؕ[2d�]��m��5{.M�msM���&#x1;;���&#x1b;����\K��pc������髥�g&amp;�=��F_����&#xf;�i��L��n�Q&#x13;?�	z?wD;�^~&#x15;�m�w�&#x13;����&#x1;ܤE&#x12;Z&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/top-sites/1/cb2acc6a-4e30-47d1-b96e-c383cd6f41db</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:23 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/55eb5f0d-e678-435a-a8a0-47dbaa7e0f36-55" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;����n�0&#x10;E���zRROһ,����@���&#x0;&#x2;�6Q�RI*�&#x1b;��K��&#x3;��&#x6;&#x5;&#x4;[�ܙ9&#x1a;^�&#x1;M�m;�̈�&#xf;(�_h��&#x15;&#xd;
���E;h�F&#x5;.J�&#xc;��&#x14;�~����h��S���O�&apos;��!w����JC�����.�&#x1f;�~�c&#xe;&#xd;
ϝܥj�k&#x1e;s�R z���0�N�&#xe;b&#xe;�i�&quot;�g�g��&#x6;3�8%���@%�&#x0;aT&#xd;J&#x15;��D&#x12;V&#x8;���&#x14;�.��&#x5;&#x18;l���&#x16;l��i�&#x11;��7�&#xd;
&#x8;i�&quot;��Ŵ�&#x1a;�/&#x10;R��fF�*����&#x14;(+&#x1b;��hC&#xd;
�[BR���ʀ2�=�x�k&#x1e;�Y&#x12;��5���ch�UB&#x1a;�@6%����1^q(	�&#x12;&#x1b;�2F&#x17;���&#x4;\AL@������&#x13;��F`J&#xb;hh���i&#xe;��&#x12;$��&#x8;�k���-��m�z��3Q&#x17;��N̶����&#x2;_d&#x1f;.&#xb;��1S&#x10;�b��&quot;�&#x6;��r}X~��X&#x1f;b�g�$&gt;Z�B�b�uj܇c��̓�&#x1e;�	�U�Bc����ʝ���4uʆ���A�$��&#x14;&#x7f;B��0%5iKR&#x15;���q�t��&apos;+�u/w6j&#x19;g�9�i�5&#x15;�&#x0;���&#x11;&#x11;�A�Xy&lt;~�U�&#x7f;�!�m&gt;��&#x10;�&#x1e;.�s|ZK\]V &amp;ti�4%#H:Eu�h�&#x1a;&#x1a;�uC��&#x5;�s�J��ْ˗��S:X�&#x15;��S�z�_&quot;I{���7��oݗ������朚+�X_f�fjo2�Q�^/&#x7;&#x6;�o2|L�&lt;���t�ŋ&#x2;ݢ���&#x0;N�a�i&#x1f;nѹ&#xe;�&#x5;}���ȳQ�&#x0;\	�}b&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/55eb5f0d-e678-435a-a8a0-47dbaa7e0f36</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:23 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/metrics/1/e392d605-5690-4835-814d-2840e3f60847-56" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��}[�#;r�&#x7f;��}�T�{�&#xd;&#x18;��]�&#x18;�&#x18;?�1&#x6;�a&#x8;YRV��$�.]��`��#� &#x19;AU�&#xd;�&#x1e;&#xc;N���0Ɉ/��1&#x7f;}:�o�������ק��/q�t�͗��&#x7f;_��&lt;&#x19;e�Z���?i�E�Q��UO���{8����&#x17;&#x15;�1�e���p�e�n�.��a�3&#x7f;9/&#x17;8�x��m��˼[����vؿ}��/���t��/����&#xd;
W���nxN���2㯷�g��q��r���pl�&#x19;���&#xe;~&#x7f;Ui���^�ɿ��K|Y����z�3�i�[����_��z�^������&#x5;ư&#x1c;`�˧cY���aY���&#xb;c�&amp;��}U��6X�v3�)�n^[��[���R�yL��r^ϻ�&#xd;&#x6;���.�?&#x1d;��t������̯�E�h�!�&#x1d;L�2�㤶�mR/�/I��L&#xe;\x9^���u���%�����X&apos;�c����[k&#x1d;��&#x7;������]�lڮ���uL6��~]^�Qj�&#x1a;&#x6;��ﰇ��@�)�\w?o^��&#x3;^��g���9_�_��e{�_p&#x1c;�İ	&#xe;�?�X&gt;�a&#x7f;ܝ&gt;�x����~����%9�E&gt;l�m���� �p�n&#x7f;=&#x1f;���G&#x1d;���~��@�QQ{=Y��S&#x1f;=�袱۠��&#xd;[X&#x15;&#x1f;`U&#x16;�S{��ח]��&#xe;N�(�,��&#x1c;��/���N���S�r7���t��Z�&#xd;
�&#x14;�1��o�&#x7f;�*������܏���qm&quot;�2�-N�~�5�}y?��&#x83;�W/�[~�_��`f�����4�π&#xf;&#x8;.�0W8�&#x2;�&apos;]�&#x7f;^��o���Ygt|��VO�La����ߟ�X;%&#x3;&#x7f;��ޞ�������u��K\�5�&#x14;Cx��V8����&#x18;���;Ŕ�M&amp;D�?�&#x14;����T��Lp���U9�*���N��E�&gt;�mT�M�p���q�&#x13;&#xe;=�g&#x8;*�+�D7&#x8;S,�jk�h&lt;^&#x13;��^%��&#xb;��dM,�Y&#x1a;P0�T��&#x15;��&#xc;w�&#x12;�&#x7;��9{�&#x12;VO1�|���&#x5;�R�f&#x15;�&#x1c;�a:�it(C0�&#xb;o�㚘�&#xf;֖�r4Aچ8yzBWn������U@&#x13;qV&amp;��X|��|ޗQ�8��p�)&#x7f;&#x15;q�U��Xn0�P�&#x1e;-�&#x18;4��&#x13;c��z&#x1a;���&#x11;4���	��hG��h�����&#xe;�&#x5;�fC���ՖƦ���fF&#x1b;W&#x1e;@W�q D�&#x6;G�&#x11;�wt&#x13;&#x1d;�sz&#x15;C9ȅ����T&gt;9Ч&lt;r&#x7;�-&#x17;&#xd;0H�w�Y��ӤU�e�&#x4;�L�F�L�����-���&#x8;��pBį&#x12;M���N�&#x5;�&apos;�8=�T&#x6;��&#x10;��D&#xd;
c&#x15;��&#xf;�&#xd;L�T�T�X&#x5;s�ky|&#x10;&#x12;�&#x10;c��xg�|j��I��4��E�H�&#x12;M &#xd;
j&gt;xB�+²�|ig��Ĩ�`&#x12;p�&amp;O�&#x1a;�&#xd;&#x1e;&quot;&#x4;Z�8M���&#x7;Z9Ӕ&#x6;&#x1f;Fg&#xd;ԴL*�O&#xe;�u D.�&#x7;�uL�ӄ&#x10;�&#x8;�X�~m`*h�BJS�(�VM&#xd;
&#x1f;HqT��x���-���&#x1b;�S�T�&#x14;�r�R��ХL�&gt;K/&#xc;��&#x1;&apos;&#x11;�Je-�&#x11;�cNE�l*��&apos;O`&#x0;�X43&#x12;&#x0;jC7A$�y���@ �Ej�.�:g&apos;�&#x7;?U4���&#x7;Ne(Z&#x5;�-�T`&#xc;��.�&lt;-&#x2;�&#xd;;�e	�4��A4¹0*	ːEĒ��s(beJ�����&#x4;�&#x5;	�&#x6;�������K�&#xe;&#x15;H&#xa3a;&#x14;ʑJ�n&#x14;&#x15;&#x7;D&quot;D�&#x5;�&#x7;�*p&#x19;��\U�&#x5;&#x10;&#x3;&#xd;
j����h�&#x7f;}:,o���s#$���&#x1b;�&#xd;��	k&#x1d;g��0{�&#x4;�X/�&#x0;z&#x13;��n�&#x16;&#x18;���&lt;g[�M�q&#x7f;��&#x7;�]�&#x2;g�&#x8;CW�)UN���(dY��t]���2����:�&amp;��&#x2;c�&#x5;	�f;&#x3;c���H	��&#xb;�]&#x0;ܡ�L�&#x1;&#x5;ͅN(IzB�GE3&amp;�&#x14;T��b��5&#x0;���$T��������I&#x15;^,&#x5;&#x1f;MY�l&apos;&#x1;�l&#x3;���FW&#x1;&#x0;&#x0;&#x8;���-&#x2;���L͈fP3�:�Y���$�&#x0;c&#x8;i*&#x5f6;&#x0;��,!@Y&#xc;6S�,���^q&#x8;E!�&#xe;T�&#x1a;Sx`�&#x0;�π�&#x16;��Y��*�Kk~�*k�$�b&#x1a;&#x16;&quot;&gt;&#x18;�����&#x14;�00�`$�&#x0;�d���&#x1d;Mb&#x3;e&#x1c;�L&#x2;�$&#x15;&#x3;�&#x4;&gt;��&#x18;&#x8;�]TyVmh��V�/pꬋe��a�x���%SM��C�(:�&#x3;�`��Ϣ&#x0;�a�&#x10;��&#xb;&#x0;��K��&apos;�|��P�(�azM&amp;2�3�x�i�ҥ&#x2;��!j&#x6;@���K�&quot;Рj�Uf&#x11;	%&#xb;�A�L̸g�&#x1;�LJ1&#x16;��oR D�&#x1b;9�8I&#x1;*�@Q&#x13;��l&apos;}�sIp��&#x1;�&#x8;&#xe;�E&#x11;&#x15;&#x1;{6)U&amp;��mj&lt;*�_&#x2;�	D�, �&#xf;�&#x16;&#x6;��a�P&#x3;������&#x1a;$j*z�L�&#x15;&lt;&amp;&#x1d;֨&#x2;$�&amp;&#x0;�rE�&#xd;
��B���j&#x4;���)y8��j5����&#x8;&#x1b;q]4�&#x16;��D�6&#x0;A&#x2;ɤ%&quot;�&#x7;&amp;��ۂ�u&#x4;@�&#xc;�&#x3;p�@kB�&#xd;
��x��J��&#x1f;D8�H(,gƱ�g�ġ�y�&#x5;x�&#x0;f�&#x8;2xlI&#x17;�&#x0;�&amp;��ǄDׅj&#x18;&apos;X�D&#x8;&#x1;�&#x7;�e&quot;�ͨ`�ϣ&#x6;$&#x4;2VN!&#x380;&#x16;�8&#x13;3�E�SY�}�&#xb;��r&#xc;H&amp;=A�&#x11;&#x1;&#x18;&amp;U&#x5;V�5���&#xf;&#x0;W&#x19;&#x12;&quot;B2 �w�f6%M?�s&#xd;
&#xd;
]y�&#x14;�)��&#x12;&amp;�&#xc;��&quot;�$`xs22&#x3;&#x83;&#x12;����&#xd;
&#x13;�N���H�q֕NO��&#xe;P�:/`�&#x1;B&amp;f^�&#x11;	&#x0;I&#xd;
�@{�F�vڼ^f�@�5�TM�Q���8��n&#x7f;�	&#x1d;#&#x1;l;&#x2;&#x5;e����&#xe;!��]4]L`m��&#x1a;�$�r��M&#xb;uGV�6�&quot;n0L�&apos;�&#x11;Gwq��l&#x10;&#x8;Ǧ;�h�_&#x11;���m&#x15;���&#x7b2;�4�jz� ��*�-��A�&#x1e;�U&#x15;�G�&apos;u�S&#x3;&#xb;&amp;&gt;V�A@�	&#x16;�^s��L�\��Iwr�&#x18;.��&#x5;.0M��&#x19;1�����&#x3;�E��&#xc;���P`�&#x7;&#x11;�a�f6&#x10;@�A���ҕI7[`Cb����&lt;�n���l�#��M��`(*+K&#x1c;$*m&#x3;*&#x80;!0�21&#x12;&#x11;&#x18;&#x14;�F�t�`Z�5aK�@&#x0;m�&#x10;�&#x19;N:f�#�&#xe;NZ�&#x6;{�1��w�ֺ���&#x18;�&#xb;���f�P&quot;&#x1b;Mt�&#xe;�Щ�a&#x16;��:�X&#x7f;&#x2;:&#x8;+�q��&gt;N���b?���e9.&#x1f;�!����鲹�&#xe;C&#x0;��QF�P&#xc;&#x12;L%&#xc;���&#xe;�ܖ��S&#xc;&#x2;&lt;�&#x7f;+&#x8;�&#x19;M&#x10;&lt;Nr�}&#x12;&#x1c;r&#x5;&#x15;�&#x11;�&#x12;��&amp;���M&#x11;\��&#x10;|�&#x1c;&#x18;k&#xf;��xU���&#x1b;��EX�I�H&#x8;�~	�&#xb;�g��t�e&#x4;�5&#x3;��t��D�&#x19;D�6ɌR&#xd;
&#x7;&#x1;&#x1c;&#x7;�A&#x8;I&#x1e;L&#x0;�v�g&#x10;�}��&#x1a;�&#x0;�Y�)�Z&#x7;��DQ&#x0;x&#x18;�k\�*�&#x19;&#x1c;�f�4Ӄ잂�&#xc;���W&apos;�&#x1e;�&#x10;.&#x18;\�&quot;.&#x15;&#x7f;QxA&amp;�7J&#x5;&#x5;�A&#x7;�c�H�$���f��&#x1;矬&#xb;#�&#xd;zѧ��A��Wa�Y���_�&#x2;Z[�&#x8;&#x10;Ӆ�*��u�̽D��;e�&#x1e; &#x6;Bj&#x4;&#x15;�&#x13;8���Y�&#x12;D�`&#x1a;&lt;�&quot;&#x4;�`�����J��uN���&#x6;&#x1c;$�/n&#x6;w*#�A�^&#xc;s�Fr$l�&#x0;�F&#xb;��&#x7f;&#xf;&#xe;�&#x2;����`^7�ܐgS&#xf;O&#x4;&#x13;&#x13;������&#x13;�2gɰ�!)&#x18;p�W`&#xe; I1�&#x7;&#x7;v)*&#x0;�2�&#x6;��Q&#x8;��&#x2;&#x15;&quot;�0�&#xb;&#x10;-��n��;&#xc;�c�q&#x8;3ti��kk�&#xc;�&lt;+�%W�lW,�ص)G&#xb;*;&#x15;\\�e����ļeb&#x2;��)�u�&#x15;���m&#x1c;Z�jd �̕Q�&#x2;��+��J&#x2;1��&#x1c;�&#x16;m�&#x6;�&#x1b;%2&#x0;Uޑ�H&#x1;&#x15;q��#&#x1;�&#x18;�&#x2;&quot;�х�LH�:&#x1d;�&#x2;c47&#x1c;��j��&#x10;Fl�&#x1c;�!��q&#x1b;&amp;�&#x2;	�&#x8;���in&#x1e;&#xc;�^���&#x17;&amp;����l�F���&#x1;,%��Y�&#x8;S�xAu�y��F��u4�w���j��&#x0;Z�oo0&#x12;YvbpS���蛂�8V^��,\�Q�C(&#x16;�1�mXϨm|��͎�C�a[Xb�&#x19;�q���,�\�]tH���\�{�;c��y��&#x11;�R��&#x18;J�Iu��&#x16;f�pj�&#x1a;&#x5;W�[C��qvD~�i��\�L���D6_�h}�%;U0,��l�w�U`Q��ʪ�&#x10;Hzs&gt;4�[��EX��\ͼZL�u��&#x1b;�����V&#x12;5���&#xe;��=+��I��&#x19;N�D��Z(��&#x1a;�RC�����b� Tu�]�&#x18;&#x19;5A�0\3����AA��;H8eC��F&#x14;�k&#x13;��ֺ#�|s���&#x1e;&#x1b;�6=&#x0;��ڳ&#x10;�QΪ�#C�&#x7;�&#x16;�GC%Wc��0�i]�e&quot;\&#x10;�3�1��y�&#x1f;o�TMP�&#x1b;&#xe;�7�$)�IH�`����E&#x6;l�&#x1;�X�Оˎ&quot;^&#x17;�&#x18;&#x16;t&#x14;~2�Ų����X)(�h��N&#x12;`䑶��&#x1d;&#x380;Rt�ˁ�f8&#x12;�C�+��&#x19;Ӱ�&quot;�ΐR?�*�z2�!�@�`�C\�5	&#x10;��2�Q]}ݑ@�Գ��ov��&#xb;&#x1c;~&#x17;W&#x1e;��xY#&#x18;&#x1a;&#x17;�&#x10;�r7�s&#x17;���F&#xd;86&#x18;df&#xd;&#x5;5�y���8�&#xe;�[`&amp;Ƞm�&#x4;���p�j�+q��z��*!��&#x18;oצ�)&#x5;3&lt;S�l9����a�6%N��.�w&#x19;�A��fg��u�Pő�U.i�&#x1d;&#xc;��ߍ���&#x4;�&#x2;&#x7;fu&#x11;�ɦ��1�&#xc;&amp;&#xd;f&apos;n&quot;\3&quot;9r�ن��9߮czb�2&#x1b;��[�@P%k׃����D&#x16;�C��\��)�t�b&#xc;&#x4;&#x1f;R��&#x5;c�@�{�Vw.f�Ht�2��f&#x7;���&#x8;�P5�پT&apos;&quot;��H��ĞO��`A�&#x1a;�~;�7&#x1f;��3&#x4;�&#x1c;��d�b&#x19;Ea�^5^1&#x5;&amp;�,,�9C�N�Ȫ�P~�&#xd;
!�����0�gO���&#xe;&#x1c;&#x8;:&#x13;��&#x12;����@u��&#x1d;�;&#x1b;�Q�x]G�b&#xc;��z���T&apos;esLic�&#x12;V�R]!�#�u+R��x�&#x6;��&#xd;
��8���L�\��&#x14;]�&#xc;q�q�k��ۡ�&#x15;�&#x1a;��&#x19;��P&#x19;���0OQ�M5���TQ�&#x13;�&#x14;&quot;�&#xd;
&#x1d;&#x2;T�&#x18;�É�&gt;GhN�a^5&#xd;
/&#x1;�m&#x14;�u&#xf;�3eS�����&#x1a;1�B�&amp;4&#x14;��&#x7f;2%n�	�Ň-��&#x17;�m(�ȴ��{�r[�&#x1;&#x1e;�à�oQ�x�B��y&#x7f;�U�B�&#x4;���&#x5;��r�Q���&#xd;
h p����Q*%��,N*�CC4�&#x16;&#xf;��&#x1;H&#x3;pLT&lt;�=q�&#x1f;�lB0&#x12;p�&#x15;�&#x1;&#x1f;�&#x4;�-�Z&#xd;.cvj��yP!�G�w1 v`8jy&#x13;dct��&#x17;&#x5;�����cURU&#x3;��W�&#x4;�&#x5;av&#x18;�T2jZ�%�&#x16;��Щ2(&#x5;�&#xf;N&#x5;�F?�d��&#x12;&#x16;0���i��E���&#x1e;�qj�b&#x0;����ґ��a�=�*�)E&#x15;� K�&#x11;̪͕�&#x19;#@��N&#x2;	��D�Pz�p`�C�������p�ԢO0&#x6;�#&#x8;_�$�H0&#x12;�&#x10;ᖩV�Y&#x10;&#x1c;x�Z-9&#x4;�Y�$�&#x18;�&#xd;
�80&#xd;
D&#x2;y�.�7��AE&#x0;T�I&#x10;bHnG�&#xe;&#x18;&gt;�z�&gt;&#x6;��	&#x4;YY�&#x6;$1M&#x10;�&quot;�&#x6;&#x11;��&#x7;bk��u0&#x1e;,&#x5;,�I�&#x7;U&#x1;���ElX�&#xd;
$M{���&#x1d;&#x3;&#x16;&#x16;T&#x1;�0�&#x6;M�t&#xd;&#x1;g&#x1c;,=p&#x6;*W���&#x1e;ERc��OSĥ&#xd;�&#x10;��	�C�Z2i�U&#x2;����&#x1;x���h�Y�	E&#x12;�&#xf;:W�&#x8;�B���t&#x7;&#x19;�-^/\&#x1a;��&#x11;��]&#x0;�	Kj��&#x3;)�U&#x5;D Ȇ%&#x7;p��S&#x14;��a�C�;�y&#x4;����&#x5;�&#x3;�&#x5;Kk��x�&quot;D��po� ��+۴&#x18;�A��6`,5&#x0;&#x2;��̸X�U�X&#x14;�^@�*=X���T�.K&#x13;&#x10;?�_��p	�zB&quot;M&#x6;xr������&#x1;�&#x10;�	�F&#x0;DX��,8�ǈ���&#xe;�уx����p&#x1;�&#x3;�&#x2;m&quot;����&#x1;q���`j &#x0;�����&amp;�O&#x1c;c&#xd;:`-tH�f��&#x0;�`�h�!�&#x1;:�xVF%&#x2;, &#x1c;&#x1;Ь&#x6;j@\&#x15;&#x0;&#x0;&#xc;��ɁH&#x3;�&#x2;#N&#x14;�&#x7;�&#x2;&#x10;�@�j�&#x1b;a)&#x5ca;O&#x15;�u�%&#x2;���&#x15;�V�uL��`�M��fLрU�5�(/�n�&#x7;x�dk��H&#x8;�`hNt��&#x19;|�Zi*�}��)�+B(�~�Cfm�g&#x6;&#x1d;�&#x18;g-1dY�L&#x4;�&#x8;M!Ժ�	#&#xb;&#x1a;�GS-b�����!����&#x16;�1C�Jg�&#x15;r���J&#x0;b`�I�&#x6;�&#x13;�9xt�&#xc;�&apos;&#x1;u&#x3;&#x18;&#x7;M,&#x15;&#x6;���&quot;LxE&amp;����\&#xf;�&#xe;^&#x0;e�`%A��p��R�&#x12;�&#x2;p+l�2�5��p�~���-�*������ke R䂄�&#xd;
&#x1e;�bY#�H��n&lt;����X�$�x&#xb;%�1T�3b�&#x1f;�c|�ס�`��&#x4;�ۮN���&#x0;=ZeF�&#x19;�������nL��4��&apos;�&#xc;�� Q&#x11;��ǂ��bM�&#xb;��E�m�Ԡ�q�J�ƴ �&#x16;&#x14;�&#x7;c&#xc;�t�GddY�&#x0;fQ�Ӝ|�B#n$�5&#x0;&#x12;x�k%+&#x1b;e&gt;�&#x17;&#xc;�1���r-Fк��	&#x0;�bu�K�&#x12;�����&#x10;���H�z���&#xf;Ԭ&#xe;qrL0�&#x1b;A&#x12;&#x19;^�&apos;��u��&#xc;� ��&#xd;
&#x18;&#x90;u�&#x15;&#x18;�ʩG���:&amp;$6�7vS!T�&apos;�`&#xe;��V&#x6;����I��x�}�&#x12;�i��&#xd;
&#x17;��4��`d�G)��j=�0L�4&#x7;��&#x17;f1��|��,V&#x7;�s�Ԃ&#x1;s�È��ݖ�Ũ��N&#xd;�19ӳ�&#x18;��&#xd;
��&#x5;&#x6;t&#xd;�&#x15;$!g&#x12;ZhJT��b֦&#x3;N�L�b��7�t�eQb�6�����c&#x11;_+����ǔp�p�a��&#x2;&#x1a;:&apos;�8t�D���2&#x1f;ւS���0wE/�&#x1c;�Ֆ�s�*��O���~�,�&#x1a5f;��&#x7b5;|r&#x1a;=�nT������7�&lt;f���&#xc;A9��T&#xf;��N�&#x1e;kj�q�ꑳ(L�&#x1d;3�=+��&#x3;t�r�4��C]&#xc;�&#x1a;u.+&#x1c;&#x12;P&lt;�*3�-.&#x19;y�(��|_x��ܭY�I��&#xe;��7S���b&#x1;��FTXm��l&#x4;�&#xb;v&#xe;C���m�]�s����Y:�9�z&#x8;&#x10;��. St��3_��q)��O.�tִМZ��&quot;��Z&#x19;ٱR&#xb;,xU�,2�%x�&#x8;y���{Z&#x18;�l�&#xd;�z��rK��&#x1e;D&#x16;&#x7;��*=�ߕ�u��`)o�c�K=5ߪ&#x15;8-�T�&#x17;j�&#x1e;;���s�,|�&#x1a;qyGq&#x5;P�bY��8&amp;��j�W��&#xd;
�&amp;���&#x14;u�m�s&#x16;�υ5&#x18;�b9q&#x1e;���Ѳ��{�I͂�7�g�;\Z�I+� z�X�UD�Y&#x1e;�&#x17;&quot;��%&#x16;vo&#x1c;@&#xd;�[=&#x1c;/z&#xc;j&#x1;N/�b��F.B&#xd;
��Otb�&#xc;~3&#x2;j%�&#x5;Y���(�	�b�X���^�Vm��6X�&lt;I�J�e$�n����Z�{�&lt;��z�&#x7;&#xb;�7&quot;`r�B&apos;D�l(��&#x1d;&lt;�^MT)�&#x12;	&#x7;��a�&#x1b;�kӪ�j�&#x13;K�P�G���V1&#x8;�.&#x8;vC��|�-��������r�&#xc;&quot;�N��U�@w&#x8;��/j	,�jU�*[&#xe;&#x16;�g��	�-���S�&#x1d;�&#x7;ً%��+&#xc;&#x8;&#xb;ב�Al�y&#x0;&#x3;=,T&#x13;��b�uȋ�@�-k�D^1�*��y�x&#x1f;e1pk�a�&#x1b;�jD^c&quot;�b���&#x1f;�&#x1a;���&#xc;V�+{&#x15;Aֆ�&#x1b;h&#x18;&#x0;&#x18;Q�I�����fmX��5�R�av/��@�k�Y3�(��5�M&#xd;&#x1a;S�+�VQ�-�S��6&#x3;܆�&#xd;�&#x1c;3�&#xd;Es�L�����m�����5&quot;�W�3���a0�[�W�&#x12;[���k�x�g5�vŶ3�&#xe;R&#xe;�ݭ��iz9�ftұ�&#x12;��׆��ϡp��Ģ��cx�f6�(H��&#xd;l+���&#x6;�Lլ��N��hŊ�x�`o�,V?��j�&#xb;*X&#xd;�l&#x6;�5s�X`�X&#x8;�B`R}ַ�i�e�9�N?&#x7f;Jp�Z��H�&#x18;&quot;B&#xc;U&#xf;M.�zH&#xc;�&#x8;���&#x10;F�&#xc;ܵ��x9�&#x10;Kj(jd8V��&amp;&#xf;��$��d�w4D�y&#x14;W	O����9��&#x12;&#x12;�����s�b�&#x13;��!v.�ʅ�$�&lt;��Vc&#x1e;[�x�4��u&#x1b;�e�(�&#x0;V�(9&#x1e;��+nh�`ޠ&#x19;�&#x0;OMk��2��#ѫ�&#x8;&#x7f;�D�]G7&#x6;�e��&#x15;Q�ľ&#x6;&quot;H�|Z�u}�&#x2;C�Z��EV����jhS�n�&#x1d;b�&#xd;���\��&#x1f;&#x17;=D,��&#x1f;��CW���9�6|�CX��#x�T0��=&#x1a;d�&#x1b;�zC&#x7;Y3}Ә9&#x1f;��&lt;&apos;�&#xb;+{}����&#x1a;2���&#xd;
̛�&amp;�ǒǨa�&#x5;C�\8�=&#x12;1�_��z(��lP&#x14;Y��E����_c�&#x16;K&#x8;&#x0;�!�8��������3�]��ӬHL��K��C&#x7;�w&#x1f;�V�F!m%J��D-#���s��&#x12;&#x5;d&amp;��sm�֍�{FAxtH&#xd;��B�j��`�*�v�&#x14;��`�&#x3;#&#x17;�f���4�/&#xd;
����D�Y&#x4;&#x19;�(���ܪ.�&#xf;&#x19;�d&#xd;��Lƨ:}���Qh�ϭ&#x1e;L�y��&#x1a;},+�ӕ�̻&#xd;
&#xb;�&#x6;����&#xd;
���U+��v&#x11;�;&quot;Y&#x6;���Ρ����kx&#x13;q%���H&#x7b6;=uǑ;&#x16;��w�&#x1b;&#x12;�&quot;&quot;]ݛi�E�&#x12;榐�ߋ��#��&#x1e;&apos;|�&#x1b;N)Z����ޝ&#x1d;Xn�n�9?���Vg3�prq&#x1b;&#x19;���[p�s�9̹a�&lt;=&#x1d;eZO�&#x1b;Y�n�jEZf�w�&#x3;d&apos;��V1����&#x8;e���BQ*�T��g�&#x7;���&#xc;h+�\�n�ȹ��&#x18;Y��k�.bq�-JMͳ��&#x7b9;&#x1a;�ȭ��C&apos;5����&#xe;傈&#x1f;���&#x15;&#xf;�3a�����}�]�c�&#x0;Ϻ�&quot;&#x5;A�&#x5;G�q&#x10;�ܒ����Ќ-��&#xd;
�RLiǥa&#x13;�@ff��&#x16;�&apos;%L��&#x8;N6��1�@�^�Pq�W�0�P�F��Pn���l&#x3;4c=��X)&#xd;
5&#x18;�&#x19;��L�w��&#xe;|L �P�ʑO�nH6ψ�&#x13;��&apos;G&#x2;&gt;&#x10;|-�#&#x5cf;�Sg�m�Q���-&#x1c;�&#x19;�&#x5;���6t&#x18;pf��	K$����&#x7;n`]&#xd;��&#x10;imIC���-&#x1f;��&#x14;&#x13;�d�&#x2;gGn��&lt;&quot;�rɞ�5n5#t�oNS)��iS�ru&quot;�aeE&#x7;/&#x18;!�r�&apos;�&#x1d;�_&#x6;&#x19;9��&#x1c;մZ��s�&#x19;�w�g�,�cm��v��RK&#x1f;&#xd;
&#xd;
�#Byk��&#xd;
���D7����ٱj��m&amp;G�&gt;)&#x16;�&#xb;&lt;q��\��YF6���qܨH�ik���89lcj&#x11;4Ń&gt;,��M3mk�i%&#x13;X�&#x13;d��Vc&#xd;O3onp�[�F7vΧq�=��.W�4ޮ&#x7;�&#x11;&#x1d;߽&#x16;���K5&#x0;��i&#xc;�5&#x8;��5ڵh��&#x6;`�&#x6;��X�&#xf;�`�&#xb;;�zJ�)�&#x19;��C}�&#x10;��`��&amp;z�eՉ��ti��&#x11;&amp;�wD�A`��&#xc;�rA��U&#x16;Z�̨��&#x1c;Zie&#x3;�����&#x3;Y��E����lƔ�:�V1�c&#x6;�&#x13;&#x1b;&#x3;ʠ�l����(&#x6;�YCNޅ�*k�E$]�r��&#x7;&#x18;�鐬b�&#x6;�&#x1c;�,���In��#Ǔ�C �e�Eb����C&#xf;���M&#x17;D9� ��牍�xtF&#xf;�A�:���&#x10;��Ek�&#x1f;&#x3;�&#x3;!����xE�.&#x1e;&#xd;&#x1a;(&amp;K���&#x2;,&apos;�s�2��M���k&#x11;ڑ�O�&#x10;�&#x1e;���v/R&#xf;�t�U%35�&#x6;S=�򃨾&#x1e;�&quot;�&#x8;p&#x1e;��W��� ��5����QR&#x17;�&#x1e;&#xe;# ��&#x4;�3&#x1c;��\q{�W��J&#x2;�&#x4;4J@�*:�&quot;�p&#x1a;�&#x15;�T�&lt;�#ƕ�&#xb;�&#x0;/3��(2̎��O�&gt;�&amp;&#x5;�P�#�Y�j�!��#�&#x3;�7�&#x1e;G�&#x18;T�&#x17;y��&#x4;���}�x��M�mEyu&#xf;��&quot;�˭��FK�&#x1c;�z��	�nN���.9&#x1e;z&#x14;�#3�C�H���w�Vt�ꈾ&#x11;i��6fc�S�n���&#x1e;&#xd;
_��&#x1d;&gt;M2&lt;�Q�xqn%�{&#x12;��ܡS�����{|c&#x3;&#xc;w�X����T6^2&#x8;�,N�~�fv&#x4;�&#xe;�~����r�%�%�&#xc;b���&#x0;�q	�yO�&#x8;b5l4�	[�3&#x11;\h�,� �Iq��x�\�C��WR˺gQ4+k�ey�(&#xf;fխqPW^{:Ďx&#x1d;�&#x8;$��\�&#x1a;k�yy��j��{&#x1a;�s���e��&#x1e;Y�o��!)+&quot;M&quot;c)��y�0�&#x13;�&#x1;�^7k���P�ˋmE&#x19;��ؗ�&#x5;����	&#x8;�NF�Dy��&#xd;&#x10;u��|��I���&#x1f;x��&#x17;d&#xe;���&#xb;�7l��Z8xC&#x3;��&#x16;\\�`&#xc;eע�C�&#x2;/�����J�F�&#x1f;l�;�&#x7;�*��{�&#x16;/�gM&#x1e;�&#x16;ȝ3Z�E�/˫xX!P�bgm&amp;&#xf;�^V�&#xf;ƛ��3rd�ν�&#x0; �P&#x6;&#x17;�1��&#x1a;&#x1a;-ds�쑑��V�&lt;����&#x15;&#x19;�e&#x5;�v5�[�&#x4;�&#x0;#w��m �AA&#xf;U&#x6;�[A�$��#zcD�R+�k9e&#x18;]&#x2;���9��?*vo{79�6�SA&#x8;&lt;Ϸ�&#x1;�&#x15;&#x7f;u@W&#x18;;&#x4;8DT�&quot;��ܛ�1�8�BO���ؿWC�yO�&#x1a;�r��ph��+��S�&amp;&#xc;Q#�Qq�ZOj���&#x1d;��&#x1f;7˯1üA�(�*�&#x18;��&#x1d;�&#x10;�I&#xd;�4M&#xe;Ӑ&#xd;
�~�M`9i/�~*r憦�?i&#x1a;|��Of��Yp�&#x16;%Ll�kW�������&#x1e;qw�fe��T&#x1d;jp��5&lt;���d@��n4l�����&#x14;��o��Hu6�Գm&#xc;��1qV7n�L;N8&quot;���)���&#x6;�c&#x7;f��c�j��^[�ru��&#x1d;&#x7f;d&#x6;�&#x1a;[D�N҆�N�tnr�&#x13;ت&lt;Q\;E`��8&#x1;i�s�&#x1;����4�9&#x1;j&apos;�&#x13;�&#xe;|u�_&#x16;,j|9�0&#x1d;�H����~y~�w�]�����&#x1d;&#x2;&#x7;��z&#x1b;j�ټ�v&#x19;�v�+��q���v�/���&#x11; &#xb;���:&#x1f;�&#xb;�����6��9]63�Z��&#x7;|Y������������-���&#xf;^�[n����{&#x1f;.�&#x7;������&#x19;�&#x0;|&gt;��&#x1b;�q���9�\7�nw�����ᕽ&#x19;T��t��&#x2;p�g&#x0;����~������&#xd;b6��]�ZtZ&#x1b;�_[�A;�&#x1;�~t��m�~%�a�X���1�%�3�&#x14;�%���o��&#x1d;���mGe[��d�����ҝx!�&#x7f;b&#x10;�Î&#xf;&quot;��/��&#x0;��W��}&gt;����奙�&#xf;X����6�-�&quot;L������l�0N�&#x1e;�K���vz&#x7f;x����&#x1;��̷�r��|^.�2��e6&#x1f;_���&#xe;�&#x5;���֖|��DJ�̂W��QD�\Q�À&#x2;�T�K�!�r)�B$��U����Z�K1&#xd;
��P��܀&#x8;k�~Aj&quot;i�^��ӗ����V�V��5�N�&lt;r��6�q��&#xd;���i�P&#x5;&#x1;q9���ćkJ��ܶ�n�ݩ�$S&#xd;|�D�y&#x19;�?�sjH�Lu��&#xc;T�&#x1c;�&apos;�.�&#x16;�8�	&quot;�X���Ъ�&#x1a;���&#x96;��Z+IN&#xf;�F&quot;��Ij�U��n9F�&#x0;2!e&gt;h5hw&#x2;�&amp;jt+��U�)�Ec�4:��*��u�O�Iȕ��P� r���̻��&#x0;G��&#xb;�&#x12;h��c�y������&#x7f;\�0�w�P�&quot;��	YD�&#x1d;�p�6&apos;&amp;�C���6/�wy�F��ijo�&#x1;/�q��5&#x19;��ZU&#x16;w�ˠ��&#x5;}�&#x9c;&#xd;�#w�&#x7;&#xb;�#�r&#x11;�R�ϨٗE�`vݼ|�&#x1c;����mV��&#x0;,&#x0;K01��x��x�5o`�&#x8;��a����/��~��&#x16;&#xc;��L�3`�߾��X^����fs�}��7���&#x16;�}&gt;�&#xf;�mA��+�&#x15;��&#x11;I�~�H�/˄��&#x0;M8QA�˧���&#xc;&#xc;�6�-&#x18;�6j&#x8;&#x1;�{�7[,Y&#x2;���r�����C�%&#x13;r���&#x1f;�o�u{٣��ݩb=�����&#xe;)G=��&#x18;p�$��|����р���&#x7f;����&#x2;�`3�o��&#x7;�1\�&#x1b;N&#x2;���o�W&#x2;�&#xf;F�񔼮E�&#xf;ˊ��w*��&#x0;&#x14;�&quot;c�&#x14;�X����_�&#x1a;�&apos;�c�z&#x7f;�?h&#x5;�&#x6;��&#x19;��&#x0;�&#x8;��Q��S��x[v�K~!���Q�`�&#x16;4#&#xd;
KT?���n&#x4;q$y�&#x1;�&#x1a;&#x1e;w�_&#x3;���&#x16;���-����L4&#x4;m�m�/&#x1;~���a&#x7f;\��4eBX��z^��Ì&#xf;&#x0;�&#x0;�&#x3;	���=&#x15;�&#x1;��`:�H7��;���&#x4;육����!���Lo�&#x3;&#xd;b�&#xd;�3E��A&#xd;�0�&#x10;K1�r�0�@���}�&#x1;&#x14;�&apos;s&#xd;҅�����ǩ&#x6;�GD&#x19;�&#x1a;��&#x7b7;��3�g�M�z&#x7f;��-�EWu�s&#x18;�)�*�&#xd;���&#x1a;���6�dj~&#x6;��R����t^_��&#xc;&#x4;c�`~K|��wJ�,��7�k@K1Ȇg����2��~ؼ.��W�$&#x19;v�����^yh?C3��?&#x3;g�3�2!�:&#x1d;&#x1e;&#x1b;�DfVfj$z���W|&#x5;��T��ӗ&#x7f;}��o&#x7f;����&#xf;�����������?�����&#x1f;��_�߿��������&#x7f;kW�t������}���ϛ�&#x19;&amp;��&#x1a;&#x0;�&#xe;���&gt;�Y�&#x3;�p�ny�a�a�3��K��~x���q���vɼ�����f�������t�U�?t���πp�����Û���N�	�-�/��&#xf;�ɞ���&#x1c;&#x1e;�&#x1f;�U�D�/��J�_9k�&#x15;�&#x7f;���e��?&#x7f;��]&#x1e;��z���_~󛏏���$�&#x0;W�)g���F&#x5ff;E��z�&#x5;��&#x7f;��o���7&#x18;���&#x6;���&#x15;b&#x13;&#x11;�&#x1d;��&#xf;�v_�^�&#xe;�k&#x6;Gl�X}�&gt;&#x14;���m&#x7f;�#����A���&apos;&#x17;�_����P��_��J����;�/�&#x16;^�&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/metrics/1/e392d605-5690-4835-814d-2840e3f60847</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:23 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/baseline/1/f52bf490-53c3-4674-bedb-25fdd19cebd9-57" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�0&#x10;�&#x17;^[#&#x1b;&#xc;����W�G�ːX&#x5;��&amp;m���4i���j%�`f����x&gt;�������&#x14;�G&#x11;�W�W���I�4$7C�&#x17;&#x15;�jB%��&#x17;�{�=Ѧ�i�\���jڞշ�&#x0;*.&#x1e;+�I�&#x4;&#x19;��B@�O1�����,��.ir�c&quot;a��eK9�����}R��&#xd;RP9&#xb;&gt;���&#xf;�5#��*�&#x8;횑p-4ѣm���(;f��4��y͌���&#x16;o�}~��G��Hf��&#x12;~&#x12;�ϼ.!�7�[&#x5;K&#x18;k&#x1f;R4�O&#x18;�&apos;�x�翉���@���Z&#x1a;�&#x1b;#��uK&#x4;&#x1b;ad&#x15;�&#x1d;c;�&#x8;a%ʒ&#x4;&#x13;̐��?&#x13;Qc��&#x10;&#x15;i&#x5;�� (&quot;:j��T�Z��X�&#x13;1�tU% &#x17;&#x15;�!&#x13;�JO@������\��Zbښ&#x11;��T��Ԍ&#x1a;CG�I)���jr������&#x10;��77�~M]�2;S��`��{�0��&#xd;�/h���vy���p��]�O�&#x1b;j]\&apos;u�O�&#x16;[�_��z�fP�&#x1a;�ՌW9&#x19;��%0i&#xb;y��&#x1d;Z��&#x1d;0X�r�Ɏ&#x12;�Vf/���󴿱pt!�!l�Z|�|�T�v�Rd&#x6;\T�i)��5x�M��&#xd;
��&#x1a;�ը�l�E��e�&#x17;��f&#xd;�虤�Am����7vR&#x1a;Ų�Y6�r�Gq@�|	!,�t��&amp;g&#x7;�!��5�Q��y(�v�Y�&#x1b;�^�;b��y �!nzv)����&#x5;ED&amp;&#x12;�:`&#x11;��`.���&#x1d;�&gt;�6��&amp;8(s.o&gt;(�U��iǮj	&#x13;&#xd;
�&#x5;m+&quot;&#x19;�&#x4;FYם`�*ZdS}�R&#x7;�&#x7;B	��&#xe;�&#x1d;Zn�]t���ǃ����9i^�_סS�&#x0;F{�v&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/f52bf490-53c3-4674-bedb-25fdd19cebd9</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:24 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/newtab/1/477d817f-6eb0-4863-8553-837bafd1ab29-58" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��V�n�6&#x10;�&#x17;�nh��n�&#x1f;��[�a�&#x10;(�R��I-I%�&#x6;��&#xe;%G�c7-&#x12;&#x7;&#x1b;�0l����̑&#x1e;�Q��Ѧ�I��x�3�i~���]h�ު�NR�R�&#x19;Jӯ�ָ�����&amp;QF^�ISH��8Ž5�a�}�m��ښ&#x6;bc��Q9�`����CP&amp;�=����&#x0;?���v�.�{��;�&#x8;)���`�&#x10;�ZǍ��&#xd;
&#x9a;&#x0;�s�����Dǘ�&#xf;	&#x1e;$��b�@�2��\T�b�@&#x15;�TGR�KB &lt;��x&apos;�����ROO7��w�`�&#x1a;�j�&quot;&#x12;ex;(t�~&#x5;�`Y+:,�((A&#x19;�Z�x�&#x11;%X&#x8;�ɒ��UL^�&#x11;q�&#x2;&#x0;ڪ�vo$�wE��*EE�I������&#x2;	�ۮe8&#x17;�}&#x15;�4BˤB~�a��m�&#x8;$�D�X�&#x18;��7/!v�I�+�p�w&#x0;&#x11;�j;�#)ӎ�D&#x10;��&#x0;e�Ԡ!j�앜��&#x1f;M;�!���&#x6;o�r&apos;nuP&quot;L.�x������8��q�qErRR��`�0����H{����&#x1b;�&#x6;8ߏ��\j?&#xe;|��)&#x17;�;�&quot;)�6��&#x1c;&#x1f;/x��ǺY�RQ`�h!�/y&#x1;}Q��YƻV���U�_�,p&#x1b;3m[咚0��&gt;w��и�4��þV(��M]&#x2;�v�J�0&#x10;M�b\ϟ/�w&#x2;�F&quot;��7v�&quot;��dP=&#x17;��J���&#x6;i&amp;��L&#xb;D*&#xe;m�E�&#x18;�2�:FiY&#x11;&amp;���CZ�/B&#x14;;�Q��FmF��&#x0;���&#x13;&#x0;/����[5�^5&#x2;|z�v�&#x2;ʃ�`&#x5;&#x1f;�lA&#x7f;�y8߫���S&#x10;Ru|&#x1a;�	���&#x1e;��E2��9q&#x13;t���fG&#xf;&#x3;�7.&#xe;GM��Z&#xb;#a�u�⇊��Rup�Z!�eO��&#x10;�&#x1b;�{�$LvRw|�`[���Y�a#��&#xe;�.g=�}�N+&#x7f;귶�&#x19;���y&#xf;�&#x1d;b&lt;D-�p�o���Eѿ&#x1;&#x11;���4َI�a�&#xf;&lt;/)b&apos;��&#x4;��2J&#x1e;����&#x13;��[P��&#x10;���N��&gt;&lt;V,���)�,�	�Z�@&#xf;(ʊ�`��T��)��	 v&#x2;虭&#x3;$�n�&lt;�N�J&#xf;���&#x19;��$�&#x8;����E�=z&amp;t&#x16;�I�&#x7;5(�&#x4;�&#x8;&#x1a;���#�[�&#xb;꽼&#x10;!&apos;7Z��_�y&#x1;w����=�#=ǘ���&#xf;E�}0ʣR�5&#x7;8%�����&#x7;qY\���z��B&#x10;��1&#x7f;&#x13;��i,9���g(�ϦB�&#x1c;c�&#x1b;���7�oCyT��[�+N%ͳ��|BT�&#x1;�YN�W_B�`��K�;X���&#xf;u&gt;@�_&#xf;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/477d817f-6eb0-4863-8553-837bafd1ab29</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:24 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/8ab128b0-ee70-4dc5-a419-dd8268d7eb88-59" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�0&#x10;�&#x17;^k����n=��S&#x1;&apos;E/&#x1;&#x4;&gt;m�&#x12;��T&#x12;7ȿw)&apos;N�&#xd;
9&#x14;0,i5;3��&#x1e;����w�N�{D��F&#x1d;kv(&amp;&#x11;R��hP�&#xd;
R��p\�&#x1b;�tE��]I�&#xe;&#x19;�70E�&#x11;��y�M&#x0;�O1+�x��8O!�`&#x6;#��a&#x1a;�iI��&#xc;«#�&#x19;/�`�+zeJAdT:�YһQ.����,�M�{�+�,�X5%ŕ`&#x12;sQ	\R�&#x14;��圡�&apos;(ք&#x19;&#xb;�&#x13;&#x18;&#x1a;M&#xd;
�MKj�	�o��&#x13;&#x14;����&#x2;7�Ҹ�F`�&#x12;�&#x15;&apos;�JNj�%�o��F��&#x10;�68�S&#x1a;��6��`Dʢ&#x1f;X��k-&#x18;Ť�-X�ڥ�5ֺ������c+@l|t��xt�*�-v�ev��&#x8;&#x1a;S��g�hQ��[�u�&#x15;�j�0�e�&#x19;��҂���&#xf;&#xc;f�jp�v������&#x7f;�rqC֩�+r��p&#xd;�Z��GyK0���&#x1b;B���i�&#x7;�u!�&gt;,�&#x5;|^m�&#xb;vY�{��t&#x1f;�*�_Fi&#x2;�(&apos;U�Cb�{��&lt;�S&#x7f;gBnb��&#xd;8)!y���~�&#x19;�Q&#x4;utɨ��������ЙF&#x1d;��f���aY�߲���ؗ��]�hMےV&#x5;�F�8�&#x1e;�eq:_G&#x13;�8�&#x1f;O1��&#xd;
�&#x1a; &#x6;�}F .MiK蒕&#x14;&#x16;���ȶ�q��i��� u�N0�MBs���&#x17;aE�[�l�Eh�/�&#x1c;0ga�Yd�&#x8;��a�y��&#x18;����?��&#x8;Wm&#x0;|�������~�}��&#x13;ZC���|&#x5fa;���k�����&amp;�`4^�b^˿��&#x4;�P&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/8ab128b0-ee70-4dc5-a419-dd8268d7eb88</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:25 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/messaging-system/1/87e7508f-5de4-41c4-a40b-f1d04774395f-60" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;���Mo&#x13;1&#x10;����d���vn=T�&#x3; 5E\*���Xl���m&#x1a;��w�M�&quot;&#x1a;&#x2;R�d=�w&#x1e;���&apos;4Z��3&#x3;Z&gt;��&#x7f;�%m&#x17;(D�c&#x17;�V�%*pQ&#x2;fP���\b�&#xe;��&#x12;�&#x5;�N�;�q�&gt;�&#x18;r&#x5;&#x19;&#x1e;�n��G��&lt;h�C�&#xf;S�Qṓ�$�&#x1d;&#x17;����Y)z����[��G�r%��4X�lJ&#x2;&#x15;�&#x2;&#x18;�8�&#x4;K��j&#x19;�i{܏&#x19;�٭�©���&#x2;M��s�!�C��z&#x13;�&quot;E�y�E/�&#x18;̔�&#x0;nk&#x3;�H(¨&#x1a;�*&#xc;k�$�&#x10;&#x17;Q��#p&#x5;1�f��ߟE���i�&#x2;&#x8;7���&#x16;��J%&#x10;́�X�dX&#x18;�p-�e�$�]��&#xb;���=1�&#x5;�^�ng&#x7f;r����&#x7f;&#x1;ϗZ�	N����HP%�PՒ&#x2;ee&#x3;�&#x18;mH�qKH&#x2;̈��i�ɻ��uA}��d��W�W�*�pg�&#x1a;v�&#x10;�ܴ&#x15;ڣ%a��&#x17;�X&#x1f;b�&apos;�)&#x1e;_�L��&apos;#�q�&#xd;c��݃��7��4�@��^nl�2N&gt;+&lt;Ҧk��&#x17;�,�)�I[��8&#x6;�;��&#x14;&gt;NDZ&#x1f;Ұ�o&#x7;������&#x3;&#x1d;&#xe;r�%�ŀ���&#x1d;����n�F�Q�+V��7MV�߭&#xe;����}�z{��է�T��&#x19;�	]�2�&#x1a;A���t&#x5;�-kh&#x14;�&#xd;�&#x16;���!I��Y�~����0��&#x15;Z���J�z�&apos;{Ӟ7;���J�S:X�&#x15;���r&amp;&#x7f;�����mw��&gt;&#x7f;�&gt;ݬV�&#x1f;nV&#x19;&gt;&amp;w�E?,�C+�{�W�.;}VA�h��1��;&#x18;y��{���&#xb;���8b&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/messaging-system/1/87e7508f-5de4-41c4-a40b-f1d04774395f</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:25 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-61" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="viewCategory" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">viewCategory</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="categoryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryId</stringProp>
                  <stringProp name="Argument.value">REPTILES</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Catalog.action</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/newtab/1/90404098-4ae6-4daa-8988-b036dab8d3b9-62" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�Ŗ�n�:&#xc;��ŷ�&#x2;I����\�&#x1d;��a0dIN�9�&apos;��&quot;�&gt;�vݤͺ��6 &#x8;b�&quot;&#x7f;�ȿr�&#xc;��&#x1a;m:����W_�:�6�&#xf;܅&amp;�J�b�&quot;�&#x10;�&#x1f;	�s�&#x1;�u��M���d�ָ\m���&#x1a;�0�.���{mM&#x3;{��o�r��&#x4;&#x1f;���q��&#x1f;l���&amp; g�ގ!.��&#x1b;q&#x3;�&#x2;�&#xc;q�� 8&#x1e;W�����?&#x12;l:̤�&#x15;A��;��U��N�HJڱ�&#x8;�h&#xb;��a��F��ѯ���M&quot;�-���:`P=$�.�(��^�G�&#x17;�&#x4;�Z�a�D�&#x12;�q`b&lt;�(%X&#x8;�ɒ��E&amp;�܀�D&#x1;��*��E$aM��� �]n�&#x2;�hqUQTT���)��&#x12;&#xb;$&#x18;n���\�v&#x2;&#x1;���c�h���&#x2;�D�&lt;&#x14;�N&#x7f;�N&quot;B�w&#x6;$4-&#x15;�&#x4;�)&#x13;(�E�*�&#x16;�&quot;��&#x8;Ÿ$&#x4;&#x0;���5�Z;{-Y�嗦&#x1d;u&#x1f;���&#x16;oc��i#흟&#x17;&#x1a;3�[咚0��d~)y����&#x18;a�+�&#x11;�z�|���K��&#xf;�&#x1b;̓�&lt;&#x15;&#x15;��:&#xf;&#xf;\1|V�T&#x14;X��&#x10;P&#xff00;z+x$y��,�qH,�F��L&#x8;�|&#x18;�&#x4;b&#x0;\���)��(�&#x1f;z~hn��g&#x14;�I&#x1;��q݉&#x1b;&#x1d;�&#x8;���ߪ�)�e���ƨ&#x1e;^/&#x1d;?�&gt;u&#x13;�&#x5;����b�X&#xf;�@@z�3��|��V|Q��96�:���&#x19;��ւ_3��&#x1d;&lt;p��b&#x2;��(AV��j�&#xc;�E8Y��:��O�o��&#x19;��&#x10;��&#x7f;\{�c����&#x2;�U,��b&#x1c;�)ӓ$!GޫI&#x3;�&#x7f;�&amp;q&lt;��;m�V���}X&#x1e;�&#x3;�Y�&#x3;�h�|f&gt;8}&#xb;Msf��L7v�&#x6;�S�&#x0;��u�Uz�Ѣ�&#x17;L&#x0;���M��pV|&#x17;;�&amp;�&lt;�1�}ҫ&#x1d;&#x17;��:.��~��(��&#x16;�T&#x1c;D&#x15;&#x17;&#x14;1�eHu,Mˊ0��&#xf;���&#x7f;�X��p�쇤����l3m���&#xd;b&#x7;e�&lt;&#x15;�%�[&#xd;�3�=&#x6;&#x11;�)�&gt;�E&#x1;&#xd;
%0��&quot;GU�&#x8;&#x3;&#x11;�]^&#x1c;cm��D��[&#x10;�z�&#x5;hg@4=#���&#x8;��ͷ�)�`&#x1;g�&#x7;���M��e&#x1f;�;^Y�g�3�g�&#xf;G�+ʋ�7���5��(�7T�ҝ�A^[ɔ���&#x7f;�����$T�e�&#x4;�&#xe;&#x1a;�04�6��ߧ-O(��]��A��^�Y���3��b��W&#x5fd;�����)�k���&#x3;���.���S����Zҟ&#x15;��Q�NY&#x7f;]I����&#x18;y�r&#x17;���t�&#x1f;���?&#x0;E�&#x0;ŷ&#xe;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/90404098-4ae6-4daa-8988-b036dab8d3b9</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:25 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/top-sites/1/061c7e47-1425-41b1-a447-d00661fc808e-63" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��T�n�8&#x14;�&#x17;&#x1;��0!�X���&#x0;u�XyH� ��&#x17;��CG�&#x14;��&#x1c;&#x17;��!嬃�&#x18;&#x14;0d��{�=w�ϨUz])-�h�3��1&#x1a;#t&#x12;YG���ڊh&#x1c;�0N&#x0;� ���x��_`6N`t&#x12;	�?�IGo&gt;�V&#x18;=f0- &#x1c;8Q��p�	�����&#x5;#5D�{��&#x1a;�&lt;&gt;�;C�M��&#x18;xJ�=�&#x1c;QX&#x14;1&#x18;&#x15;)&#x7;)&#x15;&#x4;&#x14;9d�aH%�0c��p��&#x6;uZmig_S��5&#x10;&#xb;mU�-ت�!��&#x4;�&#x7f;�mc&#x1c;�Ձ&#x18;&#xe;&#x10;&#x1a;�_���:��p&#x14;&apos;���&#x1;�`&#x6;Ҍ&#x15;���&#x8;&#x14;H&#xd;
�b&#x8;s�&#x6;�]�Uq&#x1;l۸Z��ݧB�&#x11;�&#x5;�?�&quot;!�&#x14;&#x8;�&lt;���&#x5;&#x5;T�&#xc;p&#x1e;K�#�pL&#x7;)��^�b�܈&#x15;�j&#x11;��Z�7��̏�2	9`�&#x4;���ܘ�&#x4;$&#x8;2&#x6;%�1.~3�AU�&lt;���nTe�CE;U�&lt;Yr&#xd;
O�&#x1e;&#xe;@ŉ&#xb;|&#x8;�&#x10;@_8��p&lt;|�&#xc;O�Hڶ�ʶ5y�v&#x84;&#x15;	&#x11;h䉒`7�^9�\g&#x2;վ&#x18;U��9�%k�&#x6;X�&#xc;�	Jcol��Gs�y����{��&#x10;��֢��s�=�&#x1f;��ܕ�T&#x18;&#x7f;�&#x18;��I$���2�~��x�&#x5;���&#xb;�&#xd;
]Ql8��S|hV�V�WaO�&amp;�!U&#x1;�R(q&#x6;s&#xd;
���߈&#xc;&#x3;�ex��&#x84;&quot;Le`��P�?&#x12;&#x11;�Kr�&#x6;u&#x11;ْ�/��}x�&lt;�ӣ&#x3;&#x18;��&#x8;;4⽯m:Æ���&#x11;���T-�j�4�� �#�)��QP����(���?��&#x8;+&#x1a;D&#xd;��&#x7b9;֎�μ�ӭK�S-ܙ&#x7f;&#xf;:��Q���vv����fz��_��l&#x1f;&#x16;��#��&#x19;O[��+:G&#x13;:�-���z&#x7f;�|//�C��e9-&#x7f;X,�겼���AM&#x17;�~Y�6�b���s9�&#x17;�m�g7��J_��_�9�vD�!]ūt�׳�d�M���D.P[p�&#x19;���.�S���o˺}`ؕ[2X�M��m��5{,M�csI��D�;�9�&#x1b;���c]K��������E7�&#x17;K�Q�L�{&#x5;��&gt;&#x7f;��뼛M��jz�}�=���p��&#x2;����Z&#x6;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/top-sites/1/061c7e47-1425-41b1-a447-d00661fc808e</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:17:26 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click on any Product ID" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-64" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="viewProduct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">viewProduct</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">RP-SN-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Catalog.action?viewCategory=&amp;categoryId=REPTILES</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click on Add To Cart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Cart.action-65" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="addItemToCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">addItemToCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="workingItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">workingItemId</stringProp>
                  <stringProp name="Argument.value">EST-11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Catalog.action?viewProduct=&amp;productId=RP-SN-01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Quantity &amp; Cart Update " enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Cart.action-66" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="EST-11" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">EST-11</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="updateCartQuantities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">updateCartQuantities</stringProp>
                  <stringProp name="Argument.value">Update Cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">yg0wIF6eeoGem0R6zPHS038UwefuTVj-Z0fY4O0Mv3iLqh73wiu1T3OaXyWKBw5Hk4W9w_ax9GkjXzrtr-F4bb9js4ZLC91n</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.value">sQnfGVHx_046jMtdjW1ygQi-9QsIa84oVAikYNDLte0apNs11Lbg59nnoEbT2SGY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Cart.action?addItemToCart=&amp;workingItemId=EST-11</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Check Out" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/baseline/1/55e1059b-bdd6-4665-82cd-bf6399ecbdcb-67" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��Tێ� &#x14;�&#x17;�v�&#x0;�&#x18;�&#x7;}_��&#x16;�&#x4;��]��MW��=؛4ZEU�(�&#x1c;8sf�x�Z|8�&gt;��&#x1a;ޫd&#x7f;V&#x3;&#xd7aa;�e�c�&apos;[&#xd;&#x15;ŴAX J�	&#x1b;H�&#xd;wC����&#x6;�&#x1f;:r��V�9@��ٟmA�-6&#x2;*�s�&#x5;I������xAq��y�eSE&#x19;�&#x11;�z&#xe;&#x19;�7x�����R��?�5�@EUy.�����&#x9c;S�xkP��D��&#x1a;i��S&#x2;wڨ���Z�C�Ƣ��y�c~($�@�4�&#xf;)&#xe;&#xb;c$&apos;&#x8;��&#x3;)\!�L���N�D&#x13;Aw):��?-s&#x4;&#xd;`�L��&#x16;&#x1b;��,�S}��&#xb;�&#x16;��&#xe;&#x1b;�YCP+�[�V��`��3�&#x10;&#x1c;��&apos;)���&#xd;��!��&#x7;�2&lt;&quot;&#x1f;�:_�/&#x19;&#xd;&quot;�����&quot;�Ц��id&#x1a;�Q�i��h&#x18;��YG(�=!&#x7f;&#x11;��6y�vK�-Qc2/�Z�Tx���uI�&#xf;f~M��&#x18;֓��&#x1a;��-&#x1c;&#x0;�,��i��e&lt;�X�.&#x1a;	&#x3;pS��&#x5ce;%�����&#xd;iiٌ���y�E�&#x1b;g#ka}��W?v��&#x1e;�(C�&#x13;�&#x7f;���r&#x17;{&#x1d;��6�a�&#x1a;�!�&#x1d;�D[�K���N&#x19;�I&#x3;�}.#s�@D�&#x11;��g����m��B�c�c\õx?�&#x1c;Q�y���b��ۉ]�&quot;㽚�A�K}���&#x17;I[�\O&#x19;&quot;\B�1�H��E։��9&#x11;Fn}���\�/a&#x1;_l�m8ȃ-���K&#x3;.&#x19;�&#x2;�&#x4;�&apos;��όw�&#x3;&#x18;&#x17;곜��RY�;-�iU&apos;��ݴ*�v���Mv��q��&#xf;&#x1b;r�+�&#xc;&#x7f;mw&#x5;�fݳ^���&#xd;�&#xc;&#x10;�2&#x5;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/baseline/1/55e1059b-bdd6-4665-82cd-bf6399ecbdcb</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:18:20 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-68" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="newOrderForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">newOrderForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Cart.action</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/newtab/1/1d45cb17-8b9f-4582-9ee2-14610fafec22-69" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�͖�n�8&#x10;��E�5&#xd;����&#x1b;��v�&#x17;E!P$�&#x10;�I������}��&quot;;�7&#x5;&#x12;�(`&#x4;�8���ρzJ&#x6;mv�6�M�ī�I��M�&#x3;w�	z��:���&#x8;W��ϔ�i�	�u��M���n����)�&#x1;&#xb;�&#x1e;&#x2;o&#x1b;����4�7zx&#x1c;�&#x3;&#xf;&amp;�&#x18;_=&#x6;e�G{�s&lt;��H�o?X&#x17;Ѓ���D�0�l��1�M��F�A&#x4;aM��������D���/	&#x16;����:�dZ	��De�2T�Nu�b\&#x10;&#x2;��a�g2zߎ~&#xd;u&lt;�.�&#xd;�K&#x14;T��*��;Ax�Z\�&#x14;�2�(k&#x15;Ge�&#x5;&#x12;&#x15;n��¹�� �&#x0;�H��`C�ww�*H&#x0;�C&#xc;�&#x6;J�+)yI&#x10;.�&#xe;P�&#x16;��̑���&#xd;
&quot;HE�F&#x11;��9A&#xe;d�^]eQ���B&apos;�s���7�YE����&#x12;	�&#x12;�q`�x�QJ�&#x10;��EU��4Q�&#x1a;v���&amp;���[ӎ����t���J&#x1f;�����&#xb;�&#x19;��rIM*�囄;q��&#x12;at&#x11;�d&#xd;�`��ͽr�\ci͎�04�&#x1b;�zx�豼��&#xf;=?�o&quot;&#xc;&#x0;��&#x17;&lt;�;S,�ϐ��pIrR�$���i�C�F�H&#x1e;N�W&quot;Z�m7&#x1f;dY&apos;U�&#x11;�&#xc;��&#x18;�����79�&#x14;#e%M&#x5;�&#xd;
�L@U�&#xc;�R�#ɳ�w��r.&#x13;�6&#xd;
��Ա�&#x18;w&gt;%��qqخ2o���L���&#xc;��C�aFQE�&#xc;��JӢ$��8��&gt;r&#x13;t8L	��&#x7;���EEj&#x12;�&#xf;���&lt;�bN���Q���{8��8����&#x3;g{g�j�;�&#x8;��YwXkQ��z+x��&#x15;�����U&#x4;�:&gt;��E���;��&#x16;��YfܕH��Z&#xb;�`&quot;�`�7&#x15;�͋up��&lt;�վ�zg���M����&#x6;�n�u��uZ�敏&#x5;d�&#x7f;��j�&#x7f;�O�_X��7��SW/a�&gt;b&#x1;̼&#xf;���kl&gt;u?O�/�G��p�쇤�Pm&apos;ef&#x17;Q;&gt;� vPF�󡰨y�&#x1;n���V]�2&#x1;s��0�9Kan2&#x1;S�u,�)�Jv�鳣&#x13;�+oa��K,@{&#x1;D�&#xb;�Y�&#x13;&#x11;�)7�V�T�&#x5;��}c��l=�&#x16;�iL�Z&#x10;�`�	�s�~Fyk�����KJ�.�3���讞��2��d���-)�B���e��i�]R�HKzS-���&#x10;�&#x1d;s�}�����&#x1c;t�ܼE�����M&#x15;?�$|_&#x5;&#xd;_��B���&#x7;&#x10;�&gt;&#x11;ſ�6�[�N�sG�z��*�K%�&#x3;���]����r?&#x1e;�&#x1e;�&#x3;�&#xe;Bu�&#xe;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/newtab/1/1d45cb17-8b9f-4582-9ee2-14610fafec22</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Fri, 22 Sep 2023 17:18:21 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">2</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-72" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="order.cardType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.cardType</stringProp>
                  <stringProp name="Argument.value">Visa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.creditCard" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.creditCard</stringProp>
                  <stringProp name="Argument.value">999 9999 9999 9999</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.expiryDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.expiryDate</stringProp>
                  <stringProp name="Argument.value">12/03</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billToFirstName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billToFirstName</stringProp>
                  <stringProp name="Argument.value">Shashi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billToLastName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billToLastName</stringProp>
                  <stringProp name="Argument.value">K</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billAddress1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billAddress1</stringProp>
                  <stringProp name="Argument.value">Nago</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billAddress2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billAddress2</stringProp>
                  <stringProp name="Argument.value">Upl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billCity</stringProp>
                  <stringProp name="Argument.value">HYD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billState</stringProp>
                  <stringProp name="Argument.value">TS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billZip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billZip</stringProp>
                  <stringProp name="Argument.value">500486</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billCountry" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billCountry</stringProp>
                  <stringProp name="Argument.value">india</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="newOrder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">newOrder</stringProp>
                  <stringProp name="Argument.value">Continue</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">TYiVMZvYxK_eol2ZCPn12h2y6YpMqtRrDL4yoRbwuLqWxG5Ia45kR_G9_Bb-_7yRecVXcjqH0B2G0GXeLDRM8NVWlVstKXBFXqYxWeJgBhI=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.value">_eTRRxW57O4pAUi3uL7eULZKUO66NbaARIx6cxTnrD2nipYj4bTqGkhK2mK1j5PAoyMUItpgso9xlByqc_qpw07GF9e1sc0VnVIP1x-2If0TF2c1cBwjMw==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action?newOrderForm=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;auto&quot;, &quot;false&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
            <stringProp name="IfController.condition">${__groovy(vars.get(&apos;checkbox_value&apos;) == &apos;true&apos;)}</stringProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller_FI" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
              <stringProp name="TestPlan.comments">First Iteration</stringProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-78" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="order.cardType" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.cardType</stringProp>
                      <stringProp name="Argument.value">Visa</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.creditCard" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">order.creditCard</stringProp>
                      <stringProp name="Argument.value">999 9999 9999 9999</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.expiryDate" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">order.expiryDate</stringProp>
                      <stringProp name="Argument.value">12/03</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.billToFirstName" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.billToFirstName</stringProp>
                      <stringProp name="Argument.value">Shashi</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.billToLastName" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.billToLastName</stringProp>
                      <stringProp name="Argument.value">K</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.billAddress1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.billAddress1</stringProp>
                      <stringProp name="Argument.value">Nago</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.billAddress2" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.billAddress2</stringProp>
                      <stringProp name="Argument.value">Upl</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.billCity" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.billCity</stringProp>
                      <stringProp name="Argument.value">HYD</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.billState" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.billState</stringProp>
                      <stringProp name="Argument.value">TS</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.billZip" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.billZip</stringProp>
                      <stringProp name="Argument.value">500486</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="order.billCountry" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">order.billCountry</stringProp>
                      <stringProp name="Argument.value">india</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="newOrder" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">newOrder</stringProp>
                      <stringProp name="Argument.value">Continue</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="_sourcePage" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">_sourcePage</stringProp>
                      <stringProp name="Argument.value">TYiVMZvYxK_eol2ZCPn12h2y6YpMqtRrDL4yoRbwuLqWxG5Ia45kR_G9_Bb-_7yRecVXcjqH0B2G0GXeLDRM8NVWlVstKXBFXqYxWeJgBhI=</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="__fp" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">__fp</stringProp>
                      <stringProp name="Argument.value">_eTRRxW57O4pAUi3uL7eULZKUO66NbaARIx6cxTnrD2nipYj4bTqGkhK2mK1j5PAoyMUItpgso9xlByqc_qpw07GF9e1sc0VnVIP1x-2If0TF2c1cBwjMw==</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">navigate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action?newOrderForm=</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">same-origin</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-User" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                      <stringProp name="Header.value">?1</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">document</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/update/6/Firefox/116.0.3/20230815173142/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%2010.0.0.0.19045.3448%20(x64)/ISET:SSE4_2,MEM:12171/default/default/update.xml-79" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">aus5.mozilla.org</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">/update/6/Firefox/116.0.3/20230815173142/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%2010.0.0.0.19045.3448%20(x64)/ISET:SSE4_2,MEM:12171/default/default/update.xml</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">no-cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">cross-site</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/telemetry/c6815528-3eac-49dd-8473-3207db83987c/main/Firefox/116.0.3/release/20230815173142?v=4-80" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�r�ʒ(�+&#xe;�&#x1b;3q���&#x5ca;{�&#x1d;�q7�1x&#x0;w��&#x13;&#x13;�&#xc;���&#x18;�&#x2;��kbE��8_x��V&gt;$$&#x10;�`�b&quot;f?&#x1a;,$UVfV�+�?O������ӧ &#x1a;���FC�}�x¶�WQa0�h&#x7f;8�x�U&#x15;%-wx�)�s&#x7;��A&#x1c;&#x6;�h2�&#xc;��&#x6;iIU����=����o�wn9�o���a&lt;37����N��t&#x14;&#xd;������4�&#x7;��&lt;&#x1c;�&#x17;1���T&#x1c;m&#x1e;�[D�ac��&#xc;@�UBK��8x�[��8���̾�T&#x8;��:W��0�MG��炟����$6��&apos;&#x7f;D�Q`.�[�����������z&#x17;&#x11;t}GW�f�q���x&#x1c;���8&#x1c;��,&lt;�Ӽ)x&#x1e;M�!L̀�3�EO�Qxm�0s|&#xd;
��&#x19;�:�̃Q/��&#x8;���&#x1b;�A&lt;?�M��H�߄���l�&gt;��ē�h&#x4;w�&#x1a;�x?&#xf;c�֜&#xc;��C���,��8�=^��Z3���&#x1;^(��l��&gt;6o�]����(��o&#xc;&#x8;&#x6;&#x1a;�q��&#x15;i.��&#x4;�f��N8�O�1��͆B��/��v,�&#x19;&amp;�M���{8�&#x12;&#x19;2�0?Z��&#x3;4&#xd;�n;���|�u-m�yލ��7���8�As0&#x0;U�&#x1b;}�G��&apos;�-������&#x1f;lǦ&#x1f;�&amp;��l&#x1e;&#x7;�~0&#x1c;NƳ�&#xe;��&#x1b;�&#x8;&#x1;/�&#x7;���N.��&#x97;%��&gt;&#x1a;&#x7;��F�~&#x5;��B�E�(�&#x3;0&#x5;K�0ohX7&#x1c;�c�Ah&#x14;�Z��*&#x1a;G�G��&#x16;VJ���0H���&#x16;&lt;u�xx&#x8;��|&#x1e;&#xc;&#x1e;�&quot;�K��&#x1c;͢�Q�	����&lt;4\�&#x1b;&#x12;����/�Y��}��dz[77����&#x1a;�&#x1d;�m�1�BmX&#x19;�&#x1a;&#x18;��&#x1e;���7sQ�&#x1a;&#x16;X&lt;&#x19;��B\D� &#xe;�I��t6&#x8;FA�&#x17;��ɏY&#x18;����&#x1;&#x17;��S�?��&#x7;�&#x18;��σ;��&#x2;�4�,��]&#x10;�&#x7;w����	_觗�&#x8;���H��g�&#xe;@����C|&gt;���&#x15;C��s�ΰ8`�?&#xd;f�&#x1f;�x8C&lt;&#x7;B&lt;�/fa&#x7f;�&lt;��Of��&#x4;��ǋАf�tn������&apos;��4�&amp;&#x6;%��8�f��]&#x18;r��L&#xd;�G&#x7f;�hF&#x1b;�&#x7f;&#x4;���&#x14;������gE&#x18;�&apos;&#x16;qD&#x13;�3&#x17;̄`��f]��&amp;C#^l����8��&quot;�&#x1b;P�&#x10;�%�&#x13;��2&#x7f;��F����`�&#x18;F��l1���@ygx�*|�hn&#x1e;N����`��&#x17;?&#x1;�xJ��	�&#x8;&#x7f;�&#x1;�&#x19;Vt][&#x16;c�0����7�� �g�_$&#x15;���&#x10;Xm&#x16;&#xd;C�}������&apos;�����nj��$&gt;&#x1f;&#x1b;l�I�&#x3;�&lt;�+�Y��7�Ja�$�41�&#x7f;&#xe;�,	k^QL�&#x15;&#x6;�H蕥�&#x3;�|�&#x7bc;,�O����`2�&#x16;�&#x6;l�&#x12;��~�=&#x1a;&#x18;~A�ҟ�Gϧ��&#x7;����&gt;&#x2;b&#x13;���U&#x18;��Nfh-&#x8;e���&#x10;d�r��&#x3;�&#x8;t��c&#x4;��&#x19;~��&#x3;&#x7f;.���&#xc;1&#xc;�&#x2;��9��&#xc;;6���;&#xe;?�f&#x1e;�&#x8;&#x1e;4���J�p&gt;7L4��&amp;�;F�&#x4;1*y�2&#xe;&#x7f;����b&gt;&#x7;�bɮ&#x15;Bn�Ɉ�&apos;#����&#x13;��d���yH�f&#x1f;?&#x7f;�&#x19;h�Za�#���&quot;&#x18;%&#x4;�&#x19;��Ό�5��dp0��]F@�&#x5;��,9&#x7f;&#xc;�Z�O����b4g�n&#x6;˘z}�!&#xb;���k�2c&#x14;�Ӓg�oL��&apos;/��f쫸&#x13;&#xe;�$?&amp;&#x14;u���pn��7���a0&#xf;�Fq�g���$����;&#x18;����&lt;|P(_-��l(�H�?_e����G&#x3;�&#x7;/,X� eC�	��&#x3;��и�EIHEI:&#x1e;&gt;��� ���{��Ǳ�$�&amp;m��倘q&#x1c;&#x3;�&#x14;�1E&#x1c;�&#x7;;&#x6;T��[�Ճ�&#x2;��&#x1b;\	_��4_&#x1d;&#x17;-&#x18;��9`���c�p��&#x15;�&#xd;�k#�Fe��&#x5;���W&#xf;&#xc;&#x11;P��&#x12;&#x1a;,&#xb;0J��&#x1a;&#x3;N)σ�&#x19;�&#x8;P�&#x7;a&#xc;7�ݑ&gt;|&#x7;H�&#x3;��&#x10;&gt;\w}&#x3;�0&#x0;��&#x1e;��@��%~��&#x1e;&#xd;ߥ�F[&#xd;
�K&#x7;�+���wm�w&#xf;�;�����~e�w&#xf;�&#xb;���w����J�w&#x17;�k|&apos;£p\��*&#x1a;&#x17;�k&#x7;���J�0��N&#x7;���N%�~A�&#x11;6&#xd;0+&#xd;c	ĉ��~�,���w��ي��nl#�ɌX�د�77��&#x7;(��G�Z&#x18;ϣ{���&#x5;/&#x7;���ԔI&#x16;e��O�ʥq�=&#x11;K�\�U&#x6;�7�Ϗ &#x1e;f&#x5;�Yeӊql�I�^6&#x4;�1�&#x1a;��&#x2;�z�&#xd;
� �ț�&#x2;��c&#x0;�&#x1b;��&#x14;����&#x1a;�&#x8;�d&#xc;��܍&#x16;1�]��d1Ϡ�/3c��%&quot;+&#x19;�E�&#x4;�E�&#x2;_Q��&#x7f;�&#x17;�&#x10;���*&#x7f;&#x17;�R�w��&amp;&#xd;
*&#xe;�Y33�?���&#x17;��~&gt;&#x1b;��~�Hȿ#�&#x19;��bD���&#x0;&#x3;&#x1e;��(����#�&#x4;����RZ��1���&#x6;_&#x5;Ƈ3wFOw&#xb;�o���qD��Y�&#x0;���T6&#x15;@@wl&#x5;2�0�H&#x18;do@&#x19;&#x18;@&#x19;�&#x15;�e`��o(���KÀ`!�&#x0;��&gt;���3&lt;&#xf;���ĸ_��i&#x0;������D&#x7f;�����!&#xe;���j_k�z��n6�^�ӿ��&#x7bf;��v���&#xb;�6S#&#xe;�~�p��&#x1f;�	-���0&#xc;&#x18;&#x3;�N&#x7f;�wq&amp;,��8;5�Z��&#x1;�&#x1a;D�Q?�C�&#x7;H	C*M�;�	#�A�&#x18;�&#xd;b�&#x8;iX&#x12; r�Ņ$��\��.b@Z��R�_&gt;���/m~�&#x0;&#x5;&#x1f;j���n��&#x2;��&#xb;��8)�&apos;&#xc;�&#x2;���&#x2;�h�E��&#x18;��pR�S&#x18;)�^&#x0;��O��&#xb;�ˣyy��B&#x15;&#x1;��������z�̳/w���lP&#xc;˩ʕ�j��&#x6;ɏ�!&#x2;i��Q���a&gt;&#x2;� �	T&#x6;�O&#x7f;i���&#xf;&#x8;z&#x7;�&#x14;���/P�&#x6;u���=R&#x11;]ݔ��=��lB��&#x0;��_@e3&#x14;�&#x1d;�6�&#x19;�H�ZCΗj��h�:�j�~��%��$�H�r&#x8;Z�&#x3;_&#x10;{&apos;�u��Z&#x1d;Gk�[&#x1f;v&#x1a;Hn&#x1f;&#x8;L&#x1e;A���v�p�����˫�&#x6;��(��&#x15;-PM�m�E�&gt;\&quot;$0���&#xb;I&#x1a;&#xf;X&#x1;�&#x1f;&#x17;�&#x6;l�����q,$��3����o����+�R�&#x13;[���yf6�L��&#x4;�&#xb;@&#x14;&#xc;M&#xe;םO�N����ow&#x4;H��&#x4;Y���^�6X� &#x1d;e*�&#xc;T6�c#�{�Qji&#x2;]�&#x4;�h���e&#x8;&#x14;�x&#x5;&amp;�� �&lt;Z2�lx9�&apos;O!�=G�d���F��%�#\4�@����:[JZ}�&amp;�َ&quot;`]&#x1;K�\16#?n^D�X9�&amp;&#x12;kGko&#x5;�&#x1f;:կ{��-^��h&#x12;�[i��&#x1;�Ĥ���&#x1d;da&#x1b;9�A&#x6;v�&#x7f;�}s�~�W?�̒��zRx9Ib��Wo�v@O߶zE�����ʀkh�Q&#x17;�&#xd;
&#x14;&#x1a;�߽�|n|�6��j�V�H劯��F&apos;� H	�2G�F�&quot;�&#x16;�4�Mw��R&#xe;]�&#x15;anqH�8&gt;3 �K���-.)&#xb;`h�\�$�Gr�c&#x15;�y��O&quot;&#xf;�=&#x8;v_���&#x1d;Zw���A�fa8�qָ��/�/�z��#_ؖq%�bX�&#xb;+dV&#x8;�&#x10;&amp;&#x8;I4s&#xf;gū�&#xd;&#x13;^�2���zUj;	z 1��&#xd;H�$����QÂ�0|�rW��&#x15;A��&#x16;���K�&#x17;|h\R�KV���j��%&#x19;�	nQt��Cn-�5(���kQx&#x18;,ϙ=�O��Hԃ&amp;�L�&#x1f;��w&#x8;zdg�n�P�a�	�� tBP&#x2;�&#x19;�%ġ�&#x5;Hg�5Mt�Y�)�&#xb;�d��j&#x10;�^&#x16;�e5�]��v&#x8;J�ݐ�[�6�P����&#x8;&#x1b;�d�K�&amp;BU�-&#x13;��WW��h|����&#x2;�&#x19;�o����X[ס&#x16;��da��9&#x10;D����&apos;&#x7;�%C�W&gt;�!&#x16;}�W&#x10;S��3K��J�&apos;$�$u-�Պ�Q:]-�=�&#x1;M��&amp;&#x12;����˃Fp��&lt;ZI&#x1e;�1�ֽ�&#x12;^d[\1S27	�K�8&#x1;&amp;&#x4;�q���y	[���&gt;m37�$�}���&#x2;VL���������ظl&#x16;[i�&#x16;rj�Irr�����1�ِ`[��&#x2;I&#x1b;���p&#x12;]vY��;�j��7#/���2��-c\�@tΤЮ�&#x1d;�vV�H�&#xd;
O0&#x17;H0�4&#x11;&#x12;��&#x10;!}�1�j&gt;-|��&#x4;��@T���X�(�&#x2;�Xz��`�@Z��i&#x18;&#x10;���&#x5;�&#x0;\4�})&#x17;�&#xc;@�&#x0;AZ&apos;�K�&#x1;?e�&quot;5�A�M��I���&#x1c;&lt;&#xb;.AtU)�|��i-����d%,&apos;}^.��Ok#F��&#x3;&#x7;V�&gt;x�&#x1e;�tJ&#x3;��(���w6�}�ݼ��J&#x1d;t&#xb;�֟�&#x6;&#x1a;&#x1c;��&#x14;��J� x��g&#x2;$�&amp;Q&#xc;Z&#xd;
��(wm&#x17;�X��y�:�}�kT���Fa��g&#x17;L�ȓ�.&#x4;&#x1d;ۑ&#x7ba;+QdQbT&#x16;(��+Ht&#x13;k�&#x14;�H&#x5;$��1wP&quot;�dT&#x8;�%��&#x12;&#x1f;N&apos;�&#xd;
�D+���p�E���&#xd;
N&#x0;����0�&#x8;0*b1_&#x3;�;&gt;���0� ��&amp;��~&#xd;&#x18;�8&#xc;:@@&#x17;`U�&quot;�&apos;�&#xe;� z��&#xe;��&#x1e;E��M&#x12;�&#x6;}&#x8;1&#x19;�aw��Y&#x17;�`Yb�&#x2;C���x�ډ\�%/	�׆�&gt;�a}&#x12;�.F�I&#x1a;~lw{�/��e�K&#x1;IA[��5�ޚ&#x8;�K����&#x19;���n&#x19;;�g&lt;�&#xf;�~�]�D�hGF�\#S���n�V�&#x1e;&#x14; *����&#x16;,ٴdÎd�����$�����#5Km�ZY�z&#xe;�oKrL��|6�&#x12;]�mv&#x11;&#x1c;����&#x19;���&#x1a;��&#xf;�����I&#xd;�&#x0;e�&#x3;V&#x13;{�8G&#x3;-��c�wCh�lu��n���&#x1;���hY&#x12;��P᭄&#x11;;��&#x5;�&#x1c;��&#xb;A��Z���n&#x7f;���&#x3;(k;L������n��Z`��[�:�&#xf;ڽ�x�&lt;Qj�0��&#x1c;��(&#xd;
Bg&#x1c;)�&#x10;�-#A�!�G��e&#x4;�[�4nz��ò�w�����ֻ�&quot;�%�a�SK�]1ds&#x10;&#xb;�&#x1d;�F�&#x14;&#x16;�}�{�zѾ�}l&#x1b;&#x17;�V�}&#x4;����un�T;.&#x7f;��&#x17;b&apos;�&quot;����qhEF�CA*�&#x1;X�&#x2;�B&amp;r��&gt;0�=�&lt;&#x8;l�撓�f-�q�&#x8;&#x14;���/�h������ �:���&#x1;A#&#x1f;,�}1&#x4;#&#x1c;E1&#x18;m����&#x0;5�4�))&#x1c;�Fw���&#x8;����1R��&#x8;i�&#x1c;&lt;���ރV�K1sliv�1&apos;��QB�&#xe;��&#xc;&#x15;|�%,&#xb;�}j�]�S&#xe;ߑ&#x3;C��&apos;5(�+�&#x15;&#x7;J�چ�Z�ڬwk����h�XNk��u�&#xd;
�&quot;p&#x12;�� �=B*Fi�	,��iIv��&lt;���d�X:�&amp;c�%œ1C��&#x13;̵�5bsH���&#xd;&#x12;&#xd;�&#x1f;Q�&#x7;�)iL&#x1c;@`&#x7;0�ڄQ0&amp;&#x1;�&#x2;s5����&#xf;&amp;�ӈk�� 	�h&#x16;Y4_W�=#&#x19;n���v�_oU/��L:�W%&#x1d;�R��|���&#x1;&#x1f;�_��&#x1a;�&amp;���Y���&#x2;��&#x6;휼�_���^�&#xc;�l&#x7f;h�Hqt�W����Q�̓�f�f�x��l�^�L?V���v��0x5&#x16;t�Ӫ&#x1a;�H�}cP&#x7f;ٮ�.X�&#x0;��&#x1f;Q�?h�_{)�	�Fw	E����P&#x1e;0��&#xb;(3b��e�%b��ce]��ݭ&amp;��������NB&#x7f;�9U&quot;�&#x13;[�����|�&#x1a;x�Nj&#x7f;}%��T%��&lt;/�&#x12;	���&lt;��o��z�v�����&#x1c;֝�i&#x7b5;1o:m��&#x1b;G,N&#x3;l��M��A�m&#xf;c��&#x1f;!�^��һh�&#x7f;w7Ȅ��Zbq-���&lt;�eF�E�D�VP�E�2&quot;���&#x10;X$E�(�&#x8;���M��S$�#�k�nH�2��&#xc;���Ǒ:I&#x19;&#x7;�Z9(�^2��5�� &#x6;��CE�&#xe;e�ٛq9;G&#x12;&#x12;�ETXlWr�=U&#x1c;6�\\��&#x17;&#xe;��&#xe;&#x0;Ƹ{�~���E���Ĥؙ��ē�&#xc;��⧬#��&#x1d;�N&#x8;�3���&#x14;�=&#x0;&#x17;�þ_b�A�&#x3;���&#x1c;)���K&#x2fd6;ω	�&#x1e;&#x0;��&#xc;vʌ�F����\��U�c|kf˫���І�V&#x13;SkF/I{N�8&#x14;�J,�5���&#x14;�&#x1b;X����&#xd;
�M)؃�D&#xc;b�c�y+�S�&lt;��&lt;&#xc;�i&#xe;�&quot;&#x16;E&#x6;�µ�Ftf�?��&#x1a;���lԊs�ۅ���j&#x1c;�Xe&#xd;
Z�&#x14;��&#x13;9�*SP&quot;(�&quot;(c���&#xb;&#x7f;ȲM+&#x8;�-�k&#x6;h�e�J&lt;Z��Y6��r�y����╄^��8&#x5;��MH�T�zѮv�&#xd;�xs�|�T&#x11;�&#x4;y�&#x10;@�e��R&#x16;[ʄ:&#x12;�pѥ;=�&#xd;f��&#x1;-�b�&#x13;�&#x5;��cj�X&#x10;�&#x14;#&#x10;�?�&lt;@p��&apos;bI^�D&#x16;�.!Qp���b��D��zbe%_��1^�h}؃��&#xb;?o&amp;�g�R�YQ�7��K&#x1d;~/����X�⥩&#x6;ɶ&#xe;-%E&#x17;5Gp2�&#x12;�h�8&#x16;&#x13;&amp;�Y��&#x1d;��&#xc;��ϳ��0����&#xd;
&#x2;�%&gt;���D��E�8&#x1c;a�樘g4g&#x2;&#x1;G�l&#xd;
l�U�&#x1b;aY�T1�&#x1f;֕�^���&#xf;��Z�Md�[��&#x19;�rd.[&amp;([�A�Hӡ�&#x12;c��ȥ�&#x8;&#x15;�pWI�WH����&lt;f�_G����(�e�۫v�Qh��/U�B&#x18;���X�@��W����&#x1;�&#x0;�&gt;g&#x14;�&#x19;F|�J����d&#x16;�*�*U�&#x15;�H��z#U&lt;��&#xb;d�&#xd;
��=��v&lt;�y%�E�=�0�&#x12;�2�t���2��2ݻ	�ih��uI�UvI�!�f�&#x15;�o\&#x12;�ȿ�i&#x1a;_u&#x1f;&#x19;�;R�M�&#x2;�Oa�uI#�&#x8;W��9MB�y�#R�&gt;�w$��&#x19;�:��\��*S&apos;R_mŧ�u&quot;�X�(�&#xd;�&#x14;��5ɼ^!}d�&#x12;�3�=���1&#x530;|&#x7;��M�=�!6Pc/aD�p��&#x16;&#x7;�E&#x1a;&#x12;�{]xf��&#x5;�@�8���I5�&#xd;
9r�8c��M�&#x4;т&#x11;�xf$&#x19;S����N���&#x8;��w�Vr���E�zA@#oX��&#x6;)(kӔ�:FI%L�&apos;&#xf;(&#x7;��mł�&#x1a;��J�&#x12;lhƆz&#x1;&#x1b;2���`c&#xb;&#x12;4F&#xf;�s/�����z�&#x6;���ט�/O�&#x10;Ԗ����6��!a&#x13;�W����˙&#x1e;*Lf&#x4;��W8+�,&#x17;�8�����:&#x10;�Y&#x12;	���F�m��!�&amp;�?��f���P���N�K&#x6;��V㺊��Z�ټ��&gt;a�7���&gt;�5����9�.Vc�/&#x1;�?P�e�&#x12;u�:�4�&#x19;&#x16;&#x14;�A&#x0;�7&#x7f;���mH�q�FQ�q��Z&amp;�ة7���u�ۅ�&#xf;����&#x1d;rE �͘R&#x1e;�^&#x12;��������̸7��!J�k&#x1f;��鵝���ϛ��&#x14;.{&#x1;���t�\&#xb;G�Y�\�&amp;��|(&amp;�yw�&lt;&#xd;
�&#x2;�/a��X&gt;Rz��yu&#x14;=�K��&#xb;tI�N�A������0&#x6;X��N��Ԡ��~P�7_l���ٽ&#x4;�&quot;��&#xb;Ɓ��U�&#x14;��K�&#x8;ʓ�=����4�q��8�Iw&#x1e;O��_���q?X�+@&#x11;���3�&#x17;&#x19;&#x4;��&#x10;nW�h�&#x1f;&#x10;�kl&#x8;&#x6;�&#x1a;&#x10;��!��&#x1a;f�_%���&#xd;�&#x1a;\�W!�:�&#x1f;�q3�/&#x7f;�&#x10;(��X�&#x17;���ClF&#x1c;&#x1e;��Y�S&gt;j�&amp;x&#x3;Z&#xe;o�&#x1c;�-K��eU&#x1f;&#x1a;�ҹ�Vt�ظ	��c�_�Ÿ&#xc;&#x7;�&#x18;{A�&#x12;p�䮉&#x1f;s=�`�J����&#xd;`�e�Z��&#x19;O����t֏��lq�s	���q۞&quot;*&#xd;
�3�Y$&amp;����&#x16;�ARA��mt�B��&#x2;&#x14;&#x16;J��&apos;�&#x2;6��	���K�$�&#x1;�$����4&#x0;�wڢ�l�/��)fH@�&#x11;&quot;q����@Ӫ���;�����V�hT��h^&#x2;�z�j�[��i�&#x3;�#�&#x7f;�����+�ru���b8ޅIe�&#xe;W����MH�2$�A�d�vZp����&#x2;&#x7f;i�&#x17;MuH&#x1c;j��8�N�]��?&#x0;)&amp;v��t�OTR�4)���U&#x14;��]��F&#x6;&#x8;��&#x11;�^~&#x17;�&#x1a;&#x8;+�_\rh&apos;�&#x1b;hc���}��_Ij��&#x6;�&#x11;�&quot;&#x12;R�N&apos;�a�1K�&#x6;1ٲӂ�+���3�&#x19;���&#x1;&#x12;3x*��+9L�&#x4;5��4&#x5;�7�&#xb;�&#x1c;�&#x2;��Y=�B%���*��&#x19;i �|�E�=x&lt;�9渴=�u���K6�[I)��60K��rE&#x1e;��ك����֙!�&#x16;C�&#x18;�&#x4;\������֖���Q�#�|�Z&#x2;�f(�&#x4;Y*A�Ȱ�&#x1e;��li�&#x1c;��&#x1c;�����&#x15;�&#x1f;֙uOF&#x15;�e&#x4;g&#x16;N��_�+�ˈ&#xd;
��;�f&amp;v��Q��p�&#xd;
�F�YZ{���ɾ&gt;&#x12;&#x1f;2�&#x1b;\��t�W.����D��A&amp;�F�g&#x19;i�&#x17;&#x3;Km;�S&#x7f;&#x19;��D&#x10;W&#x12;�&#x4;��l-D�5��&#x1c;B�^ʗ���T�������/�J���а���$l+�V���ұ볃v*o�&#x11;���a�����#WԷ�v�����j\�,�/p�iK&#x1e;M��e&#xd;
8�eeH��iw&#x0;��d�[&#x16;P�&quot;O���D5�l�&apos;�&#xe;hs%@�9�a�&#x16;x&#x18;���)&#x1d;���}jU&lt;�W&#x15;݆nK���L#p��ղU7u����`0X&lt;-F��]ێXp�� &#x3;\���7&#x15;�5x�FC:W`}���&#x6;мP�?�Z�&#x3;:��&#x18;��^���&#xb;7_!_���z&#x1f;H7#L&#xe;���Z&#x19;|M�e���������+&#x1a;#i�`bq!�O��&#x1ff1;I��F�ԥ�E�&#x15;�&#x16;n}�6E�E�*��.u*:D#!�:�n&#xc;/�&#x11;¹�ĕP���&quot;l&#x1b;Ґ�wU&#x1;l;��QB��6���&#xe;�&#x15;=�T�I�֬M���������Na(&#x11;���P|&#x1b;��v�BqCb���@&#x4;&#xb;���u�?tik$�2h�)�탭Ey[$&#xb;bl��2�L��n�և��&#x8;��#�&amp;&gt;g�&#xd;z~����X����]����&#x4;�FY��&gt;�m��v�&#x6;Q&lt;|&#x1e;&#x7;O�&#x0;0�DZ�&#xf;�E���X�}�wh&#xb;��-��&#x14;4?�j�ٶЎ&apos;�$���쐎NJ�dʩd/�%�Q3����$&#x1b;3�&#x19;��&#x3;�u�	�}�&#xb;�-7�&#x1a;�Iv�|/�|dQm.������^���L]c��-�Q����Ѧ��&gt;&#x1f;&#x10;&#x13;��&#x14;]6���C�&#x6;��ȵ�)��&#x7f;&#xb;(��̡��� �^[�&#x1e;&#x0;����&#x1c;ؗ��6�i!��-3��䳸�Y(��&gt;S�Zm%��&#x15;�\&#x16;��bH&#x1a;&#x1f;:i��9\��8	�&#x15;�|&#x3;E�&lt;ͤ7*�)�&#x1a;&amp;�2m��)m���[�lTDQE�V7ײl{���kt���z%pD8�*iĬ���;�*K��&#xd;
j&#x19;&#x1a;�X�E�&#x15;ܾU�y��j�I&apos;&#x1c;Ѿ�iw��ݣI�Cg�mo&#x12;@&#x1d;q@�);z�&#x11;I*�b{��&#x18;��Z\�&#x15;�K`;hj #]�K=���=x�ƌ�&#x14;�\&#x13;}�]&amp;��s�&#x6;�&#x5;�s�k&#x19;�&#x1;t&#x7f;&#x19;&#x10;�:PM2B��PTڻ&#xc;~���o&apos;5�� �6&#x1;�9��M&#x0;��&#x5;���q�y�Q0��&#x9a;w&#xb;8��&#x3;w�������O�-c&#x18;�5x.hgʹ�|򃐼&#xd;��iS��&#x4;7��&#x13;&#xd;
��2�b��F�O	ON&#x4;���&#x13;c�۳&#xd;
_��&apos;xk�Ϥ���g�-�.���8��Y�0È�PN&#x12;�4&#x19;3&quot;G@A��&#x1b;(&apos;�r��y�&#x7f;�&#x7f;5&#x6;&gt;���]�D�&#x1a;�Y�q�;��V�&#x15;���eZB˻��~���.�{��&apos;�@���}2�ew.;�&#x8;b�d�2#9�v�v@%��m&lt;(�P�l���/����&#x6;ބ&#x2;ai�&#x16;�ޒ)J6)�i0n&#x14; 8�/9$��Gx�ct�&amp;L��&#x11;S&#x12;*4�&#x0;#&#x8;I\�&#xd;U�x�0T��1�~y�/�Y��&#x16;��&#x1c;&apos;٘Ȱ�?9+肀	�T�a�dIB�w�+nˠ�4�ԃ�&#x11;&#x13;�&#x5;�G�&#x2;&#x19;���&#x15;�c�i�h:� �Z���ܿ��q?W�݂�&#x1d;�d�m&#xd;
�����#ln��p�&#x7f;ɝܨ&#x1d;4�t6)&#xc;����!&amp;�D�fm�عŞ=&#x19;e�Mǀ&#x10;.�&#x1c;�E0-GŽ&#x16;4�&#x1b;�&#xe;�S�$w|�;j�F����Z&#x11;?��&#x3;-&#x19;g�&#xd;
&#x1d;hX�&#x7;&#x1;l�ت�&#x11;�QɼQ�&#xf;����Y�0:��v��Ԩ&#x1e;&#x1e;8�e�&#xb;�ސY=�O�0�WVP�&#xe;�&#x1c;��&#x7;��P�bW&#x11;�&#x15;4&#x13;�i&#x1e;�=�����ƞ&#x17;`�$ǳ�&#x8;�W�&#xd;&#x1f;;ah*�G�a�&#x17;fˑ��X\��*�&amp;�3�&#x13;����E�OqK&#x17;��&#x10;&#x19;}+��f&apos;=N&#x15;7-�����|&#x10;��].�Kw��O�cCq*&#x12;�&#xc;!&#x13;yI�&#x4;�^$d1���!&#x19;�J9$�&#x13;&#xd;
l)�̂��\��f����&gt;���&#xe;	&#x14;��i����h&apos;��Y&#xe;�0��Y&#xd;��G&#x14;��&#x1e;�I�&gt;&#xf;�?�Q&apos;�OG�6�&#x13;r��M8=�Ɵ����s�2AD�&#x17;{F=��	&lt;&#x6;&#x4;I�&#xb;��&apos;��&apos;y��-��̤�FMI&#xd;
&lt;.&#xf;�C�I�&gt;�Zx&#x16;&#x7f;rH�&apos;;D%G�p�&#xc;�4&#x4;P��=��4��l�	�Ϛ�u0���&#x1d;��y&#x1b;��K�����\p8�V�muS˪��s�?i��vb�&#x2;]R[��N��Oo]��n���t-��/���&#x7f;��&#x18;&#x18;槀b6u/T��&#x4;�ca|4�&#x0;�&#xb;������G�� &#x0;�B�#&#x1e;GV�ғ�X�w���&#xf;y&#x1b;s�&#x16;�Ը̈�U�rU�����&lt; �rG�)&#x1a;��&lt;��ݥݿJ�~����~&lt;�2�&#xf;C&#x10;��&#x8;�v%�z���&apos;AJ�$&#x6;�?�;��h��1&#xc;G���0�=N&amp;s��&#x11;�&#x19;&#x1f;r9&#x1d;�3�m9&#x1f;h�ｐ��&#xc;���&#x8;�l&#x2;l�&#x16;d��(/g��&#xb;&apos;�[��Li@�b&#x1e;����&#x1e;�-zߟg+A�&#x10;_��V�W�(d���W�����1�&#xf;�:(&#x1b;��k��7�����=���t8zs�Ռ7Ǧ�f��&#x4;��&#x7f;���&#x10;ފq�&#xd;
/8[&#x1f;;�}��*�&#x1d;�41F��&#x14;���N^{;`t���0Ik;P��^V���i��8��&#x1d;��^&#x1b;lb���+`7��b[z�]��c&#x1e;&#xe;������&#xb;z��͊���RU&#x19;E�،w�j&#x7;��8��4Y�&#x6;ܚ�K�Y gI���:�����&#x1e;G�:�&#x13;!&amp;�c&amp;$�?���&#xc;�f�Cp1��n�6��&#x11;�l��Zziz%gS���U�v���F�q+�-x&#x11;�G�y$&#x1f;8&#x18;�Uhl&#xc;q[L���\���)d}I�5�(@{�l��!�¸��&#x17;��j�j�&#x0;�v��ؾ��vH����&#xb;3����&amp;q�&#x2;��&#xd;��1���LzSf�R��MLf.hR9���&#x1a;�R,q����&#xd;��&#x1a;&#x17;s=)�&#x17;�V*Xu&#xe;4&apos;&#x13;n_.C�-��&#x8;�X�a��\Wdz����וS5�&#x1c;&#x13;���&#x7;7gU�ʴ�M��ᗯ2�Y��}4���|�m�Ѱx��u�l�Ƚ�0_�&#x1; �#%M�s��Y�x�+�&#x7f;&lt;ؕ�&amp;&#x1e;��]5e8I&#x15;�x&#x5;�&#x19;�xU�&#x11;�29�&#x15;M&#x15;��@��FD��&#x1e;�����~�a��K�rg&#xb;]&#x15;)3}�&#x1c;S�:�&#x1b;&#xe;�l&#x1;�C4�r�,s��W&#x1c;&#x0;��v~&#x15;��&#x1;��lv�j;�&#x1;����&#xe;�	餰���wl�Ҁ=q��&#x11;��ij�O=q�&#x1d;&#x1d;Y(I��&#x1b;&#xf;f&#x15;�q�|�i�`V���&#x19;��c�~��!�o�&#x18;�9��=Vy�I�&#xd;%�_&#x8;�~����z��&#x19;#/˂xj�/��&#x5;/�&quot;�Nj�P�&#x3;3N&#xe;�&#x1d;����ɲ�l&quot;��IZ�/+��w�,��?�4�~�sOmg�q�&#x1a;ʨ�N���%�8$E��D��m&#x15;�KO�	���w��Q�����Y�,�eRØ&#x12;���&gt;��}bM���\��d�j�P��+;u���&#x12;Y�-n�f�I��̚&#x2;�#F7�&#x15;��F���&#x12;�&#x5;���R&#xd;
��@�6&#xe;�&#x10;9#�&#x15;&#x15;�&#xd;
&#xf;��B&#x5;�&#x12;���&#xe;�C&#x14;�(&#x2;?IG�t�(&#x1e;*O&#x7;��&#x11;�t���˂iK&#x10;,&#x12;&#xf;�¸%������&gt;�e�4Q0�0����8Q���\�+&#x1c;8n&#x14;�&#x14;�!%Gg�zXo���Jzi���S&#x1b;qߖ�\����dW&#x12;&#x4;ؓ&#x1b;�&#x14;&#x1e;���^:]&#x14;:�k&#x1f;�&#x1;&#x1e;�Eǌ�V&#x1c;�&#x1a;��%&#xc;g9&#xe;�&#x10;&#x3;�~¢���=֖�豂��&#x1e;&#x17;��)�`��&#x19;�l�R�&#x16;f���R�Fe+�n�����X9���&#xf;3�M�d+&gt;�&#x14;_l���¼���&#x15;�$!c�\~��O=)��A+/&#x15;.+ܪ��&#x11;&#x19;E&#xe;&#x1f;&#x1e;`�Y�[�&#x1d;^��f &#xf;$Y-O&apos;��6ij&#x1b;�J:�&#x1;&#xf;���&#x1d;�zk:BTc�&#xd;dȱD�rx��&#x7;��O��SQ1�JGA&#xd;
,1�]�I&gt;Lh���&#x12;�&#x15;�+�mɢ�����&#x1d;W�&#x11;e�(��&#x19;�&#xc;U�&lt;&#x8;۳���&#x13;|���}��&#x18;��i�&#x15;m%s=J�&#xd;
�圆��	��ϳ%�S��ȡR�n�44�&#x2;�&#x18;@#&lt;N&#x6;�&#x18;&lt;��I�*V_X\� )C&#xe;yi2�l�&#xd;
��B�&#x16;��&#x5;˰5&#x6;&#x6;|�@`!����C��J�&#x15;�d���s�V���|U�z�*�I粹���&#x18;���W&#x5;d��(��w@������&apos;���d�����xIlD�dq�ْ�.0�	G����;�&#x1b;��z�MF�p2JU���:��K�)FrRg&gt;	�&quot;J&#xf;��Ydw�Cر��-&#x18;��[��C�G�:�Qf�N�&gt;�1n��sS&#xb;&#xc;�2b���n���&#x1b;�$^����7E·��|Q��$\�h�&#xd;
�3�}z�n�^�4��/��j�U�Ц����z��3��zE����&#xc;6�&#x1f;������z�s��-&gt;����f�&#x5;&#xd;
��`�d�J�&#x13;Q0�M�8z��i[Fwlk��&#x16;&#x15;O-w���p�M�&#x15;:n&#x1;w�����&#x16;�3�]gl�.���Գtx�i�W�&#x8;&#xc;����&#x14;��&#x1c;����z�s&#x15;&lt;�&#x1d;a�v�h�&#x0;$�@�^A!D�&#x1a;��&#x1;&apos;KV/&#xb;&#x10;#��&amp;�&#x8;�o�[?i�M&#xd;
�D��P�v�e&#x1c;��:�&#xc;A�E��+xX�,�d�e)&#x0;u&#xf;Hvp�tg6�&#x7;H*���lP�&#x1b;�JsC6�2�e	&#x1f;�&#xb;&#x15;o&#x6;�r-��D;[^�j��g��&#x6;�����t�q�&quot;q\o,���uRr�iA���N&lt;&apos;�\�&#x1e;�N��s�K��l[�&apos;����6o���&#x8;Y�&#xb;�\&gt;�������ig�õ���&#xd;
&#xb;���R.b�X&#x16;�&#x5;&#x18;�&#x0;e�sh&#x1e;gOP�&#xf;i����%�Ē˞&#x1c;KqS&#x7f;�&apos;��VRѫ&#x1c;��	4&#x1c;�7����|�mi�7&#x7;�7&#x7;�&#x17;���`+&#x13;����2ߴ�-)3�r�&#x1c;��H)���*�&#x12;&quot;&#x10;���Q���&#x14;A�&quot;�!X]�&#x16;�O[������ZRLTYK+�V���ٟ�5�&#x13;�kF]7����6&#x1b;Uۯ1Q)0��f���O7�&#x17;����&#x1e;���&#x1b;�&amp;�0&#x1f;ˤ��e&#x19;�����~&#x7;�����e����v�j�Y�z�e�&#x15;��eo&#xb;�\�l&#x1a;&#x7f;Śq\���&#x4;a1�&#xc;�&#x18;w&#x13;�&quot;��-�Խ��&#xd;
ð[8Jb}�&#x16;�R��_��4�؂&#x1c;w�������e&#x1;-��̶�6W ��p�8ORhBi�L�±{����z�x�&#x12;�&#x16;�&#x11;d����i�&quot;&#x15;A�r�:&#x11;�$\H�q+&#x13;�%��&#x1d;�I&#x10;ٵ�\&#x1c;�q���Z(;����=��)`Q�c�eV��Bn&amp;�O&#xd;ɄL�&#x5;&quot;��s&quot;�a�k�&#x0;f&#x5;�!&#x18;�&#xc;	�Ի×���EhA�C�I&#x1c;��M&#x5;2��&#x12;x���&#x1e;7��$o���&#x12;�E��&#x17;6o�&#x15;&gt;&#x17;�J��Ǿ�z8E�QTб�,A���cŧu[����-H&lt;p�.i&#x1;��Z�I&quot;W��F(Ɛ�r�J9�fo&apos;�F�$;���9�g@Mw��������Q{���o�xAuc`�&amp;�-��LY��7�Y�&#x6;S���&#x7;&#x8;f֘XnQ�ŕ���ޒ[R��Y�l�&#xe;�b&#xc;������Y�}j6�}Rq�gK�9�&#x15;Z�5���ID��&#x12;�c�C����&amp;&#x10;��xn?�|Y���&gt;R�BO&#xe;&amp;��&#x3;��3\Y��&gt;֓&#x3;`v�fdޔZ7g&lt;&#x1a;&#x1e;��%Z�[�4nz�Y+��ރ�.&#x5;���:cM9:&#x3;C҆�qi�~���1Ը�r]&#x1b;&#x19;��3&#x6;�m�YkV��z�03�H���&#xe;���ފ&#x1;Y &#xe;���0��0�N���,MI;��՚}�S�Ad�m&#xc;�&#x12;�-�&#x1d;.8�H�#o�&#x14;�w���^;=0�aם&quot;b��&apos;�mC&#x19;v�I�2�vm�8&#x14;2��{��&#x7;�S��.^&#x3;D�ڬ&#x19;�ܶ&gt;m;3�u�a@�:&#x14;����7�U�&#x5;&quot;F�}	;wz�����&#x5;ܚ&#x6;(_&#x15;&#x15;��*�j�����A�P&#x13;tY���&#x8;�6&quot;�c�^��(���@s^*��8��x��&#x8;j��[&#x1b;&#xd;�k( ��&#x5;MP�;&#xc;*_5hַ�&#xe;m&#x6;&#x2;ix�_&#x1;��&#x19;���_���0݃L�,���Ln&#x13;��=&#xe;Y}[8��QL�jA��}&#x6;G�6د�~4��&#xb;���S�+���hX�3ÑcEI�w&#x18;�Vm��F���ۼ�����3uʝ	�2�t�;&#x19;8�v�w�B���&#x5;m�x�&#xc;&#x14;+sϨ|&#x1f;�&#x19;8�%�&lt;$�/�^�c�ފ��V_�֊&#x1c;��������&#x1e;�um�֊L�7&#xf;&#x14;m��&#xb;���o&#x1b;`+�B���9��MY&apos;���xF�@�&#x1b;A\���&#xf;L�ھhmG11�&#x12;O�r۸�D��e&lt;9��u{}a엶&#x11;���1*�&#x8;d���`�z߈u�Ů�/��r&#x19;@F��&#x8;	��6�_�u&#xd;�n��@`��f�մ���0~��&#xf;�+^*��r��&#x1;&#x3;+q,)~a��,��f&#x8;&#x18;j&#x0;{��ٻ�	���NbB&#x16;G~�H�V�$��I:!ic&#xb;U�쫺&#x1c;���&#xe;̮JڑsPS+.&gt;�^�Y�N&quot;يk&#x1c;&#x1d;��&#xd;Gs�����Tɵ���%��n	��H�V�s�a��V�kG��G�Y���xS��V(&apos;ś&#x61d;&#x0;�l�nn{|&#xc;yڒ{�z4)]e��&#x11;Fc&#x7;&#x1f;`&#x12;�;�&#x1a;���rǓ$�\�!��)&#xe;Tzң���&#x5;��&#xd;
_`&#x1b;&#xf;&#xc;�Q`&#x15;����a�z|�%�~��q*&#xd;�-���SnR���E�}*&#xe;oT��1nT��bۧ�*�&#x7;��q�&#x1d;V��+es&#xb;&#xc;��DT&#x16;%�����4�O�&gt;�&amp;���Vb&#xe;�F#-i����&#x1e;�%�3M�&#x2;�z��U�G3���&gt;�����R�&#x3;]!�k�j�ޭՋ��n��&#x16;���vֽ&#x1a;�r��M�a&#x8;��q�ݡ�/Ħ-&#x14;&#x1e;�6=.6&#x1d;@�c&#x1b;&#x1f;$�Jږ*&#xf;&#x0;C&#x12;`�&#x1b;��dR;&#x7;�&#x11;Hk�[�:P&#x5;�{��&#x10;Q&apos;&#x1b;Ϩw�M�V��-�&#x1d;��I/&#x12;���B&#x1;�&#x3;Q��d� V�&quot;�=�t�nBx�)&#xf;&#x1b;&apos;��2��ϴ�&#x13;�K���&amp;��&#xd;�72�x�&#x17;�N�o�N&#x1b;������/�fs�C�B/B��&#x1e;��H�ű�$�(�Ҷu�K=��n&#x12;���b6��&#x12;[��3��aˬ�`�����n��&#xb;a�l/e�H���.Ix:=y#&#x6;�&#x1a;C+&#x1d;��*&#xd;���\W�U]���:K:&#x7f;��ڿ�&#x7f;��P���u��oڍBcc&#xb;:���-�E,#8���E�w&lt;|�~�)���&#x7f;&#x15;[��&#xc;&#x19;�!�YuC[�&#x7f;&#x181d;�f�s���W�٬~m��~���z��j�b�&amp;|D&gt;#n�1��n]&#x16;&#x6;&#x7b6;�lR�u-���&#x1c;�|�{�~�&#x8;�&gt;&#x7f;���&#x0;��&#xc;ֶ�����!)éG&#x7;[��&#xf;&#x3;�u8�&#x12;����&#x16;�^Y��oYa&#x5cd;�q	S��ƵQc;�_�ڦ&#x1d;��&apos;!�&#x1d;�	�&amp;�&#x17;�&lt;}�}&#x8;}�g~�k�yQ�A��!U&amp;&#x1f;�r���� V��+�Ut��p&#xd;���-�&#x7f;��9��&#x17;��&#x18;���eg�&lt;D���&#x6;&#x14;�50�&#xd;
��&#xe;k�XK��&#xd;
,,����i&#x14;&#x13;OL)\;�&#x2;�z��G��úi.$I�� &#x8;�f㒣�T��&#x1d;g�&#x5;f����F�+��ٛJi�&#x3;�ϥ&#x1e;�&quot;`��\��M�Ղ��u�oi��&#x0;U��m���[援2�N1z�Y�53�$�7&#x1;ԫg&#x12;j�A�|o&#x1b;TI&#x18;�K&#x2;؉NO����6&#x18;&#x7;�L�&#x7b9;�`&#x6;&#xb;J&#xd;ڵO���7�&#xf;&apos;3h����&#x5fe;n�~ݐ�N��	H|�i��5�f4��&quot;&#x17;�&#x1a;Do&#x1b;��&lt;ƫ��:��e�����r��/�&#x1f;:�J,&#x14;i�^cHu�&#x4;쪖��84&quot;�S�\�L�uG1�&#x1b;�-&#x10;��#&#x1a;�]��&#x2;��c&#x8;��&#x7f;�&#xf;�l&amp;b~q���ly&#x18;if\3K&lt;&#xd;u��(_eد�&#x13;�#��w��F$u�__9l�O��D_&#x1d;7�U�&#x5fe;�&#x1b;3���&#x1f;jp!�v&#x11;���&#x6;B��o�EyѬ�&gt;�&#xe;��e��z���h0���c�҃r&#x12;&#x8;��R�[&#x17;����J�Ur�5�٫$���k&#x1f;�$&#x1d;&#x1f;�&amp;9l-�P�$h��&#x6;�F0��&#x10;d+6��y&#x16;��	���4HF�V&#x11;:� �&quot;���8ŝ�����	�k�S	7�-J&lt;K�k���&#x15;UL`�Z���O��g�f�W��@	.���؊�&#xf;x�)k�&#x11;O��!��&#x6;���˓&#xe;�ڤ(&#x19;�x�T�JG��Z_&#x8;�%�*&#x12;&#xd;�%&#x12;Y2��2i�ۤh�M֯��=���~�H�&#xd;
n� x33 ���6�ݙ�&#x1;d��&#x11;n&#x5;�IO�`�2j���&amp;�&quot;��&#x4;fw�7�q˛h��&#x17;��%�a���&#x3;&#xd;
���d}^\�GQk__�w,��K�u&#x15;c��%&#x8;Kh�/E1:&#xd;7��&#xf; ������P&#x1e;�V�&#x15;&#x14;~eͣ��h������o�F页�I�&#xf;&#x14;�qF;���t�wSl&#x1c;5-��ؾ-��-j~u���w&#xd;H�&amp;�X�&#xd;
�N���i`~���������2������uͽ%\ޏ��Va�E���$Gd&#x1c;��`F��?��־2&#xe;:(�&#x1b;t8&gt;&#x14;�į&gt;\Q&#x15;.�d�v�&#x7f;ٸ&#x4;��vj�];�&#xc;��KZ���8���[m3�U��eKe��q�[3$�3E&#x5;��.��&#x1;K����BW�&amp;�&#x1c;���&#x1a;�&#x2;�����G���k�&#x7;&#x1c;&#x7f;���-�Ǿ�&#x1a;��ެÌ;�&#xf;�&#x15;4N�e�x���0�&#x2;&#x1a;w&#x1f;h~-O $���//n&#x1b;�^�U&#x16;2� �R&#xc;0&#x15;��^�&#x18;Rݏ��2�B!&#x14;��[�aƷީUoz�Kr/d�e�n&#x6;�ʌ&#x4;���R�֏&#x5;+���R�$s���!&#x12;��&#x12;�~9^�&#x1;�K��n]���&#x14;;&gt;��k�5&#x8;~��&#xd;&#x5;p�����fyH(&#x2;�&#x17;���j������괯!�&#xd;��_&#x1d;�@���&#x17;�d�6�T�k�:�&#x1e;Ƶ�x&#x1e;��&#x1e;#�A)&#x19;#�y�4�&#xf;&#x1f;�+&#x0;qv&#x4;��ڡk@t���1 &#x3;�(&#x11;&#x17;�i8�w�읲�J&#x6;��V����e8��x&#x18;�E&#x1c;&#x6;�JFK&#x1;@�b�&#x1b;�&#x11;�&#x1f;�C��^$&#x4;��&#x1b;&#x1c;�&#x1c;�Ec&lt;���~�؞%�&#x14;Į���&#x1b;�Q&#x18;�%D}�a�&#x19;&#x7;�5HЯ��d�x2&#x1a;&#x7f;���q0��BR&quot;W &#x14;W�ht&#x14;�@@���x&#x1e;D�_&#x1f;�)��&lt;�y&#x19;�!�2XB8�&#x18;�2q1�����1AP����S4&#xe;��`&#x16;���J���)Ojԟ���Z8&#x1a;��4��y;�&#x1a;�k��&#x1a;�?߸p&#xf;�:�a)�i&#x1;�/q0-Y��`���I���s@4&#x0;&#xc;e�&#x7f;WF�v�ϣ=���0��Q66&gt;&#x7;qd�h3z&#x8;�8�3&#x0;u86-&#x2;�&lt;ў&#x1;��x&#xd;
�hP��\&#x0;P���&#x12;F&#xf;�{&#xd;
��YG&#x19;@v_O��]�J�&#x7;��x2��:��bV���&#xe;Oy���y�&#x18;��&#x14;/&#x7;��&lt;&lt;4����&#x13;��f��&#x1b;�{/`����2�&#x19;�?�))t0�u&#x5;��l6&#x6;�&#xd;���&#x1;�t��&#x1c;z&#x17;H�����&#xf;`�x2�=&#x6;q0����h&#x16;�E�h�g��`kz;l��&#x1a;&#x3;��,��&amp;�Ş��`y�&#x1c;(�rїh&lt;���&gt;&#x6;����&amp;&#x7;My�Ҿ�{8�_E{*���g	G��X�!��&#x6;��}@)&#x11;#���~4�Q&#x1d;&#xf;&#x1e;&apos;{f��&#xb;��&#x7f;��`v\&#xe;���M&#x10;������%�H&#x6;����fb�&#x8;��wcZ�~&#xf;&#x16;6��R&quot;�Lf�&#x11;d�R0��D&apos;�E&#x7f;�&#x1d;�e ��Bw`���]&#x10;&#x7f;���ǒ�H+���&#x15;�J|&#xb;�F�&#xf;�U-&#x7;�byXʓ�K8�&gt;ٷnὀ)&#xf;+��n&#x14;6��ɢ���,$%�#�9�b֒&#x15;�&#x12;�2��&#x8;�&#x1b;l��	�&#xc; ��Ʋ���-�6�{��&#x1e;L�&#x14;�T��Y��&#x8;\�&quot;���7�4&#xe;�;ǐ�&#x0;8z�U��I�t&#x4;8Y�R&#x1e;Nn��`2&#xc;/�aTrh &#xb;Iyr&#x5;b��p&#x14;&#xe;�Οg&#x0;)&#xf;&#x1b;���~&#x7f;�7&gt;&#xe;ƨ9P�[/oM�&#x1c;�?ޒ�9&#x18;&#x7f;|y��aw&#x1a;&#xc;�T�&#x7;�F&#x6;�2��/�x��&#x1d;P&#x7;�.K8�[)_�hn���d��&gt;�&#x2;Iy��[�X@?K^&apos;&#xc;D��&apos;��00�*]bd&#x0;)5�{&#x19;�&#x7;����x9X��&#x10;��0T&#x1b;E�&#x3a2;t�.&#x5;��j�h4:&#x2;L�`������{&#x1b;a�k@�w���8��pr����89\�{�����鞙�í�Q��C�o��ኞ&#x13;0J��7 t&#x1f;�h�@����2���&#x17;I&#x19;Fc�������00����^�i���|&#xe;�z$��Z&amp;.ޢW&#xf;��#�2&amp;�c�1�����&#x5;���d&gt;�&lt;&#x1d;C&#x6;j&#x1d;��qC&quot;�;&#xf;�l�|o���Ro2=&#x1e;����zm0&#x8;�s�#Wv��&#xc;$%rI0��&#x10;��&#x17;�p&lt;&lt;��j&#x11;Dǀ&#x1f;&#x8;Ӕ��\&#x1;��f[) ���d�e&#x15;�c�KR\����&#xe;,����&#xf;�&#x10;&#x1d;&#x3;~:�4ܷ��;,,&#x6;�&#x18;0�ݻb�&#x1d;��-�r��*�M���&lt;&#xf;K�}N�&#x1d;�&#x1b;v6&#x1e;�MR8��q��&#x5;r&#x1f;[�鵛`�}&#x15;&#x7;�&#x2;�Qj��}�����=�&#x1d;�5i&#x13;���&#x16;&#xd;&#x4;��c�TvO�,$%J&#x8;�����G&#x7;nN�羣�6&#x5;ݻ)�&#x1;�I��Hj�xV��  J��&#x14;���&amp;{&#xf;��$ ��q^&#x4;����4K8��v&#x15;&lt;E�}KD&#xe;��]&#x2;R�F���{e)&#x18;e��C&#x1c;&#xd;{��t&#x14;��j&#x1c;&#x6;e��ux�[7�U��1�&#xf;�&#x0;R�fi�!0&#x1f;�3#�\M���Ī�`�m&#x7f;��pM�&#x12;0J�[e@xCt��&#x14;�3�~P\����=�&#x19;@�������`���&#xd;&#x1d;���x2&#xd;�y�oG��B�����&#x1b;�?�&#x5;L�5͗��1��}&#xf;{8pU�&#x12;����&#x0;$���YX�fH&#x2;�&#xd;a�&#x3;3˞a��n�^�&#x0;�=F�o�pVv��MP��&#x11;?)�,9��&#x3;��v&#x16;oɇ&#x1d;&#x14;&#x1f;�&apos;İ1&#x2;&amp;�/ý��9&#x1c;��@S�YB���|&lt;�I&#x0;:&#x6;�U�&apos;�&#x3;&#x1b;�&#x0;&#x1d;Ú�EO���j1~éD�@�&#x15;�J�#�ŕ�&quot;&amp;���v&#x17;�&#x1c;&#xd;��1�*��Rr�iϳ&#x19;m�5Ql��@�힕�&#x12;&#xc;D�R&#x15;Z8�%��nД&apos;7�)&#xd;*&#x19;(�&#x18;�&quot;���,4�ɏc�@!8e&amp;�8������+���/��|�?�&#x1c;ti���l�����p&#xd;T㽛�&#x1d;�&lt;�þ-��&#x1;���°e��` �տD��xx&#x4;�e	�1�&#x4;�~&#x1e;&#xd;V&#x8;�2S�?�R�q���R8�,m���t��&#x12;�	&#x18;�F��YܾU��&#x1;H�&#x1b;�ik}3��w�a��Qe�&#xd;�q`�&#x3;+��Д��l&lt;&#x19;mh�wD(�&#x1;t&#x4;�A�x\�ɂT6�&#x10;���&#x15;��&#x2;C��Ek@����dzd*-&#xf;�&#x11;��ؔ�&#xd;
H%&#x1e;!�&#x16;��5�]�U��}��&#x3;n*�B{�|&#x1e;�^�&#x0;R�O&#x19;��b&#x17;�&#x12;�&#x12;}��-;7&#xf;���}�7���bO,&#x1c;0&#x7f;��H��&lt;�ux�ֹ$Č%y&lt;�Y&#x1;�80�v�&#x1b;pt��I&#x1b;�*��&#xd;
��ǰm~&#x15;���&#x7;���AL&#x6;��1cL��9)0%&#x1e;&#xe;&#x1d;&#xc;����b4&#x19;|+?��&#xd;
�q��&#xd;��w��|ܠAQ�b��R��&#x8;GjE�}��*8G��7,���͞k���&#x1;��8V&#x12;BR�l��&#x1f;\84B:��&#x17;&#xe;�&#x11;c+�\b�&#x1;��ʹo����5pJ݈�%&#x1a;&#xf;᠍�b�	&#x1f;���:��`��f�J&lt;&#xc;d1&#x7;�ߦ=��.�&lt;,e��G`��k�&#x1d;�3&#x1a;cC�7�q&#x7;+�Z&#x1;�&lt;��&#x0;�&#x6;&#x1b;�=�R�&#x5;���v�:��l�&#x3;VՁ0&#x7f;[&#x8;�p&#x7;\�9&#xd;
�&#x1c;ÊY&#x3;�t̼A�&#x1c;�&#x12;3&#x3;J�&#x18;9���*4ǁ�c&#x8;&#x1d;��S6n� p�&#x1;�̖�&#x4;�1&#x4;&#xe;��������&#x3;��r�&#x6;��&#x17;eG����v&lt;&#xc;�z��&#xd;
Q��)}���F2g[&#x1d;�1&#x5;�ДY����9�.~��]��Z��p�_!HeW&#x1e;d���a�5���#0#�&#x7;=Kh��&#xb;�&#xe;o@���&#x8;k���&#x19;�3߀�&#x3;Wȥ��x�5e&#x13;ހ��e�r�����M,�&#xe;p��&#x3;,��&#x1e;��)��&#x18;&#xe;�-[�.&#x1;)��}�pΣq&#xb;R���@G�-e )&#x7f;��&#x1b;�;?�B���c�&#x18;�&#x8;e!)&#x1f;#�G[�p�-A�&#x10;�&lt;06��Q�Kd�(&#x10;Rznp�&#x1e;&#x5;&gt;J�5`��1��~��&#x1d;e:�*�&#x15;`��7g��o#ݑ�fo�y�m����(��&#x11;d=��&#x17;���ɞ�0&#xe;�b�o]{��Rr���=�&#x8;�:&lt;G����H)&#x1d;&#x1f;D�#b�2� �錤���#8&#x1f;�:�v&#x16;�&#x6;�&#xe;F�&#xc; �&#x1e;n]�&#x14;&#x4;�Ě��&#x1b;�&#x1f;ˑ�����&#x7f;&#xf;ׁK�J�&#x1a;f&#xd;
؏�����߷��w)�.?�]�:e(J�S~&#x1c;��K�&#x19;ٮ&#x19;ǁ���F���q��t�q5&#xd;
&#x7f;��&#xd;
&#x4;���g�=R�p�7�s����&#x1f;G�ξ���b:	&#x14;��\���a	Hɧ2�ap&#x4;l�`�؃d&#x14;&#xc;�n8�/�&#xb;V&#xd;
G��&#x1;Jo&#x2;\n���`��=u@�xVf43_�X���&lt;0eZ��&#x3;&#x7f;Kv�3���N����&#xd;&#xc;r0u���D\�{����lu�&#x13;u&#xf;&#x19;Z�����&#x17;��w]f!)&#xf;&#x1f;_&amp;��K���q�&#x10;o&#xd;
F��t����g7�c����r&#xc;g��&#x7f;�c&#x1e;�&#x12;�Kx�-���&amp;�`�)&#x0;���woT��\Coз&#x7;�cA�*4e�&#x17;L?F&#xf;��7n�&lt;0~֡z_&lt;&#x19;������c�2��U�}iw&gt;�?�z7�N��ѩ�z�^�߭}�_#8���t�&#xe;�-�&#x1;�&#x13;�&#x1c;&apos;�-�Z&#x5;�!��&#x14;�&#x4;��V�_o]&#x2;&#x18;�v�&#x5;&#x10;u{�N�_���&#x7f;�M���8&#x17;}�&#x0;2k&#x1d;2+���yO̲�@S&#x4;�$��?;UH&#x4;�x�&#x10;�&gt;^&#x11;&#x14;�&#x11;&#xd;
�	&#x1b;o&#x10;.��PoӇ�&#x1f;J1o��&#xb;�#��%��9�+���&quot;�4!�Z&#xe;�NH�8��_&#x1c;��8�&#x12;�`Pi�ar�Y��Hs�K��&#xf;?A�s|&#x11;�&gt;ΐ�@����&#x1a;����&#x1c;�f�c�u��X�T�_5Z����e�S�����k�S&#x15;�&#x1f;O��:&lt;f��&#x0;�O�q�U�l���ļ��&#x13;�)m&#x1b;���X��mm&#x1f;���ӥ&#x5;ȶ�&#x15;&#x6;�&amp;�&#xb;&#xd;p�	e&#x0;&#x1e;��C&#x7f;��x�ãG|&#x12;�&#x16;�&#x10;xI�{���h�J���Kw��`�_��@Q B�㰊�@ʦ�h M�_ӫ5���s4�̦[l&#x12;&#x17;6�&#x2;�5�9$J&#x1c;��;�q&#x16;�&#x14;a��!y.&#x1c;�*�c!CH�&#x16;ME���|���m��lŐ ���4AW�&#xb;]���뻄L˧&#xb;B9&#x1e;��8�K&#xb;�&#x2;�	�5�PjM_&#x14;#@!��&#x17;�&#x13;&#xc;&quot;KM�&#x0;�&#x11;8M&#x12;֖.��X���-�D߷xxK9�q�9$&#x17;�Ԗ��&quot;Tg5�xZ�f��ѽiw&#x1b;�F�տ��Щ^�^&#x1b;F��n&#x14;&#xe;[�N&#x18;�&amp;�&#x1d;U��&#x1d;g���H�&#x1;�&#x2;�&lt;W�.�&#x6;�(�&#x1c;&#x7f;)�&#x12;`�L`�]&#x0;Q�~Iג��&lt;&gt;@Nb�N�7&#x0;�:�V�ZC$}�6z$�&#x0;��~��*W�Ǔ&gt;Z&#x3;�8^&#x7;Rl&#x15;&#x3;�b���s]&#x10;&#xd;
�p&amp;&#x5;�&#x5;&#x6;TB��&#x0;{&#x8;���A&#x1d;K+��+K�!Hl&#x8;&#x12;&#x1b;&quot;��&#x5;�&#x7;V̊V}^?����ҕ&#xd;���K����&#x5;N����ja&#x16;7�`(x|&#x16;&#x1f;�e�c����Ez�b!&#xd;�&#x15;�N�4�-x/�@���a&lt;ɫՁq�F&#x1f;���&#x0;�$&#x19;-/&#x11;�,n�Z�g�&#x2;�\�����&#xd;
J&#x7;�2,�&#xc;�&gt;��D�&#xd;
�qcD;/cX����&#x1b;�D:��*�&#x12;G�	42�&#x6;�$�)�cɷ&#x6;&#x1f;�&#x6;�&#xd;
�v�L��m�V�vI�&quot;�j7��H�渒&#x1e;&#x1b;�xgj��l�?��d&#x5;&#x15;&#xe;�4�#&#x1a;����h�&#x18;ޏ�8�&#xc;ǳ���i7&#x11;!}��&quot;&quot;l�?0&#x13;���&#x19;�\\W&#x4;�m�YkV���U��1&#x2;��ګ&#x1b;W�m&gt;&#x12;����QH&lt;L&amp;&#xf;�P&#x17;��&#x0;&gt;Qhr�&lt;t&gt;y2l�&#xd;
�2F͎�-�d=��h�pЭw&gt;��:uC����@bn��6���s&amp;����$�|&#x1d;&#x2;�U�m&#x17;�e�l�ʾP��&#xd;
�˷h�ٞ��b&#x8;0Ҿ�mE���^9��Ş�����r�1��S���o���&#x12;0�wە[�(�-L��w��#_&#x12;�&#x15;MW�&#x0;&#x12;�{;0[���U�ɗq��&#x10;&#x5;&#x14;J}uߵ��&#x2;Wڌ&#x1e;���&#x0;&#xd;
}&#xb;C�,�����B�W2�&#x1b;^�eɛ���&#x17;�v�̮VE�&#xd;�&#x10;��������&quot;&#x18;U��`�0Z#&#xe;��x&#xd;
�C&#xc;ȭC��	��:YW�d����S�&#x6;�ُI&lt;�m&#x14;o�(&#x14;���Q�9&#x18;��e�!��}&#xc;R�v2�&#x19;�~]5.���k�&#xc;&#xb;կ/ꗗ���1&#x7f;��&#x17;)��sc��O�hGc�Z��k���&#x1c;u&#x17;��_0�A뻏b�����U����&#x1b;-c�T���&#x11;&#x13;W{���&#xd;*�^�4��A�&#x70e;����i&#xf;&#x18;&#x18;Ew���ʬ�~�Um~�6�}��j��8&#x1c;&#x14;/������{e�&amp;y!lrτ\r7&#x16;4&#x4;�1���M�B��ߚ&#xd;Ti�N�߾���ǃ�c8;��c&#x14;�&#xb;&quot;M����&#x3;#�|&apos;}�Y�R�=�&#x16;�Y��&#x1e;�9���0�&#x19;&#xe;//*�=F�����&#x8;�y��g��Q&#x14;��xz9��.\!���էA0&#xf;���&lt;�Ο�cX/���ZBHW�x&#x16;&gt;&lt;�&apos;�|&#x1e;�+��9��&#x1c;�Gx&#x17;L�3��]p��R�V���9�x&gt;Yē�Q0&#x1a;O��s�&#x12;N&#x7;�Rvuy��m��&#x15;n���S4�&#x19;Y�&gt;�V����(P�/�&#x5;²&#x7f;�4P���� �&lt;�D�L���]Hg�$|�gg��4��IO��$�Ȑp&#xd;
���3��2��&#x1b;C&#xc;_&#x14;�&#xf;&#x2;�]���&#xd;
c�L���r�|��gVn��b�)P��O���S&#x1b;���{&#x14;O�O &#xd;
&#x6;��&#x1e;��{4C#��������&#xf;�I�q&#x12;?�5&#xe;G�&#xd;��|��&#x17;�&#xf;��*&lt;e��`��������&#x17;�&#xe;�����&#x1f;&#x6;C�&#x1b;��&#xf;�H��)�c�&#x1c;�`D&quot;&#x8;�)�?Y�.&#x16;�h�0&#x1e;�x1&#x1a;�ن��������Cm[&#x15;3�_��C�rg�Ve&#x10;&#x4;�p]&#x5f7;&#x15;Ld���&gt;5t���%�+&quot;&#xc;�����rw7P���{�9a`&#xd;�8]���&lt;j�&#x16;��.0O9vE&#xf;lQ	�4�{�P��v�&#x18;f&#x1f;�&#xf;|&apos;�TB&#x6;&#x15;�WaE��+�}�V&#x6;���`po{w2&#x7;n&#xd;�&#x1e;��&#x18;&#x11;v&#x1f;�����&#x10;��k�H�2&#x0;�&#x10;��X~E���~��&#x7f;����l�Ms�&#x14;&gt;#{V�3�@3&#x1c;?�&#x1f;&#x378;&#xd;
�p�U�/��P&apos;&#x11;&#xc;�F��ׂ�&#xd;
&#x16;s��蟴�a��Ĺu.Φ�&#x0;B&#x11;ј�&#x14;�d��&#x6;q&#x18;�g���l�w��[��&#x18;L���|�q&#x171b;W�&#xd;&#xd;&apos;.F���1|Z&#x1f;B�Q���0&#xb;�x�x��]����E�p&#x18;&#x5;�nQgw��aӯ��p��G}FتЯ�a�&#xd;
+&#x3;���o&#x12;Pq��ʘ&#x7;�92��&#x3;�ޕNEx�}E[���B�Jx�+�z�,6�_f��p1&#xb;&#xb;�&#x18;�:�&#x6;&#x18;����g8�,e�&#x1b;Δ��uG�W�;+�&#x8;&#x15;��&#xf;}Wy�O��̃��	&#x18;�*2���&apos;�ff&#x11;�&#x1c;&#xc;9�&#xf;?=��hs�.Y��l�&apos;l�*���1�&#x1b;��u���x81L~z�A3̆&#x1a;&#x1d;����ns}&#xe;�V��ϩ�_�.&quot;`���&lt;;��YL������ &#x1a;A����y�&#x8;1X&#x15;��a���y&#x1c;�-&#x12;&#x1c;�,�^M����ق{a6k�jF����ӀT�~��?&#xc;0���&lt;���S�dt��&#x5;�h�&#x1a;�`�&#xd;
&#x1;���&apos;^T�\v��&#xd;
��&#x2;&#x1e;�ft��{=&#x19;���&#x7;�Y&#x8;ʎ�b�-�qd&#x6;�&#x1f;��&quot;&#x1a;�&#xd;#bF&#x6;Gc&quot;/��ϝ&#x7f;9��&apos;��w�/&apos;�]1&#x2;к&gt;��ܞ��&lt;��&#xf;&#x1f;�0O�&#x7;O��&#x19;��&apos;3���&#xd;rj&#x1e;N�f�`�q$�e�d��`��T��� &#x1f;=����ڼ�7�}�w��&#x18;���&#x18;��&gt;&#x6;�����P�K�[O����J�e��u_d�������j�{&#xd;
螠�Ƴy0&#x1a;}5k&#x12;�#Rу&#xb;�U݇��#�&#xd;
^�1����&#x18;c��[�&lt;��*63�&#xc;&#x2;`8�4+�]&#x14;���h&#x10;�&#x4;�o��߁&#x12;V�b4�?�Ũ&#x1d;[��;�&#x4;�&#x5;�4����&#x3;�Xڃ��B��8��){�49�� &#x1c;&#x5fc;��W�uW�2��͏�.26N?^^����7�&apos;����Ƽ���&apos;��R^��X(�&#x10;��Kld���&#x1a;�&lt;�?�p;&#xc;�-&#x2;��1&#xc;�#���&#x5;R7X&#x1d;&#xe;�ac�b�&#x13;&#x6;�2{No�&#x5;�C8�2�X�A&#x5;�-�z�Ԉ&#x13;`Q#7B���)������ɇ8�&gt;F�ى6sJ&#x5;]�&#x12;&amp;�ӳ&lt;&#x7;$]&#x8;t�k�p&#x1c;V��3�f����g�v���&#x15;�8�&#xe;�p&#x1a;=&#xc;&#x17;O����&apos;櫰&quot;���w�E������䅟Y,���k&#x19;f&#x16;&#x7b9;�WK{�&#xc;�&#x14;nEX&#x15;i	�����j���D��&#x7;Ȇqd�&#x1f;a�4&lt;��&#x6;f��/]�&#x18;B!,����&#x1b;�&#x1b;y��D�t&#x16;.��K�&#xb;L&#x1d;x9g8f&#x14;�&#x7f;�B�x�n�R�C8n&#xc;&#x16;��&#x1a;��r�@17O��&#x12;�&#x1a;&#x1;xl���&apos;&#x3;�M�,_�����&#x1;d�]����F��Z�&#x17;3��p��|�᧡�&#xd;�a��$2�3��&#x1f;A&lt;M�&#x1a;&#x13;Dq�}&#xc;b&#x1c;���&#x1d;4�&#x18;&#x19;�&#x5;+�PlF�×�8&#x15;��&#x14;&#x1d;&#xf;0&#x18;BPB��b4��&#x8;I&#x10;n�C�&#x18;�P��&#x1;&#x1a;&apos;c�0Q�@�&#x7f;&#x1d;&#xd;��lr??�4�&#x16;0}RM&#x7f;7&#x4;��g�g3�0y��Y�?�&#xc;��Y&#x18;�\%�@�&#x1b;�8�&#x1;&#x5; &lt;.�]�\��@P�s�&#x2;&#x15;:&apos;xX&#x11;+��f&#x5;����&#x19;1�&#x0;&apos;z&#x0;&#x12;Z�+7&#x1b;�`��y��^g�֔D4���}����&#xc;=�x&#x7;b��&#x1;T$�(�q:-�L�x�&#x17;�&#x1c;+�&#x16;�&#x11;�&#xf;&#x6;�`&#x4;�n���n&#x8;&#x6;�p:o&#x1a;&#x17;raȹ�&#x12;�7�[�$&#x13;���F�)�&#x14;�&#x1a;.&apos;?ƣI�^�K&#xf;~H-5��1��&#x4;�&#xd;����&gt;����&#x7;##��f��p&#x5;��}l���@J�N�~�&#x11;&#xd;��?�����&#x2;���w,��]&#x10;�&#x3;�W&#x11;0&#x1b;�Z��9�&#x8;#&#x7;?r�f&#x13;h��p&lt;넳��{�5\8&#xd;
a�ڬzo&amp;�E�P��&lt;�E4�6[&lt;&#x18;&quot;��&#xd;ƃ�d4&quot;��ᒧr�&#x18;&#x1b;�kj�o&#xc;��&#x1e;|�Sw柧 cB=��u��4����H|��&gt;&#x1f;&#x5;�y��2t]����J{.d 7?�d#s��J�P����Wf&#x1d;��]G������z&#x1c;O��N�M&apos;C�Ő��{&#x14;�tɼ��j&gt;;!a�ۉuv�+��WP����&#x11;����g&apos;&#x14;�����n&#x3;�&#x17;^��&#xd;�&#x1b;kc&#x1c;&#xe;�O�(�gԶg&#xd;
P�n�&#x7f;&#xd;���O�؈�&#x18;�=��ox�-]����&#x1b;�O��s���p�c&#x12;&#x7f;;7����s�g&#x19;��� 7��=�&#x7f;NW��F�n�ǆg��6���\1��o�z&#x4;R)�p&#x16;&#x17;&#x1c;]?&#x7f;�&#x7f;�&lt;&#x1a;&#xb;�&#x2;&#x17;b&#x3;�yŃ�	�û	Z���}�F&#x12;۩�;��w&#x10;�N&#x1a;�7�L�oF&#x6;&#x7f;&#x3;�&#x2;&#x16;&#x1;L��e�`16~T�O�O&#x16;&#x7;dj&#x18;&quot;��&quot;0e&#x11;S+�(�]R���i:�`�z���5/�&#x1e;����&#x18;~�x2�&apos;ya�&#x5;&#x7f;��)�&#x1b;&#x7f;&#x1f;�f�E&lt;&#x0;��4�c&#x12;?��Ę�`J�Ҳ|oP�W!&#x4;!��Ы��	,&#x19;�:��&#x1e;&#xe;&#x7f;&#x1a;g,z�6&#xe;p&#xd;
�H�p4�$&#x0;�6&#x1d;�Ǐ&#x1f;�&#x14;���I�K&#x2;�,&gt;Ɠ&apos;4b�&#xd;�u1�o&#x7;&#x1b;��E��&gt;~�`�&#x5;�&#x10;U�*���[�y�&#x15;@�^n&#x2;0xO�&#x1d;��&#x1f;�修���~�&#x7;���=��d&#x4;r&#x10;8�w�ifb�����^��R&#x14;�&#x7f;ޓ�&#x3;��_����&#x7f;�&lt;c�#&#xe;Ȥ&#x17;��hX�&#x15;&lt;&#xb;3&#x17;�\����L\M��&#x6;&#x1;�5;+�[�T4�&#x4;�b0��&#x1c;��R�?��\��o��4�l�}Ʉ���w���D��-6�U�,�$�Sd����72(�&#x4;Wf:&apos;U��)� �\��\1���5�&#x7;�͌Y����&#x19;|��9Z�cC��#�a����&#x8;b�v�a�a&#xc;���:�&amp;S)��v����+&#x1;��&#x4;��� �W��pvb0zb\��AV�����&apos;74�J4����&quot;J~kd&#x7f;��E�LH|3&#x5;):~�$�&#x5;��&#x13;#���&#x13;�&#x3;O23:�72�d�&#x18;��q���{&#x8;&#x17;�U���F�&apos;��P�&#x10;&#x0;�G��K&#x2;s�椻|�&#x7f;9&#xd;
�9�-+��&#x1b;�J������d:�͓�����u��&#x1f;�=g��@&#x0;-�n^�1��Z�4���&#x13;ƕ�K�M�&#x7f;���W�&gt;��M~��0D��OƝ &#x7;���&#x15;�`c��&#xd;��N���0&#x1f;��8@�A51&#x2;���������&#x4;4�.&#x8;�*&#xc;�dE}&#x8;ԃ���^25���p}3Z&#x18;&#x1b;&#x8;m�&#x15;�&apos;�N�:�[�4z^&#x1e;)I��y���_�uɿUC�Sڶ�+p�w&#x3;S,&#xd;X�SξW&quot;&#x10;n�j��@�&#x5;��&#xc;����q����eT|&#x1c;=�-f�S&#x10;S��OI�p����5�&#xc;&#x1c;%*:��*~���&#x12;�``�&#xf;]��0:&#x1f;��J0����B@Х��^?|p��Y�&apos;+���&#x15;}g�{�T&#xf;*&#x3;ߺ���-{0�;�3��&lt;E&#xf;��&#xc;�8#�G�G&#x10;&#xf;+F�&#x1d;&#x6;,!�&#x1b;����P����&#x7;&#x1e;�靊&apos;��{a\&#x11;W�S&#xc;_&#x19;X�ae6�̱=C��s���)y5&#x0;��?&#x1c;&#x6;��X�}o�b�r&#x7;&#x15;&#xd;á��]1&#x10;���(��?Ig�-�$&#x2;&#x0;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/submit/telemetry/c6815528-3eac-49dd-8473-3207db83987c/main/Firefox/116.0.3/release/20230815173142?v=4</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Date" elementType="Header">
                      <stringProp name="Header.name">Date</stringProp>
                      <stringProp name="Header.value">Fri, 22 Sep 2023 17:33:58 GMT</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">no-cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">cross-site</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Content-Encoding" elementType="Header">
                      <stringProp name="Header.name">Content-Encoding</stringProp>
                      <stringProp name="Header.value">gzip</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-81" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="product" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">product</stringProp>
                      <stringProp name="Argument.value">firefox-117.0.1-partial-116.0.3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="os" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">os</stringProp>
                      <stringProp name="Argument.value">win64</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lang" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">lang</stringProp>
                      <stringProp name="Argument.value">en-US</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">download.mozilla.org</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">/</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
                <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">no-cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">none</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/pub/firefox/releases/117.0.1/update/win64/en-US/firefox-116.0.3-117.0.1.partial.mar-82" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">download-installer.cdn.mozilla.net</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">/pub/firefox/releases/117.0.1/update/win64/en-US/firefox-116.0.3-117.0.1.partial.mar</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
                <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">no-cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">none</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/tiles-83" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">contile.services.mozilla.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">/v1/tiles</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">cross-site</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/telemetry/894fe76d-b478-4471-856b-f85382670cc9/event/Firefox/116.0.3/release/20230815173142?v=4-84" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�Z	�۸&#x15;�+��-v��V�at�̕d�q0�c�6&#x8;&#x6;�H���&#xd;
%��&#x4;&#x3;�G�&#x17;���=R��&#x19;�l�n��&#x5;������w|�p&gt;�ݪ����&#xb;^u�)&#x18;|�&#x13;?�Q�H�G1���!q&#x10;�$�&#x3;/v��β&#x4;h3�i&apos;��v�µ]��	q�+&apos;����&#xd;,���&#x1;�&#xb;.[ 4&apos;��I��&#x10;�:hN&gt;�Tfs���%2��C&#x12;�p$�E����&#x5ce;���&lt;�wa��%��&#x14;����6{�qB˶&lt;Xc�m&#xd;
��e�&#x16;&lt;��&#x12;���&apos;Q&#x14;&#x14;����kY�#�k��&lt;L���&amp;�I�.2|��V&#x15;/`]�Ӗ�������2|&#x1a;��U�&#x1a;.E�&#x4;�id����D�ێ��9q�$p#;&#xc;m���l�&#x4;�P��&quot;�1?�IN���9&#xb;HjG6�(��(���������Syf3�E&#x1e;q&#x2;�&#x12;?�}�:6#n��ЏR&apos;&#xe;&#x19;�*�;Eӷ�u&#xf;&#xe;0�˕+����J�����g�n&#x14;;&#x1e;�&amp;&#x17;&quot;�7�&#x7f;�A|4ժ�m�&#x1f;w��&#x11;U^×&#xe;tR�N��&#x16;�m&#x1e;|6ۺ�&#x19;Z�&#x1;�!��{%�zZ��&#x1f;&#xe;�&#x1e;&apos;t&#x1d;?&#xe;��|��u�Z%&#x15;&#x15;&#x12;×�&#xe;T&amp;Qn���n!��&lt;���&#x0;�uS7&#x1c;&#x15;�^&#x12;�A&#x4;�5��|&apos;��������`V&apos;���&#x1c;�|��&gt;I\�&#xb;�pK��v~E&#x10;�&#x17;�y1&#x1c;��#&#x6;�&#x13;���we]�&#xe;&#x1c;z-�&#x1c;�&#xd;
�Һ��&#x12;H��ust� ��J&#x14;��f&#x8;����宻Q۸SW�W�&#x13;��i}w����o&#x15;z}X-~��O����&#x1e;9&#xd;
�Q&#xd;&#x14;~&#x16;�&#x1b;&#x12;&apos;�9��cI���&lt;�&lt;pބQdǫ��uU*����F!�&#x6;�&#x14;��&lt;�m��#��&#x18;C���$�9q&lt;�ф&apos;�&#x17;���&#xe;��}&#x8;M�&#x0;o��l&#xf;d=&#x3;p߄f}�&#x0;��ႊ��&#x5;H�ɞ+D�]&#x5;�&#xe;*�;;)�~�#e����J�5��C��y�t�FԝӨT&#x8;��&#x1f;@�v�v�DYJ^�r5=&#x2;�t�&#x8;|&#xd;��&#x1;�L�Z�|X��&#x18;\���h�����&#xc;��Ӣ尫���O&#x12;�q����W���Y&#x5;h��&lt;���&#x17;?&#x18;�p����&#xf;�&#x8;��:��8&gt;�6^&#x18;�&#x15;د^&#x7f;�&#x13;9-E�2&apos;�Y­�&#x0;$�74��f�$&#x1;,s3���� �&#x1b;&#x0;]��=;&#x2;iچs6&#x5;v&#x13;�O\���W�eT�9��t�7�&#xd;
&gt;\^��&#x1f;������Կq�&gt;&#xf;ć�&#xc;�&#xe;O/MTw�� M&#x15;��9&#x5;����=䵜w�\��Z&lt;&#x7;��^&#x1a;4�A�]&#x7;&#x7;&#x14;TY(���B*r}i�9�f�S�O����(�aq�&#x19;&#x1f;a8���&#x14;�T��u}t&#x1;���&#x18;�3g*�SQQ�RN�mb^^9�x�Lm?&amp;�i�D����&#x18;&#x4;�Mg��^���T/�\���#�-��v6�g��!�&#x13;���&#x8;fk#����A&#xf;&#x16;�k��;&#x2;ub~�Ko&#x5;��kNY&#x1;�;&#x6;�)h�1�Ϊ&#x1;�.8-D�&#x1a;	�����&#x4;S_�R�&#x7;�PF&#x1b;�&#x13;tQ�&#xd;�fR4��ۄ��&#x13;㕤�\d��ÛF�;;�G��v&#x1c;�*��݇5�	á�Y�z-�c�1�^&#x1c;N�W0)&#x16;�	����d�&#xc;}&#x3;&gt;:��o�?+&#x12;��,�~6�&#xc;&#x7f;&#x19;`a��am˙�؂�}7؜&#x19;��86qm&#x7;�����ì��&#x1;b? 6�&#x1c;��&#x5;��z�������j�5&#x17;�9`�c�6�C&#xe;x5ߨ�iy��&#x13;�&#x17;&#x6;� �&#x1c;��^A�g����[��&apos;撧P�1U�̗�Ö�%���SX��1#��5��.a��ٰ}�D&#x1e;o	�&#x14;&#x15;�Q��)���o�����&apos;�&#x18;����&#xd;�}I`#�.�lF��&#x0;gAm�s*��:lR&#x0;��&#x2;R&#x16;F�V1��_��t,&#x7;��^&#x17;&#xc;&#x1c;�P�I���&#x0;�&#x8;nt���(E�3U�T�0B�&#xd;
�&quot;�u[�q&#x2;h��6&#xe;�}08&#x12;��&#xd;
^���s&#x8;�%`8&#x1e;&#x1f;��x�^C���X/�4Y߫�&#x1f;^L�%&#x4;*ޡ&#x15;��G=&lt;�&#x15;��&#xd7a5;i_tb�&#x1c;��&#x18;ERe�&#x3;�m&#x18;�&#x7;�&#x1e;%	Qu�n�T#��&#x1b;E�4�iP&#x15;kK��l�}�&#x1a;�&#x1f;�`�H��&quot;��3��&#x16;���]BM@��7�&#x1b;Z�z0�&#x3;&amp;Jߺ�R!���D�&#x1d;�P(�N�e�;��&#x11;�Uf&#x12;�&#x17;6Vj��R��&#xc;$��\Z���&#x1b;�&#x16;&#x0;�&#x15;�h�&#x7;z]ӵ&#x1c;kUK?&#xd;Q���h&#x13;&#xd;
s@zK@��8�b�&#x1;�^&#x16;)�&#x16;��R��&#xd;��߶T�&#x0;&#x1c;|&#xd;n&#x4;�ܓ�&#xd;�X�^�.&#x16;�&#x12;����j���&#x1c;&#x1e;v��S�����^d�m?&#x3;#t&#x16;h�&#x1e;�E&#x1;�8��&#x5ee;[��a&#x1;]Q��&#x1f;(����&#x17;�Jᯒn�P%g�Z��!�&#x7;!qUж;�u�&#x1a;&amp;�&#x19;���q�&#x3;���l�&#x8;�Au&#x13;��&#x12;��&#x10;G�}�-x�b�A�JYˉ�9&#x19;l &#x1;S&#x1a;&#xb;A�K]�]�h&gt;04�N&#xc;��&#x18;&quot;�rXQ�fp�v&#xc; :1�&#x3;C��&#x13;�j&gt;&apos;��&#x10;x��&#xf;&#x1e;&#xe;�F�3V�W�&gt;�=wf�����&#x1f;I�C]�&#xd;
 D*��9�n�iQ��O&#x11;��M��C&#xd;��������X�&#xe;��g�&#xd;&#x2;��&#x17;�!E�&#x16;O&#x11;t&#x12;|&#x16;&#x1a;���&#x1;\�(�&#x1;�.&#x10;�F&#xf;&#x1f;�&quot;ӕ�5�n�&#x1c;*&#x18;�&#xb;&#x12;��&#x1e;�&#x1c;�&#x1e;*Օ��&#xd;
�&#x14;]y�8��|&#x3;q-�XZ�:��9We�P�&#xe;��&#xd;_ ���ϩuHw�{&#xb;(}�.�N��&#xe;�q��W�i��q(�[�xeu�u&#x7;&lt;,&#x15;X�*]&gt;HU���K!�&#x1d;�H&#x1e;�M��&#x1f;V&#x0;O���a&#x8;|&#x7;�a\��w�&#x11;�&#x13;��A�&#x16;��}V�����T˙Z��[5e�ܵ�$�H�q&#x1c;S���9�I���vi�S;T�&quot;&#x1c;C��݃�ԗ*&#x11;�&#x10;H&#x14;[����ri��&#x1a;p&#x17;&#xc;�S���tr.�R�9P%&#xd;CݽܱJ���`}Z� &#x4;�X�$)a�^&#x12;(�)j&#x11;#Ꜫ��{e�&#xf;��!7�z2bi�&#xc;}�+E��7)�&#x19;�&#xc;7�&#x16;��%���&#x1b;��hh&apos;?����&#x1f;5���9�O�n�P�?}�I�][m��D�I�$R�&#x17;�x˷&#x16;�&#x7;&#x17;S��*&apos;&gt;&#x1c;���&#x6;S$0-^l�&#xd;
���Ih7�&#x15;Y�M�3v��t`��`7&#x0;��&gt;����m�}�&#x1d;OO�#딃��0�^��z&quot;��&#x4;&gt;���tɹ&#x1e;��s���=�.R�G�M�P�=Z&#x3;=@�S&#xd;&#x8;&lt;.C�|��w�&#x17;TzV�.Z5���?�Tb=\�Y���hu�4��ٽ�D2&#x1a;W�ѝ��&#xf;�&#x1b;���&#x1a;�|)�xk�F&#xd;hΌl&#x1b;ٌ���ƹ~&#x1e;&#x11;&#x15;&#x19;&gt;n�h�w����2���yݵO[�K~�1e^�[n&#x0;&#xd;
5�&#x1;9��z��&#x3;&#x6;&#x1b;ݜ&#x1b;p�ޤ&#xb;�&#xb;��A�&#x12;��X&#x19;`}H&#x1;P&amp;������4�r��&#xf;ga�k���D�&#x13;Z��7F��&#xc;td4uۑ�&#x13;4��v�~h��j��&#x11;����Ԕ��eK0&amp;��J��&apos;�!e&#x13;��b7�&#x7f;&#x1;�A�W/Ux��%�	��[|c&#x18;h(&#x5;C�ց�&#xe;&#xc;(�z�&#x1f;��0B�R�v&#x4;&#x15;[��Ͽ�m`��&#x1a;&#x5;o&apos;&#xc;o��o�z�6v�W�&#x1a;��x5=/z��T��1ڍ&#x13;��,��7&#x15;��q��{&#x17;���pp������h�&#xd;�HE�W�F��&#x14;�z��.�@p&#x1b;��H4u�&#x7f;�&#x3;&#xf;�&#x16;z���&#xd;�fn^�2���&#x14;N]�s��=1K�4�mF��s�O�$ԧ�s�,�s&#x16;%I���\6�22���&#xd;
�������i&#x1e;�v&#x1c;�$�}F�&#x14;�{h�3�%v���&#x1d;d,5�&#x7f;&#xe;&quot;��IU�b&#x1e;&#x1f;��&#x14;��d&#x4;��&#x11;�q��&apos;yF��d�&#xf;��ĉ&#x17;���y�@+&#x12;9��&#x6;\ &#xb;�m������;��K�oO�P��N&#x18;��C�(�A/`�&#x14;�U&#x4;cn�DN�$n�s���&#x2;,˷u�&quot;&#x0;&#x0;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/submit/telemetry/894fe76d-b478-4471-856b-f85382670cc9/event/Firefox/116.0.3/release/20230815173142?v=4</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Date" elementType="Header">
                      <stringProp name="Header.name">Date</stringProp>
                      <stringProp name="Header.value">Fri, 22 Sep 2023 17:48:25 GMT</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">no-cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">cross-site</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Content-Encoding" elementType="Header">
                      <stringProp name="Header.name">Content-Encoding</stringProp>
                      <stringProp name="Header.value">gzip</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v3/firefox/global-recs-88" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="version" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">version</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="consumer_key" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">consumer_key</stringProp>
                      <stringProp name="Argument.value">40249-e88c401e1b1f2242d9e441c4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="locale_lang" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">locale_lang</stringProp>
                      <stringProp name="Argument.value">en-US</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="region" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">region</stringProp>
                      <stringProp name="Argument.value">IN</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="count" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">count</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">getpocket.cdn.mozilla.net</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/v3/firefox/global-recs</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">cross-site</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/tiles-87" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">contile.services.mozilla.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">/v1/tiles</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">cross-site</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/tiles-89" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">contile.services.mozilla.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">/v1/tiles</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">cross-site</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
              <stringProp name="IfController.condition">${__groovy(vars.get(&apos;checkbox_value&apos;) == &apos;true&apos;)}</stringProp>
            </IfController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller SI" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/update/6/Firefox/116.0.3/20230815173142/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%2010.0.0.0.19045.3448%20(x64)/ISET:SSE4_2,MEM:12171/default/default/update.xml-107" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="force" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">force</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">aus5.mozilla.org</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/update/6/Firefox/116.0.3/20230815173142/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%2010.0.0.0.19045.3448%20(x64)/ISET:SSE4_2,MEM:12171/default/default/update.xml</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                  <boolProp name="HTTPSampler.image_parser">false</boolProp>
                  <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                  <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                  <boolProp name="HTTPSampler.md5">false</boolProp>
                  <intProp name="HTTPSampler.ipSourceType">0</intProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">cross-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                      </elementProp>
                      <elementProp name="Cache-Control" elementType="Header">
                        <stringProp name="Header.name">Cache-Control</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Pragma" elementType="Header">
                        <stringProp name="Header.name">Pragma</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-108" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="order.cardType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.cardType</stringProp>
                        <stringProp name="Argument.value">Visa</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.creditCard" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">order.creditCard</stringProp>
                        <stringProp name="Argument.value">999 9999 9999 9999</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.expiryDate" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">order.expiryDate</stringProp>
                        <stringProp name="Argument.value">12/03</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.billToFirstName" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billToFirstName</stringProp>
                        <stringProp name="Argument.value">Shashi</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.billToLastName" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billToLastName</stringProp>
                        <stringProp name="Argument.value">K</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.billAddress1" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billAddress1</stringProp>
                        <stringProp name="Argument.value">Nago</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.billAddress2" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billAddress2</stringProp>
                        <stringProp name="Argument.value">Upl</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.billCity" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billCity</stringProp>
                        <stringProp name="Argument.value">HYD</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.billState" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billState</stringProp>
                        <stringProp name="Argument.value">TS</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.billZip" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billZip</stringProp>
                        <stringProp name="Argument.value">500486</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.billCountry" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billCountry</stringProp>
                        <stringProp name="Argument.value">india</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="shippingAddressRequired" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">shippingAddressRequired</stringProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="newOrder" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">newOrder</stringProp>
                        <stringProp name="Argument.value">Continue</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="_sourcePage" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">_sourcePage</stringProp>
                        <stringProp name="Argument.value">pQATlazP3kL0DjRdMg_oRt3vjOzrIyMtv4ok3nolKN09Uw3MKY27ob0MISqNWe_d6FHGCLq7U63LZPZ6VZM5U33SaiOHtSHqefsP0Psg7yQ=</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="__fp" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">__fp</stringProp>
                        <stringProp name="Argument.value">fyEOWHRC0AiGr_pGPL8z13frtADuX6jufB8-e0_D4GVTTvVcQh3LSudQGujfsN4HICpFKUNcxFEPNggQ68y95aJqHrVWduODa4LU70Zb1wB_cNQiMzAxiQ==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                  <boolProp name="HTTPSampler.image_parser">false</boolProp>
                  <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                  <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                  <boolProp name="HTTPSampler.md5">false</boolProp>
                  <intProp name="HTTPSampler.ipSourceType">0</intProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action?newOrderForm=</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/pageload/1/b3cba220-16e1-4a08-804d-1f7c17e2b4b8-109" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��Xَ�6&#x14;�&#x17;�f&#x18;p&#x17;�&gt;&#x6;MS�&#x8;Ї�&#x10;�P�&#x1a;�R%z�&#x4;��!�e,S��e&#x2;&#xc;&#x6;�D]�s�&#xb;�#j*=O*]���Gԩ��&#x19;~�:��&amp;1�JE�&#x8;CL&#x0;�&#x0;�&#x18;Ϡ�&#x0;ٌ��!R�&#x18;[Cf&#x14;�״*�jmW�E��E�,܋ύj��t�]�&#x6;�&#x5;0j�Vʴ/����zm�ìMu��&#x6;�Z&#x1b;{�&#x7f;ݴ�{��[��|*슴�&#x19;&#x14;&#x2;&#x3;.h&#x1;h�R b��\¬�$dy����K� �j����V��&#xf;Q�=�j�ԭ&#x1;�Œvj&#x14;��i�T�m�!�q�&#xf;�XsI���&#x5;�9A��&quot;&#x3;2�) &#x8;�9,�XJ�c����Zw`U���؟��;�O���-&#x0;B&lt;�i�&#x0;&#x11;&amp;��e&#xe;&#xd;
&quot;s@Y.���&#x3;�JU&quot;&#xc;a�P&#xf;p�XT�&#x2;]S�e5_�Q �&#xd;
�8�&#x13;�+�,�T &#x0;cV��Y�de�@Q�R�(G&#x12;Oů�ಲ��z�+*�oI���n&#x1f;F&gt;&#x8f;N�O�.�n� ��U��h�$��!���Q����&#x1b;�&#x17;6&#xb;��8&#x0;H�&#x10;@�&#x16;}�p��}��ۅe�v&amp;i�z�x� &#x2;�������7&#x10;�e�4{�n5&#x14;��� ���6_TF�f�:kς&apos;�n_*��Y�/�h&#x11;�&#xc;��y�H�VK{&#x7f;+����q�}�X&apos;�L�	�j�&#x19;�&#x1e;�x�u�b��$-�&#xd;��)ޤs�,�8���N�&#x1;�������&#x98;�aq8�&#x2;`��;��&#x14;��)tgM�����s���暓�����I�V�J&apos;:}�u�VNv&#x3;؂2r1�&#x13;�&#x1d;�j����^[���`P���y`ko��J�&apos;;��!&#x7f;&#x4;c��$0Ɯ�!F&apos;�&#xf;C�·�ѓn��KԳ��nyt(�X^J�v����p&#x18;�3�&#x18;8ͣ.�Ht���R&quot;&#x8;%��mkU�1&#x4;l&#x1c;�&#x11;�q�&#x5;�&#x16;b\p)n&#x1;��8V��?����#�x(�2�_&quot;lUx�&#x1b;c��&#x18;]���,��&#x4;�Q*&#x3;ʂ�0&amp;&gt;�3q1n/�&#x6;&#x1e;b�8GX߂�riR�|*w&#x6;�}~�av�����}�&#xe;&#xb;�D�&#x19;/ɗu&#x4;�K&gt;SIq,oe���n�!	&#xe;H�&#xc;	D��k��B:&#x1d;P&#x6;��&#x1;�l�&#xc;&#x82;�;�&#x19;�&#x10;?βx��))&#xe;����&#xc;&quot;�b���7&#xf;�3&#x1e;��&#x3;Gp�.��`b&#x3;��=���V&#x18;,F�&#x15;L,}�T&#x8;�/N�PL��ŉ��|X�&#x18;��G�&#x11;F�mSJ?�\&#x1b;��z&#x10;�&quot;�S���T&#x14;,����0&#x14;��8,��#�&#x8;&#x12;1�oTյS?c�D,Bچ�&#x10;D�~g�s%x�&apos;�&#xd;���Bi�&apos;���v��&#x3;�P�&#x12;1&#x6;�G/|��UvD��S��H�D�pz�H�0&#x1f;q�&lt;5�OM&#x13;��J�!�	��@~Ka���&#x19;��1:�c&quot;�0&#xb;]v����HF�&#x1f;P�&#x12;&#x2;Ko�g|��$1�OS8_]�E�^8l��	�i|S7�pz��jP&#xd;
K&#x19;&#x12;SA�\IwS7�,&#x15;&amp;GٱJJ�&#x15;�&#x1e;$��z&#x7f;����&quot;!gw�&#x1c;vY&#x1a;���&#xb;F8�3�_9�&#x4;�O$Nh��ןiͪ�:&#x1b;&#x0;&#x0;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/submit/firefox-desktop/pageload/1/b3cba220-16e1-4a08-804d-1f7c17e2b4b8</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                  <boolProp name="HTTPSampler.image_parser">false</boolProp>
                  <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                  <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                  <boolProp name="HTTPSampler.md5">false</boolProp>
                  <intProp name="HTTPSampler.ipSourceType">0</intProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="date" elementType="Header">
                        <stringProp name="Header.name">date</stringProp>
                        <stringProp name="Header.value">Fri, 22 Sep 2023 18:12:00 GMT</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">none</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                      </elementProp>
                      <elementProp name="content-encoding" elementType="Header">
                        <stringProp name="Header.name">content-encoding</stringProp>
                        <stringProp name="Header.value">gzip</stringProp>
                      </elementProp>
                      <elementProp name="Pragma" elementType="Header">
                        <stringProp name="Header.name">Pragma</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="x-telemetry-agent" elementType="Header">
                        <stringProp name="Header.name">x-telemetry-agent</stringProp>
                        <stringProp name="Header.value">Glean/53.0.0 (Rust on Windows)</stringProp>
                      </elementProp>
                      <elementProp name="content-type" elementType="Header">
                        <stringProp name="Header.name">content-type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Cache-Control" elementType="Header">
                        <stringProp name="Header.name">Cache-Control</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-110" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="order.shipToFirstName" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.shipToFirstName</stringProp>
                        <stringProp name="Argument.value">Vijay</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.shipToLastName" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.shipToLastName</stringProp>
                        <stringProp name="Argument.value">Kumar</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.shipAddress1" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">order.shipAddress1</stringProp>
                        <stringProp name="Argument.value">Street 4</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.shipAddress2" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">order.shipAddress2</stringProp>
                        <stringProp name="Argument.value">Line 24</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.shipCity" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.shipCity</stringProp>
                        <stringProp name="Argument.value">Deli</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.shipState" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.shipState</stringProp>
                        <stringProp name="Argument.value">DL</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.shipZip" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.shipZip</stringProp>
                        <stringProp name="Argument.value">48202</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="order.shipCountry" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.shipCountry</stringProp>
                        <stringProp name="Argument.value">india</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="newOrder" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">newOrder</stringProp>
                        <stringProp name="Argument.value">Continue</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="_sourcePage" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">_sourcePage</stringProp>
                        <stringProp name="Argument.value">32oEBDi0h7FHiXRqQlCjff7_NS5muQI9nfbrjFm5zm3PnabBngnrtdRk1a3S0B8vggVXY6wyaepXQtUEOqMpuvCGnlh7_uLisqIyiR8IPjc=</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="__fp" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">__fp</stringProp>
                        <stringProp name="Argument.value">o4t_GxAWSnHTHPMOnT6gyl3AEOidCt-P56PfrFP5Ut9s7rtPt1GYeltYa5PF8uUt</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                  <boolProp name="HTTPSampler.image_parser">false</boolProp>
                  <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                  <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                  <boolProp name="HTTPSampler.md5">false</boolProp>
                  <intProp name="HTTPSampler.ipSourceType">0</intProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OrderConfirmation SI" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-111" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="newOrder" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">newOrder</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="confirmed" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">confirmed</stringProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                  <boolProp name="HTTPSampler.image_parser">false</boolProp>
                  <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                  <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                  <boolProp name="HTTPSampler.md5">false</boolProp>
                  <intProp name="HTTPSampler.ipSourceType">0</intProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;

Random random = new Random();
boolean randomValue = random.nextBoolean();

vars.put(&quot;checkbox_value&quot;, String.valueOf(randomValue));</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="checkbox_value" elementType="Argument">
                <stringProp name="Argument.name">checkbox_value</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${__Random(0,1,)}</stringProp>
                <stringProp name="Argument.desc">ariable to store the state of the checkbox (0 for false, 1 for true)</stringProp>
              </elementProp>
              <elementProp name="auto" elementType="Argument">
                <stringProp name="Argument.name">auto</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Order Confirmation &amp; Get ID" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-77" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="newOrder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">newOrder</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="confirmed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">confirmed</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Fill Payment &amp; Billing Details" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Fill Shipping Details" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Session Sign Out" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action-112" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="signoff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signoff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-113" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\DATA\apache-jmeter-5.6.2\Test_Scenarios\assignment_log.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
